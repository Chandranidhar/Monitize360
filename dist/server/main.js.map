{"version":3,"sources":["webpack/bootstrap","./dist/login/login.d.ts.LoginComponent.html","./dist/login/login.d.ts.ɵb.html","./dist/login/login.d.ts.ɵc.html","./dist/login/login.d.ts.ɵd.html","./dist/login/login.d.ts.ɵe.html","./node_modules/@angular/material/autocomplete/typings/index.d.ts.MatAutocomplete.html","./node_modules/@angular/material/bottom-sheet/typings/index.d.ts.MatBottomSheetContainer.html","./node_modules/@angular/material/button/typings/index.d.ts.MatButton.html","./node_modules/@angular/material/button/typings/index.d.ts.MatAnchor.html","./node_modules/@angular/material/card/typings/index.d.ts.MatCard.html","./node_modules/@angular/material/card/typings/index.d.ts.MatCardHeader.html","./node_modules/@angular/material/card/typings/index.d.ts.MatCardTitleGroup.html","./node_modules/@angular/material/checkbox/typings/index.d.ts.MatCheckbox.html","./node_modules/@angular/material/core/typings/index.d.ts.MatOption.html","./node_modules/@angular/material/core/typings/index.d.ts.MatOptgroup.html","./node_modules/@angular/material/datepicker/typings/index.d.ts.MatCalendarHeader.html","./node_modules/@angular/material/datepicker/typings/index.d.ts.MatCalendar.html","./node_modules/@angular/material/datepicker/typings/index.d.ts.MatCalendarBody.html","./node_modules/@angular/material/datepicker/typings/index.d.ts.MatDatepickerContent.html","./node_modules/@angular/material/datepicker/typings/index.d.ts.MatDatepickerToggle.html","./node_modules/@angular/material/datepicker/typings/index.d.ts.MatMonthView.html","./node_modules/@angular/material/datepicker/typings/index.d.ts.MatYearView.html","./node_modules/@angular/material/datepicker/typings/index.d.ts.MatMultiYearView.html","./node_modules/@angular/material/dialog/typings/index.d.ts.MatDialogContainer.html","./node_modules/@angular/material/expansion/typings/index.d.ts.MatExpansionPanel.html","./node_modules/@angular/material/expansion/typings/index.d.ts.MatExpansionPanelHeader.html","./node_modules/@angular/material/form-field/typings/index.d.ts.MatFormField.html","./node_modules/@angular/material/icon/typings/index.d.ts.MatIcon.html","./node_modules/@angular/material/list/typings/index.d.ts.MatNavList.html","./node_modules/@angular/material/list/typings/index.d.ts.MatList.html","./node_modules/@angular/material/list/typings/index.d.ts.MatListItem.html","./node_modules/@angular/material/list/typings/index.d.ts.MatListOption.html","./node_modules/@angular/material/list/typings/index.d.ts.MatSelectionList.html","./node_modules/@angular/material/menu/typings/index.d.ts._MatMenu.html","./node_modules/@angular/material/menu/typings/index.d.ts.MatMenuItem.html","./node_modules/@angular/material/paginator/typings/index.d.ts.MatPaginator.html","./node_modules/@angular/material/progress-spinner/typings/index.d.ts.MatProgressSpinner.html","./node_modules/@angular/material/progress-spinner/typings/index.d.ts.MatSpinner.html","./node_modules/@angular/material/select/typings/index.d.ts.MatSelect.html","./node_modules/@angular/material/snack-bar/typings/index.d.ts.MatSnackBarContainer.html","./node_modules/@angular/material/snack-bar/typings/index.d.ts.SimpleSnackBar.html","./node_modules/@angular/material/sort/typings/index.d.ts.MatSortHeader.html","./node_modules/@angular/material/table/typings/index.d.ts.MatTable.html","./node_modules/@angular/material/table/typings/index.d.ts.MatHeaderRow.html","./node_modules/@angular/material/table/typings/index.d.ts.MatFooterRow.html","./node_modules/@angular/material/table/typings/index.d.ts.MatRow.html","./node_modules/@angular/material/table/typings/index.d.ts.MatTextColumn.html","./node_modules/@angular/material/toolbar/typings/index.d.ts.MatToolbar.html","./node_modules/@angular/material/tooltip/typings/index.d.ts.TooltipComponent.html","./node_modules/@angular/router/router.d.ts.ɵangular_packages_router_router_l.html","./node_modules/ckeditor4-angular/ckeditor4-angular.d.ts.CKEditorComponent.html","./node_modules/listing-angular7/listing-angular7.d.ts.ListingComponent.html","./node_modules/listing-angular7/listing-angular7.d.ts.Confirmdialog.html","./node_modules/listing-angular7/listing-angular7.d.ts.BottomSheet.html","./src/app/_helpers/must-match.validator.ts","./src/app/app-routing.module.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/app.server.module.ts","./src/app/components/addadmin/addadmin.component.html","./src/app/components/addadmin/modale.html","./src/app/components/addadmin/addadmin.component.ts","./src/app/components/adminheader/adminheader.component.html","./src/app/components/adminheader/adminheader.component.ts","./src/app/components/adminlist/adminlist.component.html","./src/app/components/adminlist/adminlist.component.ts","./src/app/components/billing-details/billing-details.component.html","./src/app/components/billing-details/billing-details.component.ts","./src/app/components/editprofile/editprofile.component.html","./src/app/components/commonModal/commonModal.html","./src/app/components/editprofile/editprofile.component.ts","./src/app/components/forget/forget/forget.component.html","./src/app/components/forget/forget/forget.component.ts","./src/app/components/login/login/login.component.html","./src/app/components/login/login/login.component.ts","./src/app/components/orders/orders.component.html","./src/app/components/orders/orders.component.ts","./src/app/components/purchasedata/purchasedata.component.html","./src/app/components/purchasedata/purchasedata.component.ts","./src/app/components/resetpassword/resetpassword.component.html","./src/app/components/resetpassword/resetpassword.component.ts","./src/app/components/signup/signup.component.html","./src/app/components/signup/signup.component.ts","./src/app/components/support/support.component.html","./src/app/components/support/support.component.ts","./src/app/components/user-dashboard/user-dashboard.component.html","./src/app/components/user-dashboard/user-dashboard.component.ts","./src/app/components/userlist/userlist.component.html","./src/app/components/userlist/userlist.component.ts","./src/app/modules/material-module.ts","./src/app/services/api-service.ts","./src/app/services/auth.guard.ts","./src/app/services/resolve-service.ts","./src/environments/environment.ts","./src/main.server.ts","external \"@angular/animations\"","external \"@angular/animations/browser\"","external \"@angular/cdk/a11y\"","external \"@angular/cdk/accordion\"","external \"@angular/cdk/bidi\"","external \"@angular/cdk/collections\"","external \"@angular/cdk/drag-drop\"","external \"@angular/cdk/keycodes\"","external \"@angular/cdk/layout\"","external \"@angular/cdk/observers\"","external \"@angular/cdk/overlay\"","external \"@angular/cdk/platform\"","external \"@angular/cdk/portal\"","external \"@angular/cdk/scrolling\"","external \"@angular/cdk/stepper\"","external \"@angular/cdk/table\"","external \"@angular/cdk/text-field\"","external \"@angular/cdk/tree\"","external \"@angular/common\"","external \"@angular/common/http\"","external \"@angular/core\"","external \"@angular/forms\"","external \"@angular/material\"","external \"@angular/material/autocomplete\"","external \"@angular/material/badge\"","external \"@angular/material/bottom-sheet\"","external \"@angular/material/button\"","external \"@angular/material/button-toggle\"","external \"@angular/material/card\"","external \"@angular/material/checkbox\"","external \"@angular/material/chips\"","external \"@angular/material/core\"","external \"@angular/material/datepicker\"","external \"@angular/material/dialog\"","external \"@angular/material/divider\"","external \"@angular/material/expansion\"","external \"@angular/material/form-field\"","external \"@angular/material/grid-list\"","external \"@angular/material/icon\"","external \"@angular/material/input\"","external \"@angular/material/list\"","external \"@angular/material/menu\"","external \"@angular/material/paginator\"","external \"@angular/material/progress-bar\"","external \"@angular/material/progress-spinner\"","external \"@angular/material/radio\"","external \"@angular/material/select\"","external \"@angular/material/sidenav\"","external \"@angular/material/slide-toggle\"","external \"@angular/material/slider\"","external \"@angular/material/snack-bar\"","external \"@angular/material/sort\"","external \"@angular/material/stepper\"","external \"@angular/material/table\"","external \"@angular/material/tabs\"","external \"@angular/material/toolbar\"","external \"@angular/material/tooltip\"","external \"@angular/material/tree\"","external \"@angular/platform-browser\"","external \"@angular/platform-browser/animations\"","external \"@angular/platform-server\"","external \"@angular/router\"","external \"@ng-toolkit/universal\"","external \"@nguniversal/common\"","external \"@nguniversal/module-map-ngfactory-loader\"","external \"ckeditor4-angular\"","external \"listing-angular7\"","external \"login\"","external \"ngx-cookie-service\"","external \"ngx-moment\"","external \"ngx-uploader\"","external \"rxjs/operators\""],"names":[],"mappings":"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;ACAA,kD;;;;;;;;;;;ACAA,gD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,iD;;;;;;;;;;;ACAA,+C;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,8C;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,iD;;;;;;;;;;;ACAA,0C;;;;;;;;;;;ACAA,2C;;;;;;;;;;;ACAA,8C;;;;;;;;;;;ACAA,2D;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,2D;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,4D;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,uD;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,yD;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,yD;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,2D;;;;;;;;;;;ACAA,+D;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,2D;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,wD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,oD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,mD;;;;;;;;;;;ACAA,sD;;;;;;;;;;;ACAA,iE;;;;;;;;;;;ACAA,qD;;;;;;;;;;;ACAA,4C;;;;;;;;;;;ACAA,kD;;;;;;;;;;;ACAA,gD;;;;;;;;;;;ACAA,qE;;;;;;;;;;;ACAA,8C;;;;;;;;;;;ACAA,6C;;;;;;;;;;;ACAA,kC;;;;;;;;;;;ACAA,+C;;;;;;;;;;;ACAA,uC;;;;;;;;;;;ACAA,yC;;;;;;;;;;;ACAA,2C","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","<div class=\"main-div\">\r\n\r\n    <mat-card class=\"from\">\r\n            <span class=\"logowrapper\" *ngIf=\"logoValue != ''\" >\r\n                    <img  [src]=\"logoValue\">\r\n                </span>\r\n\r\n        <h2 *ngIf=\"fromTitleValue != ''\"> {{fromTitleValue}}</h2>\r\n\r\n        <form class=\"example-container\" [formGroup]=\"loginForm\" (ngSubmit)=\"loginFormSubmit()\" novalidate>\r\n<mat-error class=\"error\" *ngIf=\"message !=''\">{{message}}</mat-error>\r\n\r\n            <mat-form-field>\r\n                <input matInput type=\"text\" placeholder=\"Email\" formControlName=\"email\" (blur)=\"inputUntouched('email')\">\r\n                <mat-error\r\n                    *ngIf=\"!loginForm.controls['email'].valid && loginForm.controls['email'].errors.required && loginForm.controls['email'].touched\">\r\n                    Email field can not be blank</mat-error>\r\n            </mat-form-field>\r\n\r\n\r\n            <mat-form-field>\r\n                <input matInput placeholder=\"Password\" type=\"password\" formControlName=\"password\" (blur)=\"inputUntouched('password')\">\r\n                <mat-error\r\n                    *ngIf=\"!loginForm.controls['password'].valid && loginForm.controls['password'].errors.required && loginForm.controls['password'].touched\">\r\n                    Password field can not be blank</mat-error>\r\n            </mat-form-field>\r\n\r\n\r\n   \r\n            <button mat-raised-button *ngIf=\"buttonNameValue != ''\" color=\"primary\">{{buttonNameValue}}</button>\r\n            <button mat-raised-button *ngIf=\"buttonNameValue == ''\" color=\"primary\">Login</button>\r\n            \r\n            \r\n            \r\n            <span class=\"signupfooter\">\r\n  <a *ngIf=\"signUpRouteingUrlValue.buttonName !='' && signUpRouteingUrlValue.customLink =='' && signUpRouteingUrlValue.customURl =='' \" (click)=\"signup()\">{{signUpRouteingUrlValue.buttonName}}</a>\r\n\r\n                <a *ngIf=\"signUpRouteingUrlValue.buttonName !='' && signUpRouteingUrlValue.customLink !='' && signUpRouteingUrlValue.path =='' \" (click)=\"customFunction(signUpRouteingUrlValue.customLink)\">{{signUpRouteingUrlValue.buttonName}}</a>\r\n\r\n<a *ngIf=\"signUpRouteingUrlValue.customURl !='' && signUpRouteingUrlValue.buttonName !='' && signUpRouteingUrlValue.customLink ==''  && signUpRouteingUrlValue.path ==''\" [attr.href]=\"signUpRouteingUrlValue.customURl\">{{signUpRouteingUrlValue.buttonName}}</a>\r\n\r\n                <a *ngIf=\"signUpRouteingUrlValue.buttonName =='' && signUpRouteingUrlValue.customLink ==''\" (click)=\"signup()\">Sign Up</a>\r\n\r\n                    <a *ngIf=\"forgetRouteingUrlValue.buttonName !='' && forgetRouteingUrlValue.customLink =='' && forgetRouteingUrlValue.customURl ==''\" (click)=\"forgetpassword()\">{{forgetRouteingUrlValue.buttonName}}</a>\r\n\r\n                <a *ngIf=\"forgetRouteingUrlValue.buttonName !='' && forgetRouteingUrlValue.customLink !='' && forgetRouteingUrlValue.path =='' \" (click)=\"customFunction(forgetRouteingUrlValue.customLink)\">{{forgetRouteingUrlValue.buttonName}}</a>\r\n\r\n                <a *ngIf=\"forgetRouteingUrlValue.customURl !='' && forgetRouteingUrlValue.customLink =='' && forgetRouteingUrlValue.path ==''\" [href]=\"forgetRouteingUrlValue.customURl\">{{forgetRouteingUrlValue.buttonName}}</a>\r\n\r\n\r\n                <a *ngIf=\"forgetRouteingUrlValue.buttonName =='' && forgetRouteingUrlValue.customLink ==''\" (click)=\"forgetpassword()\">Forget Password</a> \r\n\r\n            </span>\r\n        </form>\r\n\r\n    </mat-card>\r\n\r\n</div>","<div class=\"as_formdiv\">\r\n<div class=\"main-div\">\r\n\r\n  <mat-card class=\"from\">\r\n      <span class=\"logowrapper\" *ngIf=\"logoValue != ''\" >\r\n          <img  [src]=\"logoValue\">\r\n      </span>\r\n\r\n    <h2 *ngIf=\"formTitleValue != ''\"> {{formTitleValue}}</h2>\r\n\r\n\r\n    <form class=\"example-container\" [formGroup]=\"signUpForm\"  (ngSubmit)=\"signUpFormSubmit()\" novalidate>\r\n\r\n\r\n      <mat-error class=\"error\" *ngIf=\"message != ''\">{{message}}</mat-error>\r\n      <mat-form-field>\r\n        <input matInput type=\"text\" placeholder=\"First Name\" formControlName=\"firstname\" (blur)=\"inputUntouched('firstname')\">\r\n        <mat-error\r\n          *ngIf=\"!signUpForm.controls['firstname'].valid && signUpForm.controls['firstname'].errors.required && signUpForm.controls['firstname'].touched\">\r\n          First Name field can not be blank</mat-error>\r\n      </mat-form-field>\r\n\r\n\r\n      <mat-form-field>\r\n        <input matInput type=\"text\" placeholder=\"Last Name\" formControlName=\"lastname\" (blur)=\"inputUntouched('lastname')\">\r\n        <mat-error\r\n          *ngIf=\"!signUpForm.controls['lastname'].valid && signUpForm.controls['lastname'].errors.required && signUpForm.controls['lastname'].touched\">\r\n          Last Name field can not be blank</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput type=\"text\" placeholder=\"Email\" formControlName=\"email\" (blur)=\"inputUntouched('email')\">\r\n        <mat-error\r\n          *ngIf=\"!signUpForm.controls['email'].valid && signUpForm.controls['email'].errors.required && signUpForm.controls['email'].touched\">\r\n          Email field can not be blank</mat-error>\r\n        <mat-error *ngIf=\"!signUpForm.controls['email'].valid && !signUpForm.controls['email'].errors.required\">Email is\r\n          not valid</mat-error>\r\n      </mat-form-field>\r\n\r\n\r\n      <!-- added by sourav -->\r\n      <mat-form-field>\r\n        <input matInput type=\"text\" placeholder=\"Phone Number\" formControlName=\"phone\" (blur)=\"inputUntouched('phone')\">\r\n        <mat-error\r\n          *ngIf=\"!signUpForm.controls['phone'].valid && signUpForm.controls['phone'].errors.required && signUpForm.controls['phone'].touched\">\r\n          Phone Number field can not be blank</mat-error>\r\n      </mat-form-field>\r\n\r\n\r\n   <!-- added by sourav -->\r\n\r\n      <mat-form-field>\r\n        <input matInput placeholder=\"Password\" type=\"password\" formControlName=\"password\" (blur)=\"inputUntouched('password')\">\r\n        <mat-error\r\n          *ngIf=\"!signUpForm.controls['password'].valid && signUpForm.controls['password'].errors.required && signUpForm.controls['password'].touched\">\r\n          Password field can not be blank</mat-error>\r\n      </mat-form-field>\r\n      <!-- added by sourav -->\r\n      <mat-form-field>\r\n        <input matInput placeholder=\"Confirm Password\" type=\"password\" formControlName=\"confirmpassword\" (blur)=\"inputUntouched('confirmpassword')\">\r\n        <mat-error\r\n          *ngIf=\"!signUpForm.controls['confirmpassword'].valid && signUpForm.controls['confirmpassword'].errors.required && signUpForm.controls['confirmpassword'].touched\">\r\n          Confirm Password field can not be blank</mat-error>\r\n          <mat-error *ngIf=\"signUpForm.hasError('mismatchedPasswords')\">Passwords must match</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput placeholder=\"Zip Code\" type=\"text\" formControlName=\"zip\" (blur)=\"inputUntouched('zip')\">\r\n        <mat-error\r\n          *ngIf=\"!signUpForm.controls['zip'].valid && signUpForm.controls['zip'].errors.required && signUpForm.controls['zip'].touched\">\r\n          Zip field can not be blank</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput placeholder=\"City\" type=\"text\" formControlName=\"city\" (blur)=\"inputUntouched('city')\">\r\n        <mat-error\r\n          *ngIf=\"!signUpForm.controls['city'].valid && signUpForm.controls['city'].errors.required && signUpForm.controls['city'].touched\">\r\n          City field can not be blank</mat-error>\r\n      </mat-form-field>\r\n\r\n \r\n      <mat-form-field>\r\n      <mat-label>State</mat-label>\r\n      <mat-select formControlName=\"state\">\r\n        <mat-option *ngFor=\"let state of state_usss\" [value]=\"state.abbreviation\">\r\n          {{state.name}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput placeholder=\"Company name\" type=\"text\" formControlName=\"companyname\">\r\n      \r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput placeholder=\"Designation in company\" type=\"text\" formControlName=\"designation\">\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput placeholder=\"Company website\" type=\"text\" formControlName=\"companywebsite\">\r\n      </mat-form-field>\r\n\r\n\r\n      <!-- added by sourav -->\r\n\r\n      <button mat-raised-button color=\"primary\">Sign Up</button>\r\n      <span class=\"signupfooter\">\r\n        <a (click)=\"forgetpassword()\">Forget Password</a>\r\n        <a (click)=\"login()\">Login</a>\r\n      </span>\r\n    </form>\r\n  </mat-card>\r\n</div></div>","<h1 mat-dialog-title>Thanks!</h1>\r\n<div mat-dialog-actions>\r\n  <p>Your account has been successfully created</p>\r\n  <!-- <button mat-button (click)=\"onNoClick()\">No Thanks</button>\r\n  <button mat-button  cdkFocusInitial>Ok</button> -->\r\n</div>","<div class=\"main-div\">\r\n\r\n  <mat-card class=\"from\">\r\n      <span class=\"logowrapper\" *ngIf=\"logoValue != ''\" >\r\n          <img  [src]=\"logoValue\">\r\n      </span>\r\n\r\n    <h2 *ngIf=\"formTitleValue != ''\"> {{formTitleValue}}</h2>\r\n\r\n\r\n    <form class=\"example-container\" [formGroup]=\"forgetPasswordForm\" (ngSubmit)=\"forgetPasswordSubmit()\" novalidate>\r\n<mat-error class=\"error\" *ngIf=\"message !=''\">{{message}}</mat-error>\r\n\r\n      <mat-form-field>\r\n        <input matInput type=\"text\" placeholder=\"Email\"  formControlName=\"email\" (blur)=\"inputUntouched('email')\">\r\n        <mat-error\r\n          *ngIf=\"!forgetPasswordForm.controls['email'].valid && forgetPasswordForm.controls['email'].errors.required && forgetPasswordForm.controls['email'].touched\">\r\n          Email field can not be blank</mat-error>\r\n        <mat-error\r\n          *ngIf=\"!forgetPasswordForm.controls['email'].valid && !forgetPasswordForm.controls['email'].errors.required\">\r\n          Email is not valid</mat-error>\r\n      </mat-form-field>\r\n\r\n      <button mat-raised-button color=\"primary\">Forget Password</button>\r\n      <span class=\"signupfooter\">\r\n        <a (click)=\"signup()\">Sign Up</a>\r\n      </span>\r\n    </form>\r\n  </mat-card>\r\n</div>","<div class=\"main-div\">\r\n\r\n  <mat-card class=\"from\">\r\n      <span class=\"logowrapper\" *ngIf=\"logoValue != ''\" >\r\n          <img  [src]=\"logoValue\">\r\n      </span>\r\n\r\n    <h2 *ngIf=\"fromTitleNameValue != ''\"> {{fromTitleNameValue}}</h2>\r\n\r\n\r\n    <form class=\"example-container\" [formGroup]=\"resetPasswordForm\" (ngSubmit)=\"resetPasswordSubmit()\" novalidate>\r\n<mat-error class=\"error\" *ngIf=\"message !=''\">{{message}}</mat-error>\r\n\r\n      <mat-form-field>\r\n        <input matInput placeholder=\"Password\" type=\"password\" formControlName=\"password\" (blur)=\"inputUntouched('password')\">\r\n        <mat-error\r\n          *ngIf=\"!resetPasswordForm.controls['password'].valid && resetPasswordForm.controls['password'].errors.required && resetPasswordForm.controls['password'].touched\">\r\n          Password field can not be blank</mat-error>\r\n          <!-- <mat-error  *ngIf=\"!resetPasswordForm.controls['password'].errors.required  && resetPasswordForm.controls['password'].touched\">Minimum length for password is 4!</mat-error> -->\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput placeholder=\"Confirm Password\" type=\"password\"  formControlName=\"confirmPassword\" (blur)=\"inputUntouched('confirmPassword')\">\r\n        <mat-error\r\n          *ngIf=\"!resetPasswordForm.controls['confirmPassword'].valid && resetPasswordForm.controls['confirmPassword'].errors.required && resetPasswordForm.controls['confirmPassword'].touched\">\r\n          Confirm Password field can not be blank</mat-error>\r\n        <!-- <mat-error *ngIf=\"f.confirmPassword.errors.mustMatch\">Confirm Password is not valid</mat-error> -->\r\n        <mat-error *ngIf=\"!resetPasswordForm.controls['confirmPassword'].valid && resetPasswordForm.controls['confirmPassword'].touched\">Password does not match </mat-error>\r\n      </mat-form-field>\r\n\r\n      <button mat-raised-button color=\"primary\">Reset Password</button>\r\n\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n\r\n<!-- <button (click)=\"openSnackBar('succes', 'ok')\"> ok</button> -->","<ng-template><div class=\"mat-autocomplete-panel\" role=\"listbox\" [id]=\"id\" [ngClass]=\"_classList\" #panel><ng-content></ng-content></div></ng-template>","<ng-template cdkPortalOutlet></ng-template>","<span class=\"mat-button-wrapper\"><ng-content></ng-content></span><div matRipple class=\"mat-button-ripple\" [class.mat-button-ripple-round]=\"isRoundButton || isIconButton\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleCentered]=\"isIconButton\" [matRippleTrigger]=\"_getHostElement()\"></div><div class=\"mat-button-focus-overlay\"></div>","<span class=\"mat-button-wrapper\"><ng-content></ng-content></span><div matRipple class=\"mat-button-ripple\" [class.mat-button-ripple-round]=\"isRoundButton || isIconButton\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleCentered]=\"isIconButton\" [matRippleTrigger]=\"_getHostElement()\"></div><div class=\"mat-button-focus-overlay\"></div>","<ng-content></ng-content><ng-content select=\"mat-card-footer\"></ng-content>","<ng-content select=\"[mat-card-avatar], [matCardAvatar]\"></ng-content><div class=\"mat-card-header-text\"><ng-content select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content></div><ng-content></ng-content>","<div><ng-content select=\"mat-card-title, mat-card-subtitle,\n      [mat-card-title], [mat-card-subtitle],\n      [matCardTitle], [matCardSubtitle]\"></ng-content></div><ng-content select=\"img\"></ng-content><ng-content></ng-content>","<label [attr.for]=\"inputId\" class=\"mat-checkbox-layout\" #label><div class=\"mat-checkbox-inner-container\" [class.mat-checkbox-inner-container-no-side-margin]=\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\"><input #input class=\"mat-checkbox-input cdk-visually-hidden\" type=\"checkbox\" [id]=\"inputId\" [required]=\"required\" [checked]=\"checked\" [attr.value]=\"value\" [disabled]=\"disabled\" [attr.name]=\"name\" [tabIndex]=\"tabIndex\" [indeterminate]=\"indeterminate\" [attr.aria-label]=\"ariaLabel || null\" [attr.aria-labelledby]=\"ariaLabelledby\" [attr.aria-checked]=\"_getAriaChecked()\" (change)=\"_onInteractionEvent($event)\" (click)=\"_onInputClick($event)\"><div matRipple class=\"mat-checkbox-ripple\" [matRippleTrigger]=\"label\" [matRippleDisabled]=\"_isRippleDisabled()\" [matRippleRadius]=\"20\" [matRippleCentered]=\"true\" [matRippleAnimation]=\"{enterDuration: 150}\"><div class=\"mat-ripple-element mat-checkbox-persistent-ripple\"></div></div><div class=\"mat-checkbox-frame\"></div><div class=\"mat-checkbox-background\"><svg version=\"1.1\" focusable=\"false\" class=\"mat-checkbox-checkmark\" viewBox=\"0 0 24 24\" xml:space=\"preserve\"><path class=\"mat-checkbox-checkmark-path\" fill=\"none\" stroke=\"white\" d=\"M4.1,12.7 9,17.6 20.3,6.3\"/></svg><div class=\"mat-checkbox-mixedmark\"></div></div></div><span class=\"mat-checkbox-label\" #checkboxLabel (cdkObserveContent)=\"_onLabelTextChange()\"><span style=\"display:none\">&nbsp;</span><ng-content></ng-content></span></label>","<mat-pseudo-checkbox *ngIf=\"multiple\" class=\"mat-option-pseudo-checkbox\" [state]=\"selected ? 'checked' : ''\" [disabled]=\"disabled\"></mat-pseudo-checkbox><span class=\"mat-option-text\"><ng-content></ng-content></span><div class=\"mat-option-ripple\" mat-ripple [matRippleTrigger]=\"_getHostElement()\" [matRippleDisabled]=\"disabled || disableRipple\"></div>","<label class=\"mat-optgroup-label\" [id]=\"_labelId\">{{ label }}<ng-content></ng-content></label><ng-content select=\"mat-option, ng-container\"></ng-content>","<div class=\"mat-calendar-header\"><div class=\"mat-calendar-controls\"><button mat-button type=\"button\" class=\"mat-calendar-period-button\" (click)=\"currentPeriodClicked()\" [attr.aria-label]=\"periodButtonLabel\" cdkAriaLive=\"polite\">{{periodButtonText}}<div class=\"mat-calendar-arrow\" [class.mat-calendar-invert]=\"calendar.currentView != 'month'\"></div></button><div class=\"mat-calendar-spacer\"></div><ng-content></ng-content><button mat-icon-button type=\"button\" class=\"mat-calendar-previous-button\" [disabled]=\"!previousEnabled()\" (click)=\"previousClicked()\" [attr.aria-label]=\"prevButtonLabel\"></button> <button mat-icon-button type=\"button\" class=\"mat-calendar-next-button\" [disabled]=\"!nextEnabled()\" (click)=\"nextClicked()\" [attr.aria-label]=\"nextButtonLabel\"></button></div></div>","<ng-template [cdkPortalOutlet]=\"_calendarHeaderPortal\"></ng-template><div class=\"mat-calendar-content\" [ngSwitch]=\"currentView\" cdkMonitorSubtreeFocus tabindex=\"-1\"><mat-month-view *ngSwitchCase=\"'month'\" [(activeDate)]=\"activeDate\" [selected]=\"selected\" [dateFilter]=\"dateFilter\" [maxDate]=\"maxDate\" [minDate]=\"minDate\" [dateClass]=\"dateClass\" (selectedChange)=\"_dateSelected($event)\" (_userSelection)=\"_userSelected()\"></mat-month-view><mat-year-view *ngSwitchCase=\"'year'\" [(activeDate)]=\"activeDate\" [selected]=\"selected\" [dateFilter]=\"dateFilter\" [maxDate]=\"maxDate\" [minDate]=\"minDate\" (monthSelected)=\"_monthSelectedInYearView($event)\" (selectedChange)=\"_goToDateInView($event, 'month')\"></mat-year-view><mat-multi-year-view *ngSwitchCase=\"'multi-year'\" [(activeDate)]=\"activeDate\" [selected]=\"selected\" [dateFilter]=\"dateFilter\" [maxDate]=\"maxDate\" [minDate]=\"minDate\" (yearSelected)=\"_yearSelectedInMultiYearView($event)\" (selectedChange)=\"_goToDateInView($event, 'year')\"></mat-multi-year-view></div>","<tr *ngIf=\"_firstRowOffset < labelMinRequiredCells\" aria-hidden=\"true\"><td class=\"mat-calendar-body-label\" [attr.colspan]=\"numCols\" [style.paddingTop]=\"_cellPadding\" [style.paddingBottom]=\"_cellPadding\">{{label}}</td></tr><tr *ngFor=\"let row of rows; let rowIndex = index\" role=\"row\"><td *ngIf=\"rowIndex === 0 && _firstRowOffset\" aria-hidden=\"true\" class=\"mat-calendar-body-label\" [attr.colspan]=\"_firstRowOffset\" [style.paddingTop]=\"_cellPadding\" [style.paddingBottom]=\"_cellPadding\">{{_firstRowOffset >= labelMinRequiredCells ? label : ''}}</td><td *ngFor=\"let item of row; let colIndex = index\" role=\"gridcell\" class=\"mat-calendar-body-cell\" [ngClass]=\"item.cssClasses\" [tabindex]=\"_isActiveCell(rowIndex, colIndex) ? 0 : -1\" [class.mat-calendar-body-disabled]=\"!item.enabled\" [class.mat-calendar-body-active]=\"_isActiveCell(rowIndex, colIndex)\" [attr.aria-label]=\"item.ariaLabel\" [attr.aria-disabled]=\"!item.enabled || null\" [attr.aria-selected]=\"selectedValue === item.value\" (click)=\"_cellClicked(item)\" [style.width]=\"_cellWidth\" [style.paddingTop]=\"_cellPadding\" role=\"button\" [style.paddingBottom]=\"_cellPadding\"><div class=\"mat-calendar-body-cell-content\" [class.mat-calendar-body-selected]=\"selectedValue === item.value\" [class.mat-calendar-body-today]=\"todayValue === item.value\">{{item.displayValue}}</div></td></tr>","<mat-calendar cdkTrapFocus [id]=\"datepicker.id\" [ngClass]=\"datepicker.panelClass\" [startAt]=\"datepicker.startAt\" [startView]=\"datepicker.startView\" [minDate]=\"datepicker._minDate\" [maxDate]=\"datepicker._maxDate\" [dateFilter]=\"datepicker._dateFilter\" [headerComponent]=\"datepicker.calendarHeaderComponent\" [selected]=\"datepicker._selected\" [dateClass]=\"datepicker.dateClass\" [@fadeInCalendar]=\"'enter'\" (selectedChange)=\"datepicker.select($event)\" (yearSelected)=\"datepicker._selectYear($event)\" (monthSelected)=\"datepicker._selectMonth($event)\" (_userSelection)=\"datepicker.close()\"></mat-calendar>","<button #button mat-icon-button type=\"button\" [attr.aria-haspopup]=\"datepicker ? 'dialog' : null\" [attr.aria-label]=\"_intl.openCalendarLabel\" [attr.tabindex]=\"disabled ? -1 : tabIndex\" [disabled]=\"disabled\" [disableRipple]=\"disableRipple\" (click)=\"_open($event)\"><svg *ngIf=\"!_customIcon\" class=\"mat-datepicker-toggle-default-icon\" viewBox=\"0 0 24 24\" width=\"24px\" height=\"24px\" fill=\"currentColor\" focusable=\"false\"><path d=\"M19 3h-1V1h-2v2H8V1H6v2H5c-1.11 0-1.99.9-1.99 2L3 19c0 1.1.89 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H5V8h14v11zM7 10h5v5H7z\"/></svg><ng-content select=\"[matDatepickerToggleIcon]\"></ng-content></button>","<table class=\"mat-calendar-table\" role=\"presentation\"><thead class=\"mat-calendar-table-header\"><tr><th scope=\"col\" *ngFor=\"let day of _weekdays\" [attr.aria-label]=\"day.long\">{{day.narrow}}</th></tr><tr><th class=\"mat-calendar-table-header-divider\" colspan=\"7\" aria-hidden=\"true\"></th></tr></thead><tbody mat-calendar-body [label]=\"_monthLabel\" [rows]=\"_weeks\" [todayValue]=\"_todayDate\" [selectedValue]=\"_selectedDate\" [labelMinRequiredCells]=\"3\" [activeCell]=\"_dateAdapter.getDate(activeDate) - 1\" (selectedValueChange)=\"_dateSelected($event)\" (keydown)=\"_handleCalendarBodyKeydown($event)\"></tbody></table>","<table class=\"mat-calendar-table\" role=\"presentation\"><thead class=\"mat-calendar-table-header\"><tr><th class=\"mat-calendar-table-header-divider\" colspan=\"4\"></th></tr></thead><tbody mat-calendar-body [label]=\"_yearLabel\" [rows]=\"_months\" [todayValue]=\"_todayMonth\" [selectedValue]=\"_selectedMonth\" [labelMinRequiredCells]=\"2\" [numCols]=\"4\" [cellAspectRatio]=\"4 / 7\" [activeCell]=\"_dateAdapter.getMonth(activeDate)\" (selectedValueChange)=\"_monthSelected($event)\" (keydown)=\"_handleCalendarBodyKeydown($event)\"></tbody></table>","<table class=\"mat-calendar-table\" role=\"presentation\"><thead class=\"mat-calendar-table-header\"><tr><th class=\"mat-calendar-table-header-divider\" colspan=\"4\"></th></tr></thead><tbody mat-calendar-body [rows]=\"_years\" [todayValue]=\"_todayYear\" [selectedValue]=\"_selectedYear\" [numCols]=\"4\" [cellAspectRatio]=\"4 / 7\" [activeCell]=\"_getActiveCell()\" (selectedValueChange)=\"_yearSelected($event)\" (keydown)=\"_handleCalendarBodyKeydown($event)\"></tbody></table>","<ng-template cdkPortalOutlet></ng-template>","<ng-content select=\"mat-expansion-panel-header\"></ng-content><div class=\"mat-expansion-panel-content\" role=\"region\" [@bodyExpansion]=\"_getExpandedState()\" (@bodyExpansion.done)=\"_bodyAnimationDone.next($event)\" [attr.aria-labelledby]=\"_headerId\" [id]=\"id\" #body><div class=\"mat-expansion-panel-body\"><ng-content></ng-content><ng-template [cdkPortalOutlet]=\"_portal\"></ng-template></div><ng-content select=\"mat-action-row\"></ng-content></div>","<span class=\"mat-content\"><ng-content select=\"mat-panel-title\"></ng-content><ng-content select=\"mat-panel-description\"></ng-content><ng-content></ng-content></span><span [@indicatorRotate]=\"_getExpandedState()\" *ngIf=\"_showToggle()\" class=\"mat-expansion-indicator\"></span>","<div class=\"mat-form-field-wrapper\"><div class=\"mat-form-field-flex\" #connectionContainer (click)=\"_control.onContainerClick && _control.onContainerClick($event)\"><ng-container *ngIf=\"appearance == 'outline'\"><div class=\"mat-form-field-outline\"><div class=\"mat-form-field-outline-start\"></div><div class=\"mat-form-field-outline-gap\"></div><div class=\"mat-form-field-outline-end\"></div></div><div class=\"mat-form-field-outline mat-form-field-outline-thick\"><div class=\"mat-form-field-outline-start\"></div><div class=\"mat-form-field-outline-gap\"></div><div class=\"mat-form-field-outline-end\"></div></div></ng-container><div class=\"mat-form-field-prefix\" *ngIf=\"_prefixChildren.length\"><ng-content select=\"[matPrefix]\"></ng-content></div><div class=\"mat-form-field-infix\" #inputContainer><ng-content></ng-content><span class=\"mat-form-field-label-wrapper\"><label class=\"mat-form-field-label\" (cdkObserveContent)=\"updateOutlineGap()\" [cdkObserveContentDisabled]=\"appearance != 'outline'\" [id]=\"_labelId\" [attr.for]=\"_control.id\" [attr.aria-owns]=\"_control.id\" [class.mat-empty]=\"_control.empty && !_shouldAlwaysFloat\" [class.mat-form-field-empty]=\"_control.empty && !_shouldAlwaysFloat\" [class.mat-accent]=\"color == 'accent'\" [class.mat-warn]=\"color == 'warn'\" #label *ngIf=\"_hasFloatingLabel()\" [ngSwitch]=\"_hasLabel()\"><ng-container *ngSwitchCase=\"false\"><ng-content select=\"mat-placeholder\"></ng-content><span>{{_control.placeholder}}</span></ng-container><ng-content select=\"mat-label\" *ngSwitchCase=\"true\"></ng-content><span class=\"mat-placeholder-required mat-form-field-required-marker\" aria-hidden=\"true\" *ngIf=\"!hideRequiredMarker && _control.required && !_control.disabled\">&#32;*</span></label></span></div><div class=\"mat-form-field-suffix\" *ngIf=\"_suffixChildren.length\"><ng-content select=\"[matSuffix]\"></ng-content></div></div><div class=\"mat-form-field-underline\" #underline *ngIf=\"appearance != 'outline'\"><span class=\"mat-form-field-ripple\" [class.mat-accent]=\"color == 'accent'\" [class.mat-warn]=\"color == 'warn'\"></span></div><div class=\"mat-form-field-subscript-wrapper\" [ngSwitch]=\"_getDisplayedMessages()\"><div *ngSwitchCase=\"'error'\" [@transitionMessages]=\"_subscriptAnimationState\"><ng-content select=\"mat-error\"></ng-content></div><div class=\"mat-form-field-hint-wrapper\" *ngSwitchCase=\"'hint'\" [@transitionMessages]=\"_subscriptAnimationState\"><div *ngIf=\"hintLabel\" [id]=\"_hintLabelId\" class=\"mat-hint\">{{hintLabel}}</div><ng-content select=\"mat-hint:not([align='end'])\"></ng-content><div class=\"mat-form-field-hint-spacer\"></div><ng-content select=\"mat-hint[align='end']\"></ng-content></div></div></div>","<ng-content></ng-content>","<ng-content></ng-content>","<ng-content></ng-content>","<div class=\"mat-list-item-content\"><div class=\"mat-list-item-ripple\" mat-ripple [matRippleTrigger]=\"_getHostElement()\" [matRippleDisabled]=\"_isRippleDisabled()\"></div><ng-content select=\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"></ng-content><div class=\"mat-list-text\"><ng-content select=\"[mat-line], [matLine]\"></ng-content></div><ng-content></ng-content></div>","<div class=\"mat-list-item-content\" [class.mat-list-item-content-reverse]=\"checkboxPosition == 'after'\"><div mat-ripple class=\"mat-list-item-ripple\" [matRippleTrigger]=\"_getHostElement()\" [matRippleDisabled]=\"_isRippleDisabled()\"></div><mat-pseudo-checkbox [state]=\"selected ? 'checked' : 'unchecked'\" [disabled]=\"disabled\"></mat-pseudo-checkbox><div class=\"mat-list-text\" #text><ng-content></ng-content></div><ng-content select=\"[mat-list-avatar], [mat-list-icon], [matListAvatar], [matListIcon]\"></ng-content></div>","<ng-content></ng-content>","<ng-template><div class=\"mat-menu-panel\" [ngClass]=\"_classList\" (keydown)=\"_handleKeydown($event)\" (click)=\"closed.emit('click')\" [@transformMenu]=\"_panelAnimationState\" (@transformMenu.start)=\"_onAnimationStart($event)\" (@transformMenu.done)=\"_onAnimationDone($event)\" tabindex=\"-1\" role=\"menu\"><div class=\"mat-menu-content\"><ng-content></ng-content></div></div></ng-template>","<ng-content></ng-content><div class=\"mat-menu-ripple\" matRipple [matRippleDisabled]=\"disableRipple || disabled\" [matRippleTrigger]=\"_getHostElement()\"></div>","<div class=\"mat-paginator-outer-container\"><div class=\"mat-paginator-container\"><div class=\"mat-paginator-page-size\" *ngIf=\"!hidePageSize\"><div class=\"mat-paginator-page-size-label\">{{_intl.itemsPerPageLabel}}</div><mat-form-field *ngIf=\"_displayedPageSizeOptions.length > 1\" [color]=\"color\" class=\"mat-paginator-page-size-select\"><mat-select [value]=\"pageSize\" [disabled]=\"disabled\" [aria-label]=\"_intl.itemsPerPageLabel\" (selectionChange)=\"_changePageSize($event.value)\"><mat-option *ngFor=\"let pageSizeOption of _displayedPageSizeOptions\" [value]=\"pageSizeOption\">{{pageSizeOption}}</mat-option></mat-select></mat-form-field><div *ngIf=\"_displayedPageSizeOptions.length <= 1\">{{pageSize}}</div></div><div class=\"mat-paginator-range-actions\"><div class=\"mat-paginator-range-label\">{{_intl.getRangeLabel(pageIndex, pageSize, length)}}</div><button mat-icon-button type=\"button\" class=\"mat-paginator-navigation-first\" (click)=\"firstPage()\" [attr.aria-label]=\"_intl.firstPageLabel\" [matTooltip]=\"_intl.firstPageLabel\" [matTooltipDisabled]=\"_previousButtonsDisabled()\" [matTooltipPosition]=\"'above'\" [disabled]=\"_previousButtonsDisabled()\" *ngIf=\"showFirstLastButtons\"><svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\"><path d=\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\"/></svg></button> <button mat-icon-button type=\"button\" class=\"mat-paginator-navigation-previous\" (click)=\"previousPage()\" [attr.aria-label]=\"_intl.previousPageLabel\" [matTooltip]=\"_intl.previousPageLabel\" [matTooltipDisabled]=\"_previousButtonsDisabled()\" [matTooltipPosition]=\"'above'\" [disabled]=\"_previousButtonsDisabled()\"><svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\"><path d=\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\"/></svg></button> <button mat-icon-button type=\"button\" class=\"mat-paginator-navigation-next\" (click)=\"nextPage()\" [attr.aria-label]=\"_intl.nextPageLabel\" [matTooltip]=\"_intl.nextPageLabel\" [matTooltipDisabled]=\"_nextButtonsDisabled()\" [matTooltipPosition]=\"'above'\" [disabled]=\"_nextButtonsDisabled()\"><svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\"><path d=\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"/></svg></button> <button mat-icon-button type=\"button\" class=\"mat-paginator-navigation-last\" (click)=\"lastPage()\" [attr.aria-label]=\"_intl.lastPageLabel\" [matTooltip]=\"_intl.lastPageLabel\" [matTooltipDisabled]=\"_nextButtonsDisabled()\" [matTooltipPosition]=\"'above'\" [disabled]=\"_nextButtonsDisabled()\" *ngIf=\"showFirstLastButtons\"><svg class=\"mat-paginator-icon\" viewBox=\"0 0 24 24\" focusable=\"false\"><path d=\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\"/></svg></button></div></div></div>","<svg [style.width.px]=\"diameter\" [style.height.px]=\"diameter\" [attr.viewBox]=\"_viewBox\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" [ngSwitch]=\"mode === 'indeterminate'\"><circle *ngSwitchCase=\"true\" cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.animation-name]=\"'mat-progress-spinner-stroke-rotate-' + diameter\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle><circle *ngSwitchCase=\"false\" cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle></svg>","<svg [style.width.px]=\"diameter\" [style.height.px]=\"diameter\" [attr.viewBox]=\"_viewBox\" preserveAspectRatio=\"xMidYMid meet\" focusable=\"false\" [ngSwitch]=\"mode === 'indeterminate'\"><circle *ngSwitchCase=\"true\" cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.animation-name]=\"'mat-progress-spinner-stroke-rotate-' + diameter\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle><circle *ngSwitchCase=\"false\" cx=\"50%\" cy=\"50%\" [attr.r]=\"_circleRadius\" [style.stroke-dashoffset.px]=\"_strokeDashOffset\" [style.stroke-dasharray.px]=\"_strokeCircumference\" [style.stroke-width.%]=\"_circleStrokeWidth\"></circle></svg>","<div cdk-overlay-origin class=\"mat-select-trigger\" aria-hidden=\"true\" (click)=\"toggle()\" #origin=\"cdkOverlayOrigin\" #trigger><div class=\"mat-select-value\" [ngSwitch]=\"empty\"><span class=\"mat-select-placeholder\" *ngSwitchCase=\"true\">{{placeholder || '\\u00A0'}}</span> <span class=\"mat-select-value-text\" *ngSwitchCase=\"false\" [ngSwitch]=\"!!customTrigger\"><span *ngSwitchDefault>{{triggerValue || '\\u00A0'}}</span><ng-content select=\"mat-select-trigger\" *ngSwitchCase=\"true\"></ng-content></span></div><div class=\"mat-select-arrow-wrapper\"><div class=\"mat-select-arrow\"></div></div></div><ng-template cdk-connected-overlay cdkConnectedOverlayLockPosition cdkConnectedOverlayHasBackdrop cdkConnectedOverlayBackdropClass=\"cdk-overlay-transparent-backdrop\" [cdkConnectedOverlayScrollStrategy]=\"_scrollStrategy\" [cdkConnectedOverlayOrigin]=\"origin\" [cdkConnectedOverlayOpen]=\"panelOpen\" [cdkConnectedOverlayPositions]=\"_positions\" [cdkConnectedOverlayMinWidth]=\"_triggerRect?.width\" [cdkConnectedOverlayOffsetY]=\"_offsetY\" (backdropClick)=\"close()\" (attach)=\"_onAttached()\" (detach)=\"close()\"><div class=\"mat-select-panel-wrap\" [@transformPanelWrap]><div #panel class=\"mat-select-panel {{ _getPanelTheme() }}\" [ngClass]=\"panelClass\" [@transformPanel]=\"multiple ? 'showing-multiple' : 'showing'\" (@transformPanel.done)=\"_panelDoneAnimatingStream.next($event.toState)\" [style.transformOrigin]=\"_transformOrigin\" [style.font-size.px]=\"_triggerFontSize\" (keydown)=\"_handleKeydown($event)\"><ng-content></ng-content></div></div></ng-template>","<ng-template cdkPortalOutlet></ng-template>","<span>{{data.message}}</span><div class=\"mat-simple-snackbar-action\" *ngIf=\"hasAction\"><button mat-button (click)=\"action()\">{{data.action}}</button></div>","<div class=\"mat-sort-header-container\" [class.mat-sort-header-sorted]=\"_isSorted()\" [class.mat-sort-header-position-before]=\"arrowPosition == 'before'\"><button class=\"mat-sort-header-button\" type=\"button\" [attr.disabled]=\"_isDisabled() || null\" [attr.aria-label]=\"_intl.sortButtonLabel(id)\" (focus)=\"_setIndicatorHintVisible(true)\" (blur)=\"_setIndicatorHintVisible(false)\"><ng-content></ng-content></button><div class=\"mat-sort-header-arrow\" *ngIf=\"_renderArrow()\" [@arrowOpacity]=\"_getArrowViewState()\" [@arrowPosition]=\"_getArrowViewState()\" [@allowChildren]=\"_getArrowDirectionState()\" (@arrowPosition.start)=\"_disableViewStateAnimation = true\" (@arrowPosition.done)=\"_disableViewStateAnimation = false\"><div class=\"mat-sort-header-stem\"></div><div class=\"mat-sort-header-indicator\" [@indicator]=\"_getArrowDirectionState()\"><div class=\"mat-sort-header-pointer-left\" [@leftPointer]=\"_getArrowDirectionState()\"></div><div class=\"mat-sort-header-pointer-right\" [@rightPointer]=\"_getArrowDirectionState()\"></div><div class=\"mat-sort-header-pointer-middle\"></div></div></div></div>","\n  <ng-content select=\"caption\"></ng-content>\n  <ng-container headerRowOutlet></ng-container>\n  <ng-container rowOutlet></ng-container>\n  <ng-container footerRowOutlet></ng-container>\n","<ng-container cdkCellOutlet></ng-container>","<ng-container cdkCellOutlet></ng-container>","<ng-container cdkCellOutlet></ng-container>","\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  ","<ng-content></ng-content><ng-content select=\"mat-toolbar-row\"></ng-content>","<div class=\"mat-tooltip\" [ngClass]=\"tooltipClass\" [class.mat-tooltip-handset]=\"(_isHandset | async)?.matches\" [@state]=\"_visibility\" (@state.start)=\"_animationStart()\" (@state.done)=\"_animationDone($event)\">{{message}}</div>","<router-outlet></router-outlet>","<ng-template></ng-template>","<div class=\"container\">\n\n\n  <mat-card>\n    <mat-toolbar-row class=\"searchbar\" style=\"display: flex!important; justify-content: space-between!important;\">\n    <mat-form-field class=\"searchdiv\">\n\n      <input matInput (keyup)=\"applyFilter($event.target.value)\" placeholder=\"Filter\">\n    </mat-form-field>\n\n      <span  *ngIf=\"search_settingsval !=null && search_settingsval.textsearch != null \">\n    <mat-form-field *ngFor=\"let item of search_settingsval.textsearch\" class=\"searchdiv\">\n\n      <input matInput (change)=\"textsearchfunction(item.field)\" (keyup)=\"textsearchfunction(item.field)\" [(ngModel)]='tsearch[item.field]' placeholder=\"{{item.label}}\">\n      <span matPrefix><i class=\"material-icons searchicon\" >\n        search\n      </i> &nbsp;</span>\n    </mat-form-field>\n      </span>\n\n<span *ngIf=\"search_settingsval !=null && search_settingsval.search != null \">\n  <mat-form-field  *ngFor=\"let item of search_settingsval.search\">\n    <input type=\"text\" placeholder=\"{{item.label}}\" matInput [(ngModel)]=\"autosearch[item.field]\" [matAutocomplete]=\"auto\">\n    <mat-autocomplete  #auto=\"matAutocomplete\" >\n       <mat-option *ngFor=\"let option of result.res | async\" [value]=\"option[item.field]\" (click)=\"autosearchfunction(item.field)\">\n        {{option[item.field]}}\n      </mat-option>\n    </mat-autocomplete>\n  </mat-form-field>\n</span>\n\n\n\n<!--      <span *ngIf=\"search_settingsval !=null && search_settingsval != null \">\n\n      <mat-form-field *ngFor=\"let item of search_settingsval.search\">\n        <mat-label>{{item.label}}</mat-label>\n        <mat-select>\n          <mat-option *ngFor=\"let status of preresult\" [value]=\"status\" (click)=\"autosearchfunction(status.email)\">\n            {{status.email}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      </span>-->\n    <!--  <ng-container  *ngIf=\"search_settingsval !=null && search_settingsval.textsearch != null \">\n&lt;!&ndash;        <span *ngFor=\"let status of this.search_settingsval.textsearch\">&ndash;&gt;\n&lt;!&ndash;        <mat-form-field *ngFor=\"let statusval of status.value\">&ndash;&gt;\n        <mat-form-field *ngFor=\"let status of this.search_settingsval.textsearch\">\n              <input matInput (keyup)=\"applyFilter1($event.target.value, status)\" placeholder=\"{{status.label}}\">\n        </mat-form-field>\n&lt;!&ndash;              </span>&ndash;&gt;\n      </ng-container>-->\n\n\n      <ng-container  *ngIf=\"search_settingsval !=null && search_settingsval.selectsearch != null \">\n        <mat-form-field *ngFor=\"let status of this.search_settingsval.selectsearch\">\n          <mat-label>{{status.label}}</mat-label>\n          <mat-select>\n            <mat-option *ngFor=\"let statusval of status.values\" [value]=\"statusval\" (click)=\"selectSearch(statusval.val, status)\">\n              {{statusval.name}}\n            </mat-option>\n          </mat-select>\n        </mat-form-field>\n      </ng-container>\n\n\n      <ng-container *ngIf=\"date_search_endpointval !=null && date_search_sourceval != null && search_settingsval.datesearch != null \">\n        <span *ngFor=\"let status of this.search_settingsval.datesearch\">\n        <mat-form-field >\n          <input matInput [matDatepicker]=\"picker\"autocomplete=\"off\"  placeholder=\"{{status.startdatelabel}}\"  [(ngModel)]=\"start_date\" >\n          <mat-datepicker-toggle matSuffix [for]=\"picker\" ></mat-datepicker-toggle>\n          <mat-datepicker #picker></mat-datepicker>\n        </mat-form-field>\n        <mat-form-field>\n          <input matInput [matDatepicker]=\"picker1\" autocomplete=\"off\" placeholder=\"{{status.enddatelabel}}\" [(ngModel)]=\"end_date\" >\n          <mat-datepicker-toggle matSuffix [for]=\"picker1\"></mat-datepicker-toggle>\n          <mat-datepicker #picker1 ></mat-datepicker>\n        </mat-form-field>\n        <button mat-raised-button color=\"primary\" class=\"add_button\" style=\"margin: 0!important; margin-left: 10px!important; \" (click)=\"dateSearch(status.field)\">{{status.submit}}</button>\n      </span>\n      </ng-container>\n\n\n\n      <span *ngIf=\"click_to_add_ananother_pageval !=null\">\n        <button mat-raised-button color=\"primary\" class=\"add_button\" style=\"margin: 0!important; margin-left: 10px!important; \" [routerLink]=\"click_to_add_ananother_pageval\" >Add</button>\n      </span>\n    </mat-toolbar-row>\n\n\n\n    <ng-container *ngIf=\"selection.selected.length!=null && selection.selected.length>0\">\n      <button mat-raised-button (click)=\"deletemultiple()\"> Delete </button>\n      <button mat-raised-button (click)=\"managestatusmultiple()\"> Update Status </button>\n    </ng-container>\n\n\n\n    <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\"\n                        [checked]=\"selection.hasValue() && isAllSelected()\"\n                        [indeterminate]=\"selection.hasValue() && !isAllSelected()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let row\" data-label=\"select\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\"\n                        (change)=\"$event ? selection.toggle(row) : null\"\n                        [checked]=\"selection.isSelected(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <ng-container *ngFor=\"let column of columns\" [matColumnDef]=\"column.columnDef\" >\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\"th-header-center\">{{column.header}}</th>\n        <td mat-cell *matCellDef=\"let row\" [ngStyle]=\"styleCell(column,row)\" data-title=\"{{column.header}}\"   class=\"td-cell-center\">\n          <span *ngIf=\"column.columnDef=='status' \">{{ getstatus([column.cell(row)]) }} {{hi(row)}}</span>\n          <span *ngIf=\"column.columnDef!='status' \">{{ column.cell(row) }}</span>\n          <span *ngIf=\"column.columnDef=='grab_url && grab_linkval!=null && grab_linkval[0]!=null' \">{{grapurl(row[this.grab_linkval[0].field_name])}}</span>\n          <br>\n\n<!--          <span *ngIf=\"sh==true\">-->\n            <span *ngIf=\"column.columnDef=='contractssigned' && sh==true && urlval !=null\" class=\"cursor\">\n              <i title=\"{{urlval[0].label}}\" (click)=\"clickurl(row,urlval[0].url)\" class=\"material-icons\">cloud_download</i>\n            </span>\n<!--          </span>-->\n<!--          <span *ngIf=\"aud==true\">-->\n            <span *ngIf=\"column.columnDef=='contractssigned' && aud==true  && urlval !=null\">\n              <i title=\"{{urlval[1].label}}\" (click)=\"clickurl(row,urlval[1].url)\" class=\"material-icons\">cloud_download</i>\n            </span>\n\n\n<!--// for grap url//-->\n\n\n\n          <span *ngIf=\" grab_linkval!=null && grab_linkval[0]!=null && column.columnDef==[grab_linkval[0].col_name]\" class=\"cursor\">\n              <button mat-button (click)=\"copyText(row[grab_linkval[0].field_name],grab_linkval[1].url)\">{{grab_linkval[1].label}}</button>\n            </span>\n          <br>\n          <!--          </span>-->\n          <!--          <span *ngIf=\"aud==true\">-->\n          <span *ngIf=\"grab_linkval!=null && grab_linkval[0]!=null &&column.columnDef== [grab_linkval[0].col_name]\">\n              <button mat-button (click)=\"copyText(row[grab_linkval[0].field_name],grab_linkval[2].url)\">{{grab_linkval[2].label}}</button>\n            </span>\n\n<!--          //grap url end//-->\n\n\n<!--          </span>-->\n          <!-- <span *ngIf=\"column.columnDef=='contractssigned' \">\n            <span *ngFor=\"let item of urlval\" class=\"cursor\">\n            <i title=\"{{item.label}}\" (click)=\"clickurl(row,item.url)\" class=\"material-icons\">cloud_download</i>\n          </span>\n          </span>-->\n        </td>\n      </ng-container>\n\n\n\n      <ng-container matColumnDef=\"Actions\"   >\n        <th mat-header-cell *matHeaderCellDef  class=\"th-header-center\">Actions</th>\n        <td (click)=\"$event.stopPropagation()\" mat-cell  *matCellDef=\"let row\" data-label=\"Actions\"  class=\"td-cell-center\">\n          <span *ngIf=\"selection.selected.length==null || selection.selected.length==0\">\n            <span class=\"cursor\" (click)=\"editdata(row)\" >\n              <i class=\"material-icons\">\n                edit\n              </i>\n            </span>\n\n            <!--For modern browsers-->\n            <span class=\"cursor\" (click)=\"deletedata(row)\" >\n              <i class=\"material-icons\">\n                delete_outline\n              </i>\n            </span>\n\n            <!--For modern browsers-->\n            <span class=\"cursor\" (click)=\"viewdata(row)\" >\n              <i class=\"material-icons\">\n                pageview\n              </i>\n            </span>\n\n            <!--For modern browsers-->\n            <span class=\"cursor\" (click)=\"managestatus(row)\" >\n              <i class=\"material-icons\">\n                toggle_off\n              </i>\n            </span>\n            <span *ngIf=\"custombuttonval!=null\" class=\"cursor treeclass\" (click)=\"custombuttonfunc(row)\" >\n              <i class=\"material-icons treeclass\">\n                toggle_off\n              </i>\n            </span>\n\n            <!-- artistxp preview start -->\n            <span *ngIf=\"previewFlug==true\" class=\"cursor treeclass\" (click)=\"artistxpPreview(row)\">\n              <i class=\"material-icons\">perm_media</i>\n            </span>\n            <!-- artistxp preview end -->\n\n          </span>\n\n        </td>\n      </ng-container>\n\n\n\n\n\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n\n    </table>\n\n    <mat-paginator [pageSizeOptions]=\"[5,10, 20, 50,100]\" showFirstLastButtons></mat-paginator>\n    <mat-spinner *ngIf=\"loading == true\" ></mat-spinner>\n\n    <br>\n\n\n   <!-- <form [formGroup]=\"stateForm\">\n      <mat-form-field>\n        <input type=\"text\" matInput placeholder=\"States Group\" formControlName=\"stateGroup\" required [matAutocomplete]=\"autoGroup\">\n        <mat-autocomplete #autoGroup=\"matAutocomplete\">\n          <mat-optgroup *ngFor=\"let group of stateGroupOptions | async\" [label]=\"group.letter\">\n            <mat-option *ngFor=\"let name of group.names\" [value]=\"name\">\n              {{name}}\n            </mat-option>\n          </mat-optgroup>\n        </mat-autocomplete>\n      </mat-form-field>\n    </form>-->\n\n    <!--<form class=\"example-form\">\n      <mat-form-field class=\"example-full-width\">\n        <input type=\"text\" placeholder=\"Select state\" aria-label=\"Number\" matInput [formControl]=\"myControl\" [matAutocomplete]=\"auto\">\n        <mat-autocomplete #auto=\"matAutocomplete\">\n          <mat-option *ngFor=\"let option of stateGroup | async\" [value]=\"option\">\n            {{option}}\n          </mat-option>\n        </mat-autocomplete>\n      </mat-form-field>\n    </form>\n-->\n\n  </mat-card>\n\n<!--\n  <mat-card>\n\n    <div class=\"example-container\">\n\n\n      <mat-card-content >\n        <mat-form-field class=\"form-group\">\n            <input (blur)=\"inputblur('email')\" matInput placeholder=\"email\" type=\"email\" [formControl]=\"myForm.controls['email']\" >\n            <mat-error  *ngIf=\"!myForm.controls['email'].valid && myForm.controls['email'].touched && issubmit==1\">email field can not be blank</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"form-group\">\n            <input (blur)=\"inputblur('password')\" matInput placeholder=\"Password\" type=\"password\" [formControl]=\"myForm.controls['password']\" >\n            <mat-error  *ngIf=\"!myForm.controls['password'].valid && myForm.controls['password'].touched && issubmit==1\">Password field can not be blank</mat-error>\n        </mat-form-field>\n\n            <button mat-button  (click)=\"onSubmit()\" class=\"s_getmyoffer_login_button\"  >Login</button>\n        </mat-card-content>\n\n\n    </div>\n\n  </mat-card>-->\n  <br>\n  <br>\n\n\n\n</div>\n\n","\n<div *ngIf=\"data.preview != true\">\n    <h1 mat-dialog-title *ngIf=\"data!=null && data.message!=null\" >Hey !</h1>\n    <h1 mat-dialog-title *ngIf=\"data!=null && data.data!=null && data.data[0]==null\">Details </h1>\n    <div mat-dialog-content>\n        <p *ngIf=\"data!=null && data.message!=null\">{{data.message}}</p>\n\n\n        <div *ngIf=\"data!=null && data.data!=null\">\n\n\n\n            <mat-card class=\"example-card\" *ngFor=\"let item of data.data;\">\n                <mat-card-header id=\"dialogdata{{item[0]}}\">\n                    <!--<div mat-card-avatar class=\"example-header-image\"></div>-->\n                    <mat-card-title>{{item[0]}}</mat-card-title>\n                </mat-card-header>\n                <!--<img mat-card-image src=\"https://material.angular.io/assets/img/examples/shiba2.jpg\" alt=\"Photo of a Shiba Inu\">-->\n                <mat-card-content id=\"dialogdata{{item[0]}}\">\n                    <p [innerHtml]=\"item[1]\">\n\n                    </p>\n                </mat-card-content>\n            </mat-card>\n\n        </div>\n\n        <!--for custom page in modal(mainly used for tree)-->\n        <div *ngIf=\"data!=null && data.data!=null  && data.data[0]!=null &&  data.data[0].customdata!=null\">\n\n            <iframe class=\"custom-datadiv\" height=\"auto\"  [src]=\"data.data[0].customdata\" ></iframe>\n\n        </div>\n\n    </div>\n</div>\n\n\n<div *ngIf=\"data.preview == true\">\n    <lib-singlepost [post1]=\"data.previewData.res[0].posts\" [user]=\"\"></lib-singlepost>\n</div>\n\n\n\n\n\n<div mat-dialog-actions *ngIf=\"data.preview != true\">\n    <button mat-button *ngIf=\"data.isconfirmation==null ||  data.isconfirmation!=false\" (click)=\"onNoClick()\">No Thanks</button>\n    <button mat-button mat-dialog-close=\"yes\" cdkFocusInitial>Ok</button>\n</div>\n","<mat-nav-list>\n\n\n    <a *ngFor=\"let item of data.items;\"  mat-list-item (click)=\"openLink(item)\">\n        <span mat-line></span>\n        <span mat-line>{{item.name}}</span>\n    </a>\n\n\n</mat-nav-list>\n","\r\nexport function matchingPasswords(passwordKey: string, confirmPasswordKey: string) {\r\n    return (group: any): {\r\n        [key: string]: any\r\n    } => {\r\n        let password = group.controls[passwordKey];\r\n        let confirmPassword = group.controls[confirmPasswordKey];\r\n\r\n        if (password.value !== confirmPassword.value) {\r\n            return {\r\n                mismatchedPasswords: true\r\n            };\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login/login.component';\r\nimport { ForgetComponent } from './components/forget/forget/forget.component';\r\nimport { SignupComponent } from './components/signup/signup.component';\r\nimport { ResetpasswordComponent } from './components/resetpassword/resetpassword.component';\r\nimport { AdmindashboardComponent } from './components/admindashboard/admindashboard.component';\r\nimport { EditprofileComponent } from './components/editprofile/editprofile.component';\r\nimport { SupportComponent } from './components/support/support.component';\r\nimport { UserDashboardComponent } from '../app/components/user-dashboard/user-dashboard.component';\r\nimport { AuthGuard } from './services/auth.guard';\r\nimport { Resolveservice } from './services/resolve-service';\r\nimport { AddadminComponent } from './components/addadmin/addadmin.component';\r\nimport { AdminlistComponent } from './components/adminlist/adminlist.component'\r\nimport { UserlistComponent } from './components/userlist/userlist.component'\r\nimport { PurchasedataComponent } from './components/purchasedata/purchasedata.component';\r\nimport { BillingDetailsComponent } from './components/billing-details/billing-details.component';\r\nimport { OrdersComponent } from './components/orders/orders.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginComponent },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'forget', component: ForgetComponent },\r\n  { path: 'sign-up', component: SignupComponent },\r\n  { path: 'resetpassword', component: ResetpasswordComponent },\r\n  // {path:'admin-dashboard', component:AdmindashboardComponent,canActivate:[AuthGuard]},\r\n  { path: 'admin-dashboard', component: UserDashboardComponent,resolve: { results: Resolveservice }, data: { source: 'billing_details_view'}, canActivate: [AuthGuard] },\r\n  { path: 'editprofile', component: EditprofileComponent },\r\n  { path: 'support', component: SupportComponent },\r\n  // {path:'user-dashboard', component:UserDashboardComponent},\r\n  { path: \"user-dashboard\", component: UserDashboardComponent, resolve: { results: Resolveservice },data: { source: 'billing_details_view',condition:{'user_id_object':'user_id_object'}},canActivate: [AuthGuard] },\r\n  { path: 'addadmin', component: AddadminComponent },\r\n  { path: 'editadmin/:id', component: AddadminComponent },\r\n  { path: 'adminlist', component: AdminlistComponent, resolve: { results: Resolveservice }, data: { source: 'user', \"condition\": { \"type\": \"admin\" } }, canActivate: [AuthGuard] },\r\n  { path: 'userlist', component: UserlistComponent, resolve: { results: Resolveservice }, data: { source: 'user', \"condition\": { \"type\": \"user\" } }, canActivate: [AuthGuard] },\r\n  { path: 'purchasedata', component: PurchasedataComponent },\r\n  { path: 'billing', component: BillingDetailsComponent },\r\n  { path: 'myorders', component: OrdersComponent, resolve: { results: Resolveservice }, data: { source: 'billing_details_view',condition:{'user_id_object':'user_id_object'}},canActivate: [AuthGuard] },\r\n  { path: 'orderlist', component: OrdersComponent, resolve: { results: Resolveservice }, data: { source: 'billing_details_view'},canActivate: [AuthGuard] }\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","<router-outlet></router-outlet>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Monitize360';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule ,CUSTOM_ELEMENTS_SCHEMA} from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DemoMaterialModule } from './modules/material-module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TransferHttpCacheModule } from '@nguniversal/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgtUniversalModule } from '@ng-toolkit/universal';\r\nimport { LoginComponent } from './components/login/login/login.component';\r\nimport { ForgetComponent } from './components/forget/forget/forget.component';\r\nimport { ApiService } from './services/api-service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n// authguard import statements here\r\nimport { AuthGuard } from './services/auth.guard';\r\nimport { SignupComponent } from './components/signup/signup.component';\r\nimport { ResetpasswordComponent } from './components/resetpassword/resetpassword.component';\r\nimport { LoginModule } from 'login';\r\nimport { ClientdashboardComponent } from './components/clientdashboard/clientdashboard.component';\r\nimport { AdmindashboardComponent } from './components/admindashboard/admindashboard.component'; //login library\r\nimport { AdminheaderComponent } from './components/adminheader/adminheader.component';\r\nimport { EditprofileComponent,commonModalComponent } from './components/editprofile/editprofile.component';\r\nimport { SupportComponent } from './components/support/support.component';\r\n\r\nimport { UserDashboardComponent } from '../app/components/user-dashboard/user-dashboard.component';\r\nimport { ListingModule } from 'listing-angular7';\r\nimport { NgxUploaderModule } from 'ngx-uploader';\r\nimport { Resolveservice } from './services/resolve-service';\r\n\r\nimport {AddadminComponent, ModaleComponent} from './components/addadmin/addadmin.component';\r\nimport { AdminlistComponent } from './components/adminlist/adminlist.component';\r\nimport { UserlistComponent } from './components/userlist/userlist.component';\r\nimport { PurchasedataComponent } from './components/purchasedata/purchasedata.component';\r\nimport { BillingDetailsComponent } from './components/billing-details/billing-details.component';\r\nimport { CKEditorModule } from 'ckeditor4-angular';\r\nimport {OrdersComponent} from './components/orders/orders.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ForgetComponent,\r\n    SignupComponent,\r\n    ResetpasswordComponent,\r\n    ClientdashboardComponent,\r\n    AdmindashboardComponent,\r\n    AdminheaderComponent,\r\n    EditprofileComponent,\r\n    commonModalComponent,\r\n    SupportComponent,\r\n    AddadminComponent,\r\n    ModaleComponent,\r\n    UserDashboardComponent,\r\n    AdminlistComponent,\r\n    UserlistComponent,\r\n    PurchasedataComponent,\r\n    PurchasedataComponent,\r\n    BillingDetailsComponent,\r\n    OrdersComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\r\n    AppRoutingModule,\r\n    CommonModule,\r\n    TransferHttpCacheModule,\r\n    HttpClientModule,\r\n    NgtUniversalModule,\r\n    DemoMaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    LoginModule,\r\n    ListingModule,\r\n    NgxUploaderModule,\r\n    CKEditorModule,\r\n    \r\n    \r\n  ],\r\n  providers: [AuthGuard,CookieService,ApiService, Resolveservice],\r\n  bootstrap: [AppComponent],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  entryComponents: [commonModalComponent,ModaleComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { ServerModule, ServerTransferStateModule } from '@angular/platform-server';\r\n\r\nimport { AppModule } from './app.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ModuleMapLoaderModule } from '@nguniversal/module-map-ngfactory-loader';\r\n\r\n@NgModule({\r\n  imports: [\r\n    AppModule,\r\n    ServerModule,\r\n    ModuleMapLoaderModule,\r\n    ServerTransferStateModule,\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppServerModule {}\r\n","<app-adminheader>\r\n    <div class=\"addadminform_wrapper\">\r\n    <form [formGroup]=\"addadminform\" (ngSubmit)=\"register()\" class=\"addadmin_registerform\" >\r\n        <mat-form-field>\r\n            <input matInput  type=\"text\" formControlName=\"firstname\" (blur)=\"inputBlur('firstname')\"  placeholder=\"Enter First Name\" >\r\n            <mat-error\r\n                    *ngIf=\"!addadminform.controls['firstname'].touched && addadminform.controls['firstname'].errors\">\r\n                First name is required</mat-error>\r\n        </mat-form-field>\r\n       \r\n        \r\n        <mat-form-field>\r\n            <input matInput  type=\"text\" formControlName=\"lastname\" (blur)=\"inputBlur('lastname')\" placeholder=\"Enter Last Name\" >\r\n            <mat-error\r\n                    *ngIf=\"!addadminform.controls['lastname'].touched && addadminform.controls['lastname'].errors\">\r\n                Last name is required</mat-error>\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field>\r\n            <input matInput type=\"email\" placeholder=\"Email\" formControlName=\"email\" (blur)=\"inputBlur('email')\">\r\n            <mat-error\r\n                    *ngIf=\"!addadminform.controls['email'].touched && addadminform.controls['email'].errors\">\r\n                Email is required</mat-error>\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field>\r\n            <input matInput  type=\"text\" formControlName=\"phone\" (blur)=\"inputBlur('phone')\"  placeholder=\"Enter Phone Number\" >\r\n            <mat-error\r\n                    *ngIf=\"!addadminform.controls['phone'].touched && addadminform.controls['phone'].errors\">\r\n                Phone Number name is required</mat-error> \r\n        </mat-form-field>\r\n        \r\n        <mat-form-field *ngIf=\"router.url == '/addadmin'\">\r\n            <input matInput  type=\"password\" formControlName=\"password\" (blur)=\"inputBlur('password')\"  placeholder=\"Enter Password\" >\r\n            <mat-error\r\n                    *ngIf=\"!addadminform.controls['password'].touched && addadminform.controls['password'].errors\">\r\n                Password is required</mat-error>\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field *ngIf=\"router.url == '/addadmin'\">\r\n            <input matInput  type=\"password\" formControlName=\"confirmpassword\" (blur)=\"inputBlur('confirmpassword')\"  placeholder=\"Enter Confirm Password\" >\r\n            <mat-error\r\n                    *ngIf=\"!addadminform.controls['confirmpassword'].touched && addadminform.controls['confirmpassword'].errors\">\r\n                Confirm Password is required</mat-error>\r\n        </mat-form-field>\r\n        <div style=\"color: red;\" *ngIf=\"addadminform.hasError('mismatchedPasswords')\">Passwords does not match</div>\r\n        \r\n        <mat-form-field>\r\n            <!-- <input matInput  type=\"text\" formControlName=\"state\" (blur)=\"inputBlur('state')\"  placeholder=\"Enter State\" > -->\r\n            <mat-label>Select State</mat-label>\r\n            <mat-select formControlName=\"state\">\r\n                <mat-option *ngFor=\"let state of stateList\" [value]=\"state.name\">{{state.name}}</mat-option>\r\n              </mat-select>\r\n            <mat-error\r\n                    *ngIf=\"!addadminform.controls['state'].touched && addadminform.controls['state'].errors\">\r\n                State is required</mat-error>\r\n        </mat-form-field>\r\n        \r\n    \r\n        <mat-form-field>\r\n            <input matInput  type=\"text\" formControlName=\"city\" (blur)=\"inputBlur('city')\"  placeholder=\"Enter City\" >\r\n            <mat-error\r\n                    *ngIf=\"!addadminform.controls['city'].touched && addadminform.controls['city'].errors\">\r\n                City is required</mat-error>\r\n        </mat-form-field>\r\n        \r\n        <mat-form-field>\r\n            <input matInput  type=\"text\" formControlName=\"zip\" (blur)=\"inputBlur('zip')\" placeholder=\"Enter Zip Code\" >\r\n            <mat-error\r\n                    *ngIf=\"!addadminform.controls['zip'].touched && addadminform.controls['zip'].errors\">\r\n                Zipcode is required</mat-error>\r\n        </mat-form-field>\r\n        <br>\r\n        <button *ngIf=\"router.url != '/addadmin'\" mat-raised-button color=\"primary\" type=\"submit\" >Update</button>\r\n        <button *ngIf=\"router.url == '/addadmin'\" mat-raised-button color=\"primary\" type=\"submit\" >Submit</button>\r\n\r\n    </form>\r\n</div>\r\n</app-adminheader>\r\n","\r\n<h2 mat-dialog-title>Admin Added Successfully!</h2>\r\n<mat-dialog-actions>\r\n  <!-- The mat-dialog-close directive optionally accepts a value as a result for the dialog. -->\r\n  <button mat-button [mat-dialog-close]=\"data\" cdkFocusInitial>Okay!</button>\r\n</mat-dialog-actions>","import { Component, OnInit ,Inject } from '@angular/core';\r\nimport { FormGroup, FormControl, FormBuilder, Validators } from '@angular/forms';\r\nimport { matchingPasswords } from '../../_helpers/must-match.validator';\r\nimport {ApiService} from '../../services/api-service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport {MatDialogRef, MAT_DIALOG_DATA, MatDialog} from \"@angular/material\";\r\nimport { THIS_EXPR } from '@angular/compiler/src/output/output_ast';\r\nimport {ActivatedRoute, Router} from '@angular/router'\r\n\r\nexport interface DialogData {\r\n  data: any;\r\n} \r\n\r\n@Component({\r\n  selector: 'app-addadmin',\r\n  templateUrl: './addadmin.component.html',\r\n  styleUrls: ['./addadmin.component.css']\r\n})\r\nexport class AddadminComponent implements OnInit {\r\n  addadminform:FormGroup;\r\n  public controls:FormControl;\r\n  public stateList:any = [];\r\n  public user_data:any=[];\r\n  public data:any=[];\r\n\r\n  constructor(public formbuilder:FormBuilder, public apiservice:ApiService, public cookieservice:CookieService, public dialog: MatDialog, public router:Router, public activatedRouter:ActivatedRoute) {\r\n\r\n    this.getStateList();\r\n    if (router.url != '/addadmin') {\r\n      this.editform();\r\n    }\r\n    this.addadminform = this.formbuilder.group({\r\n      firstname:['',Validators.required],\r\n      lastname:['',Validators.required],\r\n      email:['',Validators.required],\r\n      phone:['',Validators.required],\r\n      password:['',Validators.required],\r\n      confirmpassword:['',Validators.required],\r\n      zip:['',Validators.required],\r\n      city:['',Validators.required],\r\n      state:['',Validators.required],\r\n      type:['admin'],\r\n      status:1\r\n    },\r\n    {\r\n      validators: matchingPasswords('password', 'confirmpassword')\r\n    });\r\n  \r\n  }\r\n  ngOnInit() {\r\n  }\r\n  getStateList (){\r\n    this.apiservice.getJsonObject('assets/json/usa-states.json').subscribe(response=>{\r\n      let result:any = {};\r\n      result = response;\r\n      this.stateList = result;\r\n      \r\n    })\r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(ModaleComponent, {\r\n      panelClass:['modal-md','success-modal']\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n    });\r\n  }\r\n\r\n  register(){\r\n    if(this.addadminform.valid)\r\n    {\r\n     \r\n      let data:any={};\r\n      delete this.addadminform.value.confirmpassword;\r\n      data={\r\n        \"source\": \"user\",\r\n        \"data\": this.addadminform.value,\r\n        \"token\": this.cookieservice.get('jwttoken')\r\n    };\r\n    \r\n    this.apiservice.postDatawithoutToken('addorupdatedata',data).subscribe(res=>{\r\n      let result:any = {};\r\n      result = res;\r\n      \r\n      if(result.status=='success'){\r\n        this.openDialog();\r\n        setTimeout(()=>{\r\n          this.dialog.closeAll();\r\n        },2000);\r\n        setTimeout(() => {\r\n          this.router.navigateByUrl('/adminlist');\r\n\r\n        }, 2100);\r\n      }\r\n      \r\n    })\r\n\r\n           \r\n    }\r\n    else{\r\n      \r\n    }\r\n\r\n\r\n  }\r\n\r\n  \r\n\r\n  editform(){\r\n    let data:any={};\r\n    data={\r\n      source: \"user\",\r\n      \r\n      condition: {\r\n        _id: this.activatedRouter.snapshot.params.id,\r\n      \r\n      },\r\n      \"token\": this.cookieservice.get('jwttoken')\r\n  };\r\n  \r\n  this.apiservice.postDatawithoutToken('datalist',data).subscribe(res=>{\r\n    let result:any = {};\r\n    result = res;\r\n    // console.log(result.res)\r\n\r\n    this.addadminform.patchValue({\r\n      firstname:result.res[0].firstname,\r\n      lastname:result.res[0].lastname,\r\n      email:result.res[0].email,\r\n      phone:result.res[0].phone,\r\n      // password:result.res[0].password,\r\n      // confirmpassword:result.res[0].confirmpassword,\r\n      zip:result.res[0].zip,\r\n      city:result.res[0].city,\r\n      state:result.res[0].state\r\n\r\n    })\r\n\r\n  });\r\n\r\n  \r\n}\r\n  \r\n  \r\n  inputBlur(val:any){\r\n    \r\n    this.addadminform.controls[val].markAsUntouched();\r\n}\r\n  \r\n\r\n}\r\n\r\n\r\n@Component({\r\n  selector:'app-modale',\r\n  templateUrl:'./modale.html'\r\n})\r\nexport class ModaleComponent {\r\n  constructor( public dialogRef: MatDialogRef<ModaleComponent>,\r\n               @Inject(MAT_DIALOG_DATA) public data: DialogData){\r\n\r\n  }\r\n}","<mat-toolbar class=\"techdashboard_header\">\r\n\r\n    <span class=\"logo_wrapper\" [routerLink]=\"[ '/dashboard/admin' ]\">\r\n        <!-- <img src=\"/assets/images/logo.png\"> -->\r\n        <img src=\"../../../assets/images/logo.png\">\r\n        <button mat-flat-button><i class=\"material-icons\"> menu </i></button>\r\n    </span>\r\n\r\n    <button mat-flat-button id=\"menu_button\"><i class=\"material-icons\"> menu </i></button>\r\n    <mat-card-content class=\"quotation\" id=\"myDIV\">\r\n        <!-- <mat-nav-list>\r\n            <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"'/dashboard/admin'\"> Dashboard </a>\r\n            <a mat-list-item [routerLink]=\"'/admindashboard'\" routerLinkActive=\"active\"> Admin Dashboard </a>\r\n            <a mat-list-item [routerLink]=\"'/manage-doctor'\" routerLinkActive=\"active\"> Teledoc </a>\r\n             \r\n\r\n        </mat-nav-list> -->\r\n    </mat-card-content>\r\n\r\n\r\n    <mat-card-content class=\"profile_section\">\r\n        <mat-menu #appMenu=\"matMenu\">\r\n            <!-- <button mat-menu-item>\r\n                <mat-icon>account_circle</mat-icon> Account\r\n            </button> -->\r\n\r\n            <button type=\"button\"  [routerLink]=\"[ '/editprofile' ]\"mat-menu-item>\r\n                <mat-icon>edit</mat-icon> Edit Profile\r\n            </button>\r\n            <button type=\"button\"  (click)=\"logout()\" mat-menu-item>\r\n                <mat-icon>power_settings_new</mat-icon> Log out\r\n            </button>\r\n        </mat-menu>\r\n        <span class=\"username\">{{username}}</span>\r\n        <button mat-icon-button [matMenuTriggerFor]=\"appMenu\">\r\n            <span class=\"user_profile\">\r\n                <mat-icon>account_circle</mat-icon>\r\n                <i class=\"material-icons\">\r\n                    keyboard_arrow_down\r\n                </i>\r\n            </span>\r\n        </button>\r\n\r\n    </mat-card-content>\r\n\r\n\r\n\r\n</mat-toolbar>\r\n\r\n\r\n<div class=\"inner_wrapper\">\r\n    <div class=\"leftpannel\">\r\n        <!-- <mat-nav-list>\r\n            <a mat-list-item routerLinkActive=\"active\" [routerLink]=\"'/dashboard/admin'\"> <i class=\"material-icons\">\r\n                    bar_chart\r\n                </i> </a>\r\n            <a mat-list-item [routerLink]=\"'/manage-biller'\" routerLinkActive=\"active\"> <i class=\"material-icons\">\r\n                    list_alt\r\n                </i> </a>\r\n            <a mat-list-item [routerLink]=\"'/manage-doctor'\" routerLinkActive=\"active\"> <i\r\n                    class=\"material-icons\">smartphone </i> </a>\r\n            <a mat-list-item [routerLink]=\"'/manage-tech'\" routerLinkActive=\"active\"><i class=\"material-icons\"> list_alt\r\n                </i></a>\r\n\r\n        </mat-nav-list> -->\r\n\r\n\r\n        <mat-nav-list>\r\n            <ng-container *ngIf=\"userdetails!=null && userdetails.type=='admin'\">\r\n            <a mat-list-item  [routerLink]=\"'/admin-dashboard'\" routerLinkActive=\"active\"> Dashboard </a>\r\n            <a mat-list-item  [routerLink]=\"'/adminlist'\" routerLinkActive=\"active\"> Admin List </a>\r\n            <a mat-list-item  [routerLink]=\"'/userlist'\" routerLinkActive=\"active\"> User List </a>\r\n            <a mat-list-item [routerLink]=\"'/orderlist'\" routerLinkActive=\"active\"> All Orders </a>\r\n            \r\n        </ng-container>\r\n        <ng-container *ngIf=\"userdetails!=null && userdetails.type=='user'\">\r\n                <a mat-list-item  [routerLink]=\"'/user-dashboard'\" routerLinkActive=\"active\"> Dashboard </a>\r\n                <a mat-list-item [routerLink]=\"'/purchasedata'\" routerLinkActive=\"active\"> Purchase Data </a>\r\n                <a mat-list-item [routerLink]=\"'/myorders'\" routerLinkActive=\"active\"> My Orders </a>\r\n\r\n        </ng-container>\r\n            <a mat-list-item [routerLink]=\"'/support'\" routerLinkActive=\"active\"> Support </a>\r\n             \r\n\r\n        </mat-nav-list>\r\n\r\n\r\n\r\n\r\n    </div>\r\n    <div class=\"rightpannel\">\r\n        <ng-content></ng-content>\r\n\r\n    </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<!-- end header -->","import { Component, OnInit } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { Router } from '@angular/router';\r\n@Component({\r\n  selector: 'app-adminheader',\r\n  templateUrl: './adminheader.component.html',\r\n  styleUrls: ['./adminheader.component.css']\r\n})\r\nexport class AdminheaderComponent implements OnInit {\r\n  public userdetails:any;\r\n  public username:any;\r\n\r\n  constructor(public cookieService: CookieService,public router: Router) {\r\n  \r\n    //console.log(this.cookieService.getAll());\r\n    this.userdetails = JSON.parse(this.cookieService.get('user_details'));\r\n    this.username=this.userdetails.firstname+' '+this.userdetails.lastname;\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n  logout(){\r\n    \r\n    this.cookieService.deleteAll();\r\n    setTimeout(() => {\r\n      this.router.navigateByUrl('/login');  \r\n    }, 500);\r\n    \r\n  }\r\n}\r\n","<app-adminheader>\r\n    <button  mat-raised-button color=\"primary\" type=\"button\" [routerLink]=\"['/addadmin']\">Add Admin</button>\r\n<br>\r\n    <lib-listing *ngIf=\"admin_datalist!=null && admin_datalist.length>0\"\r\n    [datasource]=\"admin_datalist\"\r\n    [skip]=\"admin_datalist_skip\" \r\n    [modify_header_array]=\"modify_header_array\" \r\n    [apiurl]=\"apiService.api_url\" \r\n    [deleteendpoint]=\"deleteendpoint\" \r\n    [updateendpoint]=\"updateendpoint\" \r\n    [jwttoken]=\"apiService.jwttoken\" \r\n    [editroute]=\"editroute\"    \r\n    [sourcedata]=\"tablename\"  \r\n    [statusarr]=\"statusarray\" \r\n    \r\n    [searchendpoint]=\"searchendpoint\">\r\n    \r\n    </lib-listing>\r\n</app-adminheader>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api-service';\r\nimport { ActivatedRoute,Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n@Component({\r\n  selector: 'app-adminlist',\r\n  templateUrl: './adminlist.component.html',\r\n  styleUrls: ['./adminlist.component.css']\r\n})\r\nexport class AdminlistComponent implements OnInit {\r\n\r\n  public contactUsAllData: any;\r\n  public jwttoken:any;\r\ncontactUsAllDataHeaderSkipValue: any = [];\r\n  contactUsAllDataModifyHeaderValue: any = {};\r\n  admin_datalist:any=[];\r\n   ServiceListArray:any;\r\n  statusarray: any = [{val: 1, name: 'Active'}, {val: 2, name: 'Inactive'}]; \r\n  \r\n \r\n\r\n  admin_datalist_skip: any = ['_id', 'type', 'password','confirmpassword','zip','status','companywebsite','designation','type','accesscode','id','companyname'];\r\n  \r\n\r\n  \r\n  // updateendpoint is use for data update endpoint\r\n  updateendpoint = 'addorupdatedata';\r\n\r\n  // deleteendpoint is use for data delete endpoint\r\n  deleteendpoint = 'deletesingledata';\r\n\r\n  \r\n  // this is a database collection name\r\n  tablename = 'user';\r\n\r\n  // searchendpoint is use for data search endpoint\r\n  searchendpoint = 'datalist';\r\n\r\n\r\n// public serverURL: any = '';\r\neditroute: any = 'editadmin';\r\n  // use for Table Header modification \r\n// Like Table head name is \" firstname\" => \"First Name\"\r\nmodify_header_array: any = {\r\n  'firstname': \"First Name\",\r\n  'lastname': 'Last Name',\r\n  'email': 'Email Id',\r\n  'phone':'Phone Number',\r\n  'city':'City',\r\n  'state':'State',\r\n  'created at': 'Created At',\r\n  'updated at': 'Updated At',\r\n \r\n\r\n};\r\n  \r\n// this is use for  All type of search \r\nsearch_settings:any={\r\n\r\n  datesearch:[{startdatelabel:\"Start Date\",enddatelabel:\"End Date\",submit:\"Search By Date\",  field:\"created_at\"}],   // this is use for  date search \r\n\r\n\r\n  textsearch:[{label:\"Search By email\",field:'email'},{label:\"Search By Full name\",field:'name'}],  // this is use for  text search\r\n\r\n  search:[{label:\"Search By autocomplete\",field:'name'}]     // this is use for  Autocomplete search\r\n};\r\n\r\n\r\n  constructor(public apiService: ApiService,\r\n     public activatedRoute: ActivatedRoute,public router : Router,public cookieService: CookieService) { \r\n      this.jwttoken=this.cookieService.get('jwttoken');\r\n\r\n     }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.activatedRoute.data.forEach(data=>{\r\n      let result:any;\r\n      result=data;\r\n\r\n        this.admin_datalist = result.results.res;\r\n        \r\n      \r\n      \r\n    })\r\n  }\r\n\r\n\r\n}\r\n","<span class=\"as_editprofile as_billing\">\r\n<app-adminheader>\r\n  <span class=\"billingmainwrapper\">\r\n  <mat-card class=\"asbillingtitle\">\r\n      <mat-label class=\"title1\">Total Data Count:{{search_count}}</mat-label>\r\n      <mat-label class=\"title2\">Data Search:{{search_query | json}}</mat-label>\r\n  </mat-card>\r\n    \r\n        <form [formGroup]=\"BillingForm\"  (ngSubmit)=\"BillingFormSubmit()\">\r\n                <!-- <mat-error class=\"error\" *ngIf=\"msg != ''\">{{msg}}</mat-error> -->\r\n              <mat-form-field>\r\n                <input matInput type=\"text\" placeholder=\"Full Name\" formControlName=\"fullname\" (blur)=\"inputUntouched('fullname')\">\r\n                <mat-error\r\n                  *ngIf=\"!BillingForm.controls['fullname'].valid && BillingForm.controls['fullname'].errors.required && BillingForm.controls['fullname'].touched\">\r\n                  Full Name field can not be blank</mat-error>\r\n              </mat-form-field>\r\n        \r\n        \r\n              <mat-form-field>\r\n                <input matInput type=\"text\" placeholder=\"Phone Number\" formControlName=\"phone\" (blur)=\"inputUntouched('phone')\">\r\n                <mat-error\r\n                  *ngIf=\"!BillingForm.controls['phone'].valid && BillingForm.controls['phone'].errors.required && BillingForm.controls['phone'].touched\">\r\n                  Phone Number field can not be blank</mat-error>\r\n              </mat-form-field>\r\n        \r\n              <mat-form-field>\r\n                <input matInput type=\"text\" placeholder=\"Pin Code\" formControlName=\"pincode\" (blur)=\"inputUntouched('pincode')\">\r\n                <mat-error\r\n                  *ngIf=\"!BillingForm.controls['pincode'].valid && BillingForm.controls['pincode'].errors.required && BillingForm.controls['pincode'].touched\">\r\n                  Pincode field can not be blank</mat-error>\r\n                <mat-error *ngIf=\"!BillingForm.controls['pincode'].valid && !BillingForm.controls['pincode'].errors.required\">pincode is\r\n                  not valid</mat-error>\r\n              </mat-form-field>\r\n        \r\n        \r\n        \r\n              <mat-form-field>\r\n                <input matInput type=\"text\" placeholder=\"Town/City\" formControlName=\"city\" (blur)=\"inputUntouched('city')\">\r\n                <mat-error\r\n                  *ngIf=\"!BillingForm.controls['city'].valid && BillingForm.controls['city'].errors.required && BillingForm.controls['city'].touched\">\r\n                  City/Town field can not be blank</mat-error>\r\n              </mat-form-field>\r\n        \r\n        \r\n              <mat-form-field>\r\n                    <mat-label>State</mat-label>\r\n                    <mat-select formControlName=\"state\">\r\n                      <mat-option *ngFor=\"let state of state_usss\" [value]=\"state.abbreviation\">\r\n                        {{state.name}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </mat-form-field>\r\n\r\n        \r\n              <mat-form-field>\r\n                <input matInput placeholder=\"Flat/House no.\" type=\"text\" formControlName=\"housenumber\" (blur)=\"inputUntouched('housenumber')\">\r\n                <mat-error\r\n                  *ngIf=\"!BillingForm.controls['housenumber'].valid && BillingForm.controls['housenumber'].errors.required && BillingForm.controls['housenumber'].touched\">\r\n                  Flat/Houseno can not be blank</mat-error>\r\n              </mat-form-field>\r\n         \r\n             \r\n        \r\n              <mat-form-field>\r\n                <input matInput placeholder=\"Area/Colony\" type=\"text\" formControlName=\"area\" (blur)=\"inputUntouched('area')\">\r\n                <mat-error\r\n                *ngIf=\"!BillingForm.controls['area'].valid && BillingForm.controls['area'].errors.required && BillingForm.controls['area'].touched\">\r\n                Area/Colony field can not be blank</mat-error>\r\n              </mat-form-field>\r\n\r\n\r\n              <mat-form-field>\r\n                    <input matInput placeholder=\"Landmark\" type=\"text\" formControlName=\"landmark\" (blur)=\"inputUntouched('landmark')\">\r\n                    <mat-error\r\n                    *ngIf=\"!BillingForm.controls['area'].valid && BillingForm.controls['area'].errors.required && BillingForm.controls['area'].touched\">\r\n                    Land Mark can not be blank</mat-error>\r\n                  </mat-form-field>\r\n        \r\n            <button mat-raised-button color=\"primary\">Billing</button>\r\n          </form>\r\n        </span>\r\n</app-adminheader>\r\n</span>","import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\r\nimport { ApiService } from '../../services/api-service';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n@Component({\r\n  selector: 'app-billing-details',\r\n  templateUrl: './billing-details.component.html',\r\n  styleUrls: ['./billing-details.component.css']\r\n})\r\nexport class BillingDetailsComponent implements OnInit {\r\n  public BillingForm: FormGroup;\r\n  public user_Id: any;\r\n  public user_email: any;\r\n  public user: any;\r\n  public search_count: any;\r\n  public search_query: any;\r\n  public state_usss: any = [\r\n    {\r\n      \"name\": \"Alabama\",\r\n      \"abbreviation\": \"AL\"\r\n    },\r\n    {\r\n      \"name\": \"Alaska\",\r\n      \"abbreviation\": \"AK\"\r\n    },\r\n    {\r\n      \"name\": \"American Samoa\",\r\n      \"abbreviation\": \"AS\"\r\n    },\r\n    {\r\n      \"name\": \"Arizona\",\r\n      \"abbreviation\": \"AZ\"\r\n    },\r\n    {\r\n      \"name\": \"Arkansas\",\r\n      \"abbreviation\": \"AR\"\r\n    },\r\n    {\r\n      \"name\": \"California\",\r\n      \"abbreviation\": \"CA\"\r\n    },\r\n    {\r\n      \"name\": \"Colorado\",\r\n      \"abbreviation\": \"CO\"\r\n    },\r\n    {\r\n      \"name\": \"Connecticut\",\r\n      \"abbreviation\": \"CT\"\r\n    },\r\n    {\r\n      \"name\": \"Delaware\",\r\n      \"abbreviation\": \"DE\"\r\n    },\r\n    {\r\n      \"name\": \"District Of Columbia\",\r\n      \"abbreviation\": \"DC\"\r\n    },\r\n    {\r\n      \"name\": \"Federated States Of Micronesia\",\r\n      \"abbreviation\": \"FM\"\r\n    },\r\n    {\r\n      \"name\": \"Florida\",\r\n      \"abbreviation\": \"FL\"\r\n    },\r\n    {\r\n      \"name\": \"Georgia\",\r\n      \"abbreviation\": \"GA\"\r\n    },\r\n    {\r\n      \"name\": \"Guam\",\r\n      \"abbreviation\": \"GU\"\r\n    },\r\n    {\r\n      \"name\": \"Hawaii\",\r\n      \"abbreviation\": \"HI\"\r\n    },\r\n    {\r\n      \"name\": \"Idaho\",\r\n      \"abbreviation\": \"ID\"\r\n    },\r\n    {\r\n      \"name\": \"Illinois\",\r\n      \"abbreviation\": \"IL\"\r\n    },\r\n    {\r\n      \"name\": \"Indiana\",\r\n      \"abbreviation\": \"IN\"\r\n    },\r\n    {\r\n      \"name\": \"Iowa\",\r\n      \"abbreviation\": \"IA\"\r\n    },\r\n    {\r\n      \"name\": \"Kansas\",\r\n      \"abbreviation\": \"KS\"\r\n    },\r\n    {\r\n      \"name\": \"Kentucky\",\r\n      \"abbreviation\": \"KY\"\r\n    },\r\n    {\r\n      \"name\": \"Louisiana\",\r\n      \"abbreviation\": \"LA\"\r\n    },\r\n    {\r\n      \"name\": \"Maine\",\r\n      \"abbreviation\": \"ME\"\r\n    },\r\n    {\r\n      \"name\": \"Marshall Islands\",\r\n      \"abbreviation\": \"MH\"\r\n    },\r\n    {\r\n      \"name\": \"Maryland\",\r\n      \"abbreviation\": \"MD\"\r\n    },\r\n    {\r\n      \"name\": \"Massachusetts\",\r\n      \"abbreviation\": \"MA\"\r\n    },\r\n    {\r\n      \"name\": \"Michigan\",\r\n      \"abbreviation\": \"MI\"\r\n    },\r\n    {\r\n      \"name\": \"Minnesota\",\r\n      \"abbreviation\": \"MN\"\r\n    },\r\n    {\r\n      \"name\": \"Mississippi\",\r\n      \"abbreviation\": \"MS\"\r\n    },\r\n    {\r\n      \"name\": \"Missouri\",\r\n      \"abbreviation\": \"MO\"\r\n    },\r\n    {\r\n      \"name\": \"Montana\",\r\n      \"abbreviation\": \"MT\"\r\n    },\r\n    {\r\n      \"name\": \"Nebraska\",\r\n      \"abbreviation\": \"NE\"\r\n    },\r\n    {\r\n      \"name\": \"Nevada\",\r\n      \"abbreviation\": \"NV\"\r\n    },\r\n    {\r\n      \"name\": \"New Hampshire\",\r\n      \"abbreviation\": \"NH\"\r\n    },\r\n    {\r\n      \"name\": \"New Jersey\",\r\n      \"abbreviation\": \"NJ\"\r\n    },\r\n    {\r\n      \"name\": \"New Mexico\",\r\n      \"abbreviation\": \"NM\"\r\n    },\r\n    {\r\n      \"name\": \"New York\",\r\n      \"abbreviation\": \"NY\"\r\n    },\r\n    {\r\n      \"name\": \"North Carolina\",\r\n      \"abbreviation\": \"NC\"\r\n    },\r\n    {\r\n      \"name\": \"North Dakota\",\r\n      \"abbreviation\": \"ND\"\r\n    },\r\n    {\r\n      \"name\": \"Northern Mariana Islands\",\r\n      \"abbreviation\": \"MP\"\r\n    },\r\n    {\r\n      \"name\": \"Ohio\",\r\n      \"abbreviation\": \"OH\"\r\n    },\r\n    {\r\n      \"name\": \"Oklahoma\",\r\n      \"abbreviation\": \"OK\"\r\n    },\r\n    {\r\n      \"name\": \"Oregon\",\r\n      \"abbreviation\": \"OR\"\r\n    },\r\n    {\r\n      \"name\": \"Palau\",\r\n      \"abbreviation\": \"PW\"\r\n    },\r\n    {\r\n      \"name\": \"Pennsylvania\",\r\n      \"abbreviation\": \"PA\"\r\n    },\r\n    {\r\n      \"name\": \"Puerto Rico\",\r\n      \"abbreviation\": \"PR\"\r\n    },\r\n    {\r\n      \"name\": \"Rhode Island\",\r\n      \"abbreviation\": \"RI\"\r\n    },\r\n    {\r\n      \"name\": \"South Carolina\",\r\n      \"abbreviation\": \"SC\"\r\n    },\r\n    {\r\n      \"name\": \"South Dakota\",\r\n      \"abbreviation\": \"SD\"\r\n    },\r\n    {\r\n      \"name\": \"Tennessee\",\r\n      \"abbreviation\": \"TN\"\r\n    },\r\n    {\r\n      \"name\": \"Texas\",\r\n      \"abbreviation\": \"TX\"\r\n    },\r\n    {\r\n      \"name\": \"Utah\",\r\n      \"abbreviation\": \"UT\"\r\n    },\r\n    {\r\n      \"name\": \"Vermont\",\r\n      \"abbreviation\": \"VT\"\r\n    },\r\n    {\r\n      \"name\": \"Virgin Islands\",\r\n      \"abbreviation\": \"VI\"\r\n    },\r\n    {\r\n      \"name\": \"Virginia\",\r\n      \"abbreviation\": \"VA\"\r\n    },\r\n    {\r\n      \"name\": \"Washington\",\r\n      \"abbreviation\": \"WA\"\r\n    },\r\n    {\r\n      \"name\": \"West Virginia\",\r\n      \"abbreviation\": \"WV\"\r\n    },\r\n    {\r\n      \"name\": \"Wisconsin\",\r\n      \"abbreviation\": \"WI\"\r\n    },\r\n    {\r\n      \"name\": \"Wyoming\",\r\n      \"abbreviation\": \"WY\"\r\n    }\r\n  ];\r\n\r\n  constructor(public fb: FormBuilder, public router: Router, public apiService: ApiService,\r\n    public cookieService: CookieService, public _snackBar: MatSnackBar) {\r\n      this.genarateBillingForm()\r\n    this.user = JSON.parse(this.cookieService.get('user_details'));\r\n    this.user_Id = this.user._id;\r\n    this.user_email = this.user.email;\r\n    this.search_query = JSON.parse(this.cookieService.get('search_query'));\r\n    this.search_count = this.cookieService.get('search_count');\r\n    // console.log(this.search_count);\r\n    // console.log(this.search_query);\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  /**Genarate Billing Form */\r\n  genarateBillingForm() {\r\n\r\n    this.BillingForm = this.fb.group({\r\n      user_email: [this.user_email],\r\n      fullname: [null, [Validators.required]],\r\n      phone: [null, [Validators.required]],\r\n      pincode: [null, [Validators.required]],\r\n      city: [null, [Validators.required]],\r\n      area: [null, [Validators.required]],\r\n      landmark: [null, [Validators.required]],\r\n      state: [null, [Validators.required]],\r\n      housenumber: [null, [Validators.required]],\r\n      user_id:['']\r\n    });\r\n  }\r\n\r\n  /**Billing FOrm Submit */\r\n  BillingFormSubmit() {\r\n\r\n    for (let x in this.BillingForm.controls) {\r\n      this.BillingForm.controls[x].markAsTouched();\r\n    }\r\n    this.BillingForm.controls['user_id'].patchValue(this.user_Id);\r\n    if (this.BillingForm.valid) {\r\n      let allData: any = this.BillingForm.value;\r\n      allData.user_email = this.user_email;\r\n      allData.search_count = this.search_count;\r\n      allData.search_query = this.search_query;\r\n      allData.status=1;\r\n      //  console.log(allData);\r\n      let data: any = { 'source': 'billing_details', 'data': allData,'sourceobj':[\"user_id\"] };\r\n      // console.log(data);\r\n      this.apiService.postData('addorupdatedata', data).subscribe((data) => {\r\n        // console.log(data);\r\n        let d: any = {};\r\n        d = data;\r\n        if (d.status == 'success') {\r\n          this._snackBar.open('Billing Complete', '', {\r\n            duration: 3000\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  inputUntouched(val: any) {\r\n    this.BillingForm.controls[val].markAsUntouched();\r\n  }\r\n}\r\n","<span class=\"as_editprofile\">\r\n<app-adminheader>   \r\n  \r\n\r\n    <mat-card-title class=\"editprofiletitle\">edit profile</mat-card-title>\r\n      \r\n          <form [formGroup]=\"UpdateForm\"  (ngSubmit)=\"UpdateFormSubmit()\">\r\n              <!-- <mat-error class=\"error\" *ngIf=\"msg != ''\">{{msg}}</mat-error> -->\r\n            <mat-form-field>\r\n              <input matInput type=\"text\" placeholder=\"First Name\" formControlName=\"firstname\" (blur)=\"inputUntouched('firstname')\">\r\n              <mat-error\r\n                *ngIf=\"!UpdateForm.controls['firstname'].valid && UpdateForm.controls['firstname'].errors.required && UpdateForm.controls['firstname'].touched\">\r\n                First Name field can not be blank</mat-error>\r\n            </mat-form-field>\r\n      \r\n      \r\n            <mat-form-field>\r\n              <input matInput type=\"text\" placeholder=\"Last Name\" formControlName=\"lastname\" (blur)=\"inputUntouched('lastname')\">\r\n              <mat-error\r\n                *ngIf=\"!UpdateForm.controls['lastname'].valid && UpdateForm.controls['lastname'].errors.required && UpdateForm.controls['lastname'].touched\">\r\n                Last Name field can not be blank</mat-error>\r\n            </mat-form-field>\r\n      \r\n            <mat-form-field>\r\n              <input matInput type=\"text\" placeholder=\"Email\" formControlName=\"email\" (blur)=\"inputUntouched('email')\">\r\n              <mat-error\r\n                *ngIf=\"!UpdateForm.controls['email'].valid && UpdateForm.controls['email'].errors.required && UpdateForm.controls['email'].touched\">\r\n                Email field can not be blank</mat-error>\r\n              <mat-error *ngIf=\"!UpdateForm.controls['email'].valid && !UpdateForm.controls['email'].errors.required\">Email is\r\n                not valid</mat-error>\r\n            </mat-form-field>\r\n      \r\n      \r\n            <!-- added by sourav -->\r\n            <mat-form-field>\r\n              <input matInput type=\"text\" placeholder=\"Phone Number\" formControlName=\"phone\" (blur)=\"inputUntouched('phone')\">\r\n              <mat-error\r\n                *ngIf=\"!UpdateForm.controls['phone'].valid && UpdateForm.controls['phone'].errors.required && UpdateForm.controls['phone'].touched\">\r\n                Phone Number field can not be blank</mat-error>\r\n            </mat-form-field>\r\n      \r\n      \r\n         <!-- added by sourav -->\r\n      \r\n            <!-- <mat-form-field>\r\n              <input matInput placeholder=\"Password\" type=\"password\" formControlName=\"password\">\r\n              <mat-error\r\n                *ngIf=\"!UpdateForm.controls['password'].valid && UpdateForm.controls['password'].errors.required && UpdateForm.controls['password'].touched\">\r\n                Password field can not be blank</mat-error>\r\n            </mat-form-field> -->\r\n            <!-- added by sourav -->\r\n            <!-- <mat-form-field>\r\n              <input matInput placeholder=\"Confirm Password\" type=\"password\" formControlName=\"confirmpassword\">\r\n              <mat-error\r\n                *ngIf=\"!UpdateForm.controls['confirmpassword'].valid && UpdateForm.controls['confirmpassword'].errors.required && UpdateForm.controls['confirmpassword'].touched\">\r\n                Confirm Password field can not be blank</mat-error>\r\n                <!-- <mat-error *ngIf=\"!UpdateForm.controls['confirmPassword'].valid && UpdateForm.controls['confirmPassword'].touched\">Password does not match </mat-error> -->\r\n            <!-- </mat-form-field> -->\r\n      \r\n            <mat-form-field>\r\n              <input matInput placeholder=\"Zip Code\" type=\"text\" formControlName=\"zip\" (blur)=\"inputUntouched('zip')\">\r\n              <mat-error\r\n                *ngIf=\"!UpdateForm.controls['zip'].valid && UpdateForm.controls['zip'].errors.required && UpdateForm.controls['zip'].touched\">\r\n                Zip field can not be blank</mat-error>\r\n            </mat-form-field>\r\n      \r\n            <mat-form-field>\r\n              <input matInput placeholder=\"City\" type=\"text\" formControlName=\"city\" (blur)=\"inputUntouched('city')\">\r\n              <mat-error\r\n                *ngIf=\"!UpdateForm.controls['city'].valid && UpdateForm.controls['city'].errors.required && UpdateForm.controls['city'].touched\">\r\n                City field can not be blank</mat-error>\r\n            </mat-form-field>\r\n      \r\n       \r\n            <mat-form-field>\r\n            <mat-label>State</mat-label>\r\n            <mat-select formControlName=\"state\">\r\n              <mat-option *ngFor=\"let state of state_usss\" [value]=\"state.abbreviation\">\r\n                {{state.name}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </mat-form-field>\r\n      \r\n            <mat-form-field>\r\n              <input matInput placeholder=\"Company name\" type=\"text\" formControlName=\"companyname\">\r\n            \r\n            </mat-form-field>\r\n      \r\n            <mat-form-field>\r\n              <input matInput placeholder=\"Designation in company\" type=\"text\" formControlName=\"designation\">\r\n            </mat-form-field>\r\n      \r\n            <mat-form-field>\r\n              <input matInput placeholder=\"Company website\" type=\"text\" formControlName=\"companywebsite\">\r\n            </mat-form-field>\r\n      \r\n      \r\n            <!-- added by sourav -->\r\n      \r\n            <button mat-raised-button color=\"primary\">Update</button>\r\n        </form>\r\n    <a (click)=\"openDialog()\" class=\"passwordchangebtn\">For Password change click here</a>\r\n    \r\n  \r\n</app-adminheader>\r\n</span>  \r\n\r\n\r\n\r\n","<h1 mat-dialog-title>Change Password</h1>\r\n<div mat-dialog-content>\r\n  <form [formGroup]=\"resetForm\" (ngSubmit)=\"resetFormSubmit()\">\r\n\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"Old Password\" type=\"password\" formControlName=\"oldpass\" (blur)=\"inputUntouched('oldpass')\">\r\n      <mat-error\r\n        *ngIf=\"!resetForm.controls['oldpass'].valid && resetForm.controls['oldpass'].errors.required && resetForm.controls['oldpass'].touched\">\r\n        Password field can not be blank</mat-error> \r\n     <!-- <mat-error  *ngIf=\"!resetForm.controls['oldpass'].errors.required  && resetForm.controls['oldpass'].touched\">Minimum length for password is 4!</mat-error> -->\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n    <input matInput placeholder=\"New Password\" type=\"password\" formControlName=\"newpass\" (blur)=\"inputUntouched('newpass')\">\r\n    <mat-error\r\n      *ngIf=\"!resetForm.controls['newpass'].valid && resetForm.controls['newpass'].errors.required && resetForm.controls['newpass'].touched\">\r\n      Confirm Password field can not be blank</mat-error>\r\n    </mat-form-field>\r\n\r\n    <mat-form-field>\r\n      <input matInput placeholder=\"Confirm Password\" type=\"password\" formControlName=\"conpass\" (blur)=\"inputUntouched('conpass')\">\r\n      <mat-error\r\n        *ngIf=\"!resetForm.controls['conpass'].valid && resetForm.controls['conpass'].errors.required && resetForm.controls['conpass'].touched\">\r\n        Confirm Password field can not be blank</mat-error>\r\n      <!-- <mat-error *ngIf=\"f.confirmPassword.errors.mustMatch\">Confirm Password is not valid</mat-error> -->\r\n        <mat-error *ngIf=\"!resetForm.controls['conpass'].valid && resetForm.controls['conpass'].touched\">Password does not match </mat-error>\r\n    </mat-form-field>\r\n\r\n    <button mat-button color=\"primary\">Reset Password</button>\r\n    <button mat-button (click)=\"onNoClick()\">No Thanks</button>\r\n  </form>\r\n  \r\n</div>","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\r\nimport { ApiService } from '../../services/api-service';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-editprofile',\r\n  templateUrl: './editprofile.component.html',\r\n  styleUrls: ['./editprofile.component.css']\r\n})\r\n\r\nexport class EditprofileComponent implements OnInit {\r\n\r\n  // public msg:any='';\r\n  public UpdateForm: FormGroup;\r\n  public state_usss: any = [\r\n    {\r\n      \"name\": \"Alabama\",\r\n      \"abbreviation\": \"AL\"\r\n    },\r\n    {\r\n      \"name\": \"Alaska\",\r\n      \"abbreviation\": \"AK\"\r\n    },\r\n    {\r\n      \"name\": \"American Samoa\",\r\n      \"abbreviation\": \"AS\"\r\n    },\r\n    {\r\n      \"name\": \"Arizona\",\r\n      \"abbreviation\": \"AZ\"\r\n    },\r\n    {\r\n      \"name\": \"Arkansas\",\r\n      \"abbreviation\": \"AR\"\r\n    },\r\n    {\r\n      \"name\": \"California\",\r\n      \"abbreviation\": \"CA\"\r\n    },\r\n    {\r\n      \"name\": \"Colorado\",\r\n      \"abbreviation\": \"CO\"\r\n    },\r\n    {\r\n      \"name\": \"Connecticut\",\r\n      \"abbreviation\": \"CT\"\r\n    },\r\n    {\r\n      \"name\": \"Delaware\",\r\n      \"abbreviation\": \"DE\"\r\n    },\r\n    {\r\n      \"name\": \"District Of Columbia\",\r\n      \"abbreviation\": \"DC\"\r\n    },\r\n    {\r\n      \"name\": \"Federated States Of Micronesia\",\r\n      \"abbreviation\": \"FM\"\r\n    },\r\n    {\r\n      \"name\": \"Florida\",\r\n      \"abbreviation\": \"FL\"\r\n    },\r\n    {\r\n      \"name\": \"Georgia\",\r\n      \"abbreviation\": \"GA\"\r\n    },\r\n    {\r\n      \"name\": \"Guam\",\r\n      \"abbreviation\": \"GU\"\r\n    },\r\n    {\r\n      \"name\": \"Hawaii\",\r\n      \"abbreviation\": \"HI\"\r\n    },\r\n    {\r\n      \"name\": \"Idaho\",\r\n      \"abbreviation\": \"ID\"\r\n    },\r\n    {\r\n      \"name\": \"Illinois\",\r\n      \"abbreviation\": \"IL\"\r\n    },\r\n    {\r\n      \"name\": \"Indiana\",\r\n      \"abbreviation\": \"IN\"\r\n    },\r\n    {\r\n      \"name\": \"Iowa\",\r\n      \"abbreviation\": \"IA\"\r\n    },\r\n    {\r\n      \"name\": \"Kansas\",\r\n      \"abbreviation\": \"KS\"\r\n    },\r\n    {\r\n      \"name\": \"Kentucky\",\r\n      \"abbreviation\": \"KY\"\r\n    },\r\n    {\r\n      \"name\": \"Louisiana\",\r\n      \"abbreviation\": \"LA\"\r\n    },\r\n    {\r\n      \"name\": \"Maine\",\r\n      \"abbreviation\": \"ME\"\r\n    },\r\n    {\r\n      \"name\": \"Marshall Islands\",\r\n      \"abbreviation\": \"MH\"\r\n    },\r\n    {\r\n      \"name\": \"Maryland\",\r\n      \"abbreviation\": \"MD\"\r\n    },\r\n    {\r\n      \"name\": \"Massachusetts\",\r\n      \"abbreviation\": \"MA\"\r\n    },\r\n    {\r\n      \"name\": \"Michigan\",\r\n      \"abbreviation\": \"MI\"\r\n    },\r\n    {\r\n      \"name\": \"Minnesota\",\r\n      \"abbreviation\": \"MN\"\r\n    },\r\n    {\r\n      \"name\": \"Mississippi\",\r\n      \"abbreviation\": \"MS\"\r\n    },\r\n    {\r\n      \"name\": \"Missouri\",\r\n      \"abbreviation\": \"MO\"\r\n    },\r\n    {\r\n      \"name\": \"Montana\",\r\n      \"abbreviation\": \"MT\"\r\n    },\r\n    {\r\n      \"name\": \"Nebraska\",\r\n      \"abbreviation\": \"NE\"\r\n    },\r\n    {\r\n      \"name\": \"Nevada\",\r\n      \"abbreviation\": \"NV\"\r\n    },\r\n    {\r\n      \"name\": \"New Hampshire\",\r\n      \"abbreviation\": \"NH\"\r\n    },\r\n    {\r\n      \"name\": \"New Jersey\",\r\n      \"abbreviation\": \"NJ\"\r\n    },\r\n    {\r\n      \"name\": \"New Mexico\",\r\n      \"abbreviation\": \"NM\"\r\n    },\r\n    {\r\n      \"name\": \"New York\",\r\n      \"abbreviation\": \"NY\"\r\n    },\r\n    {\r\n      \"name\": \"North Carolina\",\r\n      \"abbreviation\": \"NC\"\r\n    },\r\n    {\r\n      \"name\": \"North Dakota\",\r\n      \"abbreviation\": \"ND\"\r\n    },\r\n    {\r\n      \"name\": \"Northern Mariana Islands\",\r\n      \"abbreviation\": \"MP\"\r\n    },\r\n    {\r\n      \"name\": \"Ohio\",\r\n      \"abbreviation\": \"OH\"\r\n    },\r\n    {\r\n      \"name\": \"Oklahoma\",\r\n      \"abbreviation\": \"OK\"\r\n    },\r\n    {\r\n      \"name\": \"Oregon\",\r\n      \"abbreviation\": \"OR\"\r\n    },\r\n    {\r\n      \"name\": \"Palau\",\r\n      \"abbreviation\": \"PW\"\r\n    },\r\n    {\r\n      \"name\": \"Pennsylvania\",\r\n      \"abbreviation\": \"PA\"\r\n    },\r\n    {\r\n      \"name\": \"Puerto Rico\",\r\n      \"abbreviation\": \"PR\"\r\n    },\r\n    {\r\n      \"name\": \"Rhode Island\",\r\n      \"abbreviation\": \"RI\"\r\n    },\r\n    {\r\n      \"name\": \"South Carolina\",\r\n      \"abbreviation\": \"SC\"\r\n    },\r\n    {\r\n      \"name\": \"South Dakota\",\r\n      \"abbreviation\": \"SD\"\r\n    },\r\n    {\r\n      \"name\": \"Tennessee\",\r\n      \"abbreviation\": \"TN\"\r\n    },\r\n    {\r\n      \"name\": \"Texas\",\r\n      \"abbreviation\": \"TX\"\r\n    },\r\n    {\r\n      \"name\": \"Utah\",\r\n      \"abbreviation\": \"UT\"\r\n    },\r\n    {\r\n      \"name\": \"Vermont\",\r\n      \"abbreviation\": \"VT\"\r\n    },\r\n    {\r\n      \"name\": \"Virgin Islands\",\r\n      \"abbreviation\": \"VI\"\r\n    },\r\n    {\r\n      \"name\": \"Virginia\",\r\n      \"abbreviation\": \"VA\"\r\n    },\r\n    {\r\n      \"name\": \"Washington\",\r\n      \"abbreviation\": \"WA\"\r\n    },\r\n    {\r\n      \"name\": \"West Virginia\",\r\n      \"abbreviation\": \"WV\"\r\n    },\r\n    {\r\n      \"name\": \"Wisconsin\",\r\n      \"abbreviation\": \"WI\"\r\n    },\r\n    {\r\n      \"name\": \"Wyoming\",\r\n      \"abbreviation\": \"WY\"\r\n    }\r\n  ];\r\n  constructor(public fb: FormBuilder, public router: Router, public dialog: MatDialog, \r\n    public apiService: ApiService, public cook: CookieService,public _snackBar: MatSnackBar) {\r\n    this.UpdateForm = this.fb.group({\r\n      id: [null, null],\r\n      email: [null, Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\r\n      firstname: [null, Validators.required],\r\n      lastname: [null, Validators.required],\r\n      phone: [null, Validators.required],\r\n      zip: [null, Validators.required],\r\n      city: [null, Validators.required],\r\n      state: [null, Validators.required],\r\n      companyname: [null],\r\n      designation: [null],\r\n      companywebsite: [null]\r\n    });\r\n\r\n    this.genarateupdateform();\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n  genarateupdateform() {\r\n    let userdetails = this.cook.get('user_details');\r\n    let cookie: any;\r\n    cookie = JSON.parse(userdetails);\r\n    console.log(cookie._id);\r\n\r\n    this.UpdateForm.patchValue({\r\n      id: cookie._id,\r\n      email: cookie.email,\r\n      firstname: cookie.firstname,\r\n      lastname: cookie.lastname,\r\n      phone: cookie.phone,\r\n      zip: cookie.zip,\r\n      city: cookie.city,\r\n      state: cookie.state,\r\n      companyname: cookie.companyname,\r\n      designation: cookie.designation,\r\n      companywebsite: cookie.companywebsite,\r\n    });\r\n  }\r\n\r\n  // machpassword(passwordkye: string, confirmpasswordkye: string) {\r\n  //   return (group: FormGroup) => {\r\n  //     let passwordInput = group.controls[passwordkye],\r\n  //       confirmpasswordInput = group.controls[confirmpasswordkye];\r\n  //     if (passwordInput.value !== confirmpasswordInput.value) {\r\n  //       return confirmpasswordInput.setErrors({ notEquivalent: true });\r\n  //     }\r\n  //     else {\r\n  //       return confirmpasswordInput.setErrors(null);\r\n  //     }\r\n  //   };\r\n  // }\r\n\r\n  UpdateFormSubmit() {\r\n    for (let x in this.UpdateForm.controls) {\r\n      this.UpdateForm.controls[x].markAsTouched();\r\n    }\r\n\r\n    if (this.UpdateForm.valid) {\r\n      console.log(this.UpdateForm.value);\r\n      let data: any = { 'source': 'user', 'data': this.UpdateForm.value };\r\n      this.apiService.postData('addorupdatedata', data).subscribe((data) => {\r\n       // console.log(data);\r\n        let result:any={}\r\n        result=data;\r\n        if(result.status=='success')\r\n        {\r\n          this._snackBar.open('Update Complete', '', {\r\n            duration: 3000\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  inputUntouched(val: any) {\r\n    this.UpdateForm.controls[val].markAsUntouched();\r\n  }\r\n\r\n\r\n  openDialog(): void {\r\n    const dialogRef = this.dialog.open(commonModalComponent, {\r\n      width: '250px',\r\n\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n\r\n    });\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\n@Component({\r\n  selector: 'commonModal',\r\n  templateUrl: '../commonModal/commonModal.html',\r\n})\r\nexport class commonModalComponent {\r\n  public msg: any = '';\r\n  public resetForm: FormGroup;\r\n  constructor(public dialogRef: MatDialogRef<commonModalComponent>, public fbb: FormBuilder, public cook: CookieService, public apiService: ApiService,\r\n    public _snackBar: MatSnackBar) {\r\n    let userdetails = this.cook.get('user_details');\r\n    let cookie: any;\r\n    cookie = JSON.parse(userdetails);\r\n\r\n    this.resetForm = this.fbb.group({\r\n      id: [cookie._id, null],\r\n      oldpass: [null, Validators.required],\r\n      newpass: [null, Validators.required],\r\n      conpass: [null, Validators.required],\r\n      \r\n    },{\r\n      validator: this.machpassword('newpass', 'conpass')\r\n  });\r\n  }\r\n  machpassword(passwordkye: string, confirmpasswordkye: string) {\r\n    return (group: FormGroup) => {\r\n      let passwordInput = group.controls[passwordkye],\r\n        confirmpasswordInput = group.controls[confirmpasswordkye];\r\n      if (passwordInput.value !== confirmpasswordInput.value) {\r\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\r\n      }\r\n      else {\r\n        return confirmpasswordInput.setErrors(null);\r\n      }\r\n    };\r\n  }\r\n\r\n  resetFormSubmit() {\r\n    for (let x in this.resetForm.controls) {\r\n      this.resetForm.controls[x].markAsTouched();\r\n    }\r\n    if (this.resetForm.valid) {\r\n      console.log(this.resetForm.value);\r\n      if (this.resetForm.value.conpass != null) {\r\n        delete this.resetForm.value.conpass;\r\n        let data: any = {\r\n          \"_id\": this.resetForm.value.id,\r\n          \"oldPassword\": this.resetForm.value.oldpass,\r\n          \"newPassword\": this.resetForm.value.newpass\r\n        };\r\n        this.apiService.postDatawithoutToken('changepassword', data).subscribe((data) => {\r\n          let d: any = data;\r\n          if (d.Status == \"true\") {\r\n            this._snackBar.open(d.message, '', {\r\n              duration: 3000\r\n            });\r\n            setTimeout(()=>{\r\n              this.dialogRef.close();\r\n            },3000);\r\n          }\r\n          else {\r\n            this._snackBar.open(d.message, '', {\r\n              duration: 3000\r\n            });\r\n           \r\n          }\r\n\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  inputUntouched(val: any) {\r\n    this.resetForm.controls[val].markAsUntouched();\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","<mat-card class=\"as_loginbg as_forgotpassbg\">\r\n\r\n<lib-forget-password [formTitle]=\"formTitle\"\r\n [serverUrl]=\"serverUrl\"\r\n [signUpRouteingUrl]=\"signUpRouteingUrl\"\r\n [domanUrl]=\"domanUrl\"\r\n [addEndpoint]=\"addEndpoint\"\r\n [loginRouteingUrl]=\"loginRouteingUrl\"\r\n [logo]=\"logo\"> </lib-forget-password>\r\n\r\n</mat-card>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from 'src/app/services/api-service';\r\n@Component({\r\n  selector: 'app-forget',\r\n  templateUrl: './forget.component.html',\r\n  styleUrls: ['./forget.component.css']\r\n})\r\nexport class ForgetComponent implements OnInit {\r\n\r\n  public logo: any = '';\r\n  public signUpRouteingUrl: any = '/sign-up';\r\n  public loginRouteingUrl: any = '/login';\r\n  public formTitle: any = 'Forget Password';\r\n  public serverUrl:any = this.apiService.api_url;\r\n  public addEndpoint: any = {\r\n    endpoint:'forgetpassword'\r\n  };\r\n\r\n  public domanUrl: any = '';\r\n  constructor(public apiService: ApiService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  \r\n\r\n}\r\n","<mat-card class=\"as_loginbg\">\r\n    <lib-login [fromTitle]=\"fromTitle\" [fullUrl]=\"fullUrl\" [forgetRouteingUrl]=\"forgetRouteingUrl\"\r\n    [signUpRouteingUrl]='signUpRouteingUrl' [routerStatus]=\"routerStatus\" [endpoint]=\"endpoint\"\r\n     [logo]=\"logo\" [buttonName]=\"buttonName\"></lib-login>\r\n</mat-card>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api-service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public logo: any = '';\r\n  public fromTitle: any = \"Login\";    // This is a From Title \r\n   public token:any;\r\n  public endpoint: any = \"login\";\r\n  public fullUrl: any = this.apiService.api_url; // server url\r\n  public routerStatus: any;\r\n  public buttonName:any= 'Login';\r\n  public signUpRouteingUrl: any = { \r\n    // \"path\":\"sign-up\",\r\n    \"path\":\"sign-up\",\r\n    \"buttonName\":\"Sign Up\",\r\n    \"customLink\":\"\",\r\n    \"customURl\":\"\"\r\n  };\r\n\r\n  public forgetRouteingUrl: any = {\r\n    // \"path\":\"forget-password\",\r\n    \"path\":\"forget\",\r\n    \"buttonName\":\"Forget Password\",\r\n    \"customLink\":\"\",\r\n    \"customURl\":\"\"\r\n  };\r\n  constructor(public apiService: ApiService,public cook:CookieService) {\r\n    this.routerStatus = {           // this is use for if login succcess then navigate which page \r\n      \"data\": [\r\n        {\r\n          \"type\": \"admin\",\r\n          \"routerNav\": \"admin-dashboard\"\r\n        },\r\n        {\r\n          \"type\": \"user\",\r\n          \"routerNav\": \"user-dashboard\"\r\n        },\r\n        {\r\n          \"type\": \"model\",\r\n          \"routerNav\": \"modelDashbord\"\r\n        }\r\n      ]\r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n}\r\n","<app-adminheader>\r\n  <lib-listing *ngIf=\"pendingmodelapplicationarray!=null && pendingmodelapplicationarray.length>0\" \r\n    [datasource]=\"pendingmodelapplicationarray\"\r\n    [skip]=\"pendingmodelapplicationarray_skip\" \r\n    [modify_header_array]=\"modify_header_array\" \r\n    [apiurl]=\"apiService.api_url\" \r\n    [deleteendpoint]=\"deleteendpoint\" \r\n    [updateendpoint]=\"updateendpoint\" \r\n    [jwttoken]=\"apiService.jwttoken\" \r\n    [editroute]=\"editroute\"\r\n    [sourcedata]=\"tablename\"  \r\n    [statusarr]=\"statusarray\" \r\n    [detail_skip_array]=\"pendingmodelapplicationarray_detail_skip\" \r\n    [searchendpoint]=\"searchendpoint\"></lib-listing>\r\n</app-adminheader>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api-service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n@Component({\r\n  selector: 'app-orders',\r\n  templateUrl: './orders.component.html',\r\n  styleUrls: ['./orders.component.css']\r\n})\r\nexport class OrdersComponent implements OnInit {\r\n  public UserAllData: any;\r\n  UserAllDataHeaderSkipValue: any = [];\r\n    UserAllDataModifyHeaderValue: any = {};\r\n    statusarray: any = [{val: 1, name: 'Pending'}, {val: 2, name: 'Cancelled'}, {val: 3, name: 'Delivered'}]; \r\n\r\n    pendingmodelapplicationarray: any = [];\r\n  pendingmodelapplicationarray_skip: any = ['_id','user_id' ,'user_type','user_phone' ,'fullname',  'pincode','area','landmark',\r\n  'housenumber','billing_type'];\r\n  pendingmodelapplicationarray_detail_skip: any = ['_id','user_id','user_fullname','user_type',];\r\n\r\n    updateendpoint = 'addorupdatedata';\r\n    deleteendpoint = 'deletesingledata';\r\n    tablename = 'user';\r\n    searchendpoint = 'datalist';\r\n    editroute: any = 'editroute';\r\n    modify_header_array: any = {\r\n      'fullname': \"Name\",\r\n      'phone': \"Phone Number\",\r\n      'search count': \"Data Purchase\",\r\n      'user email':\"Email ID\",\r\n      'created at': \"Created on\",\r\n      'state':\"State\",\r\n      'city':\"City\"\r\n    };\r\n\r\n     // this is use for  All type of search \r\n     search_settings:any={\r\n\r\n      datesearch:[{startdatelabel:\"Start Date\",enddatelabel:\"End Date\",submit:\"Search By Date\",  field:\"created_at\"}],   // this is use for  date search \r\n\r\n      textsearch:[{label:\"Search By email\",field:'email'},{label:\"Search By Full name\",field:'name'}],  // this is use for  text search\r\n\r\n      search:[{label:\"Search By autocomplete\",field:'name'}]     // this is use for  Autocomplete search\r\n  }\r\n\r\n  \r\n  constructor(public apiService: ApiService, public activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.data.forEach(data=>{\r\n      let result:any;\r\n      result=data;\r\n    //console.log(data.results.res);\r\n      this.pendingmodelapplicationarray = result.results.res;\r\n    \r\n    })\r\n  }\r\n\r\n}\r\n","<!-- mat spinner for data search -->\r\n<div class=\"spinne_main\"  *ngIf=\"spinnerval==1\">\r\n    <div class=\"spinne_wrapper\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n</div>\r\n<app-adminheader>\r\n\r\n    <!-- header text-->\r\n  <mat-toolbar color=\"primary\">\r\n\r\n  <mat-toolbar-row>\r\n    <span>Purchase Data</span>\r\n  </mat-toolbar-row>\r\n  </mat-toolbar>\r\n  <br>\r\n<!-- consumer panel and business panel -->\r\n<mat-card class=\"asnewclass\">\r\n\r\n    <mat-list role=\"list\">\r\n        <mat-list-item (click)=\"dataType='consumer';openConsumerPanel()\"\r\n         [ngClass]=\"{'active':dataType === 'consumer'}\"\r\n         role=\"listitem\"><h2>Consumer Data </h2>\r\n        </mat-list-item>\r\n\r\n        <mat-list-item (click)=\"dataType='business';openBusinessPanel()\"\r\n         [ngClass]=\"{'active':dataType === 'business'}\"\r\n          role=\"listitem\"><h2>Business Data</h2>\r\n        </mat-list-item>\r\n\r\n    </mat-list>\r\n\r\n</mat-card>\r\n<!-- form group for consumer data -->\r\n<mat-card  *ngIf=\"dataType != '' && dataType == 'consumer' && search_count=='0'\">\r\n  <form [formGroup]=\"consumarform\"  >\r\n        <mat-accordion >\r\n                <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\" >\r\n                        <mat-expansion-panel-header>\r\n                          <mat-panel-title>\r\n                            Personal Data\r\n                          </mat-panel-title>\r\n                        \r\n                        </mat-expansion-panel-header>\r\n\r\n                        <mat-form-field>\r\n                          <input matInput type=\"text\" formControlName=\"First_Name\" placeholder=\"First Name\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                          <input matInput type=\"text\" formControlName=\"Middle_Initial\"  placeholder=\"Middle Name\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                            <input matInput type=\"text\"  formControlName=\"Last_Name\" placeholder=\"Last Name\">\r\n                          </mat-form-field>\r\n\r\n                        <mat-action-row>\r\n                          <button mat-button color=\"primary\" (click)=\"nextStep()\">Next</button>\r\n                        </mat-action-row>\r\n                      </mat-expansion-panel>\r\n\r\n                      <mat-expansion-panel [expanded]=\"step === 1\" (opened)=\"setStep(1)\" >\r\n                        <mat-expansion-panel-header>\r\n                          <mat-panel-title>\r\n                           Location\r\n                          </mat-panel-title>  \r\n                          \r\n                        </mat-expansion-panel-header>\r\n\r\n                        <mat-form-field>\r\n                            <input matInput formControlName=\"Physical_Address\"  placeholder=\"Address\">\r\n                          </mat-form-field>\r\n\r\n                        <mat-form-field >\r\n                          <mat-label>Select State</mat-label>\r\n                         <mat-select formControlName=\"Physical_State\">\r\n                          <mat-option *ngFor=\"let state of stateList\" [value]=\"state.abbreviation\">{{state.name}}</mat-option>\r\n                          </mat-select>\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                            <mat-label>select city</mat-label>\r\n                            <mat-select formControlName=\"Physical_City\">\r\n                            <mat-option *ngFor=\"let city of cityList\" [value]=\"city.city\">{{city.city}}</mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n                        \r\n                            <mat-form-field>\r\n                                <input matInput formControlName=\"Physical_Zip\"   placeholder=\"Zip Code\">\r\n                              </mat-form-field>\r\n\r\n                              <mat-form-field>\r\n                                  <input matInput formControlName=\"Area_Code\"   placeholder=\"Area Code\">\r\n                                </mat-form-field>\r\n\r\n                                <mat-form-field>\r\n                                    <input matInput formControlName=\"Tally_County_Code\"   placeholder=\"County Code\">\r\n                                  </mat-form-field>\r\n                        <mat-action-row>\r\n                          <button mat-button color=\"warn\" (click)=\"prevStep()\">Previous</button>\r\n                          <button mat-button color=\"primary\" (click)=\"nextStep()\">Next</button>\r\n                        </mat-action-row>\r\n                      </mat-expansion-panel>\r\n                      <mat-expansion-panel [expanded]=\"step === 2\" (opened)=\"setStep(2)\" >\r\n                        <mat-expansion-panel-header>\r\n                          <mat-panel-title>\r\n                            Household  \r\n                           </mat-panel-title>\r\n                          \r\n                        </mat-expansion-panel-header>\r\n\r\n                        <mat-form-field>\r\n                          <input matInput formControlName=\"Income_Code\" placeholder=\"Total Income\">\r\n                        </mat-form-field>\r\n                    \r\n                        <mat-form-field>\r\n                            <mat-label>Select Number of Children</mat-label>\r\n                            <mat-select formControlName=\"Number_Children\">\r\n                            <mat-option *ngFor=\"let children of ChildrenList\" [value]=\"children.value\">{{children.name}}</mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                          <input matInput formControlName=\"DiscretionaryIncomeCode\" placeholder=\"Discretionary Income \">\r\n                        </mat-form-field>\r\n\r\n                  \r\n                        <mat-form-field>\r\n                            <mat-label>Select Median Household Income</mat-label>\r\n                            <mat-select formControlName=\"Median_HseHld_Income_Code\">\r\n                            <mat-option *ngFor=\"let home of homeList\" [value]=\"home.value\">{{home.name}}</mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n\r\n                          <mat-form-field>\r\n                            <mat-label>Select Household Size</mat-label>\r\n                            <mat-select formControlName=\"Household_Size\">\r\n                            <mat-option *ngFor=\"let household of HouseholdList\" [value]=\"household.value\">{{household.name}}</mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                          <input matInput formControlName=\"UnsecuredCreditCapacityCode\" placeholder=\"Unsecured Credit Capacity\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                            <mat-label>Select Vehicle Dominate</mat-label>\r\n                            <mat-select formControlName=\"Vehicle_Dominate\">\r\n                            <mat-option *ngFor=\"let vehicle of VehicleList\" [value]=\"vehicle.value\">{{vehicle.name}}</mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n\r\n                       \r\n                        <mat-form-field>\r\n                            <mat-label>Select Business Owner</mat-label>\r\n                            <mat-select formControlName=\"Business_Owner\">\r\n                          <mat-option *ngFor=\"let Business of BusinessownerList\" [value]=\"Business.value\">{{Business.name}}</mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                          <input matInput formControlName=\"NetWorth_Code\" placeholder=\"NetWorth Code\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-form-field>\r\n                          <input matInput formControlName=\"Donor_Capacity_Code\" placeholder=\"Donor Capacity Code\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-action-row>\r\n                          <button mat-button color=\"warn\" (click)=\"prevStep()\">Previous</button>\r\n                          <button mat-button color=\"primary\" (click)=\"nextStep()\">End</button>\r\n                        </mat-action-row>\r\n                      </mat-expansion-panel>\r\n\r\n\r\n        </mat-accordion>\r\n        <br>\r\n        \r\n        <button mat-raised-button color=\"primary\"  (click)=\"purchaseDataForConsumar()\">Search</button>\r\n      \r\n      </form>\r\n\r\n</mat-card>\r\n<!-- search count for consumer data -->\r\n<mat-card *ngIf=\"dataType ==='consumer' && search_count!='0'\">\r\n\r\n  <h4>Total Data found : {{search_count}}</h4>\r\n\r\n  <button mat-raised-button *ngIf=\"search_count!='' && search_count!='0'\" color=\"primary\" (click)=\"showconsumerdata()\" >Show Sample Data</button>\r\n\r\n</mat-card>\r\n\r\n<br>\r\n<!-- table for consumer data -->\r\n<mat-card *ngIf=\"search_count!='0' && dataType ==='consumer' && consumerdata!=null \">\r\n    <div  *ngIf=\"search_count!='0' && dataType ==='consumer' && consumerdata!=null \">\r\n        <button mat-raised-button color=\"primary\" [routerLink]=\"'/billing'\">Purchase Now!</button>\r\n      <mat-form-field>\r\n        <input matInput (keyup)=\"filter($event.target.value)\" placeholder=\"Filter\">\r\n      </mat-form-field>\r\n      <div class=\"mat-elevation-z8\">\r\n      <table mat-table [dataSource]=\"consumerdata\" matSort>\r\n    \r\n      \r\n          <ng-container matColumnDef=\"First_Name\" >\r\n            <th mat-header-cell *matHeaderCellDef>First Name </th>\r\n            <td mat-cell *matCellDef=\"let i\" [innerHTML]=\"i.First_Name\" > {{i.First_Name}} </td>\r\n          </ng-container>\r\n        <ng-container matColumnDef=\"Last_Name\">\r\n            <th mat-header-cell *matHeaderCellDef>Last Name </th>\r\n            <td mat-cell *matCellDef=\"let i \" [innerHTML]=\"i.Last_Name\" > {{i.Last_Name}} </td>\r\n          </ng-container>\r\n    \r\n          <ng-container matColumnDef=\"Ind_Gender_Code\">\r\n              <th mat-header-cell *matHeaderCellDef> Gender</th>\r\n              <td mat-cell *matCellDef=\"let i\"> {{i.Ind_Gender_Code}} </td>\r\n            </ng-container>\r\n    \r\n    \r\n          <ng-container matColumnDef=\"Ind_Age\">\r\n              <th mat-header-cell *matHeaderCellDef>Age </th>\r\n              <td mat-cell *matCellDef=\"let i \" > {{i.Ind_Age}} </td>\r\n            </ng-container>\r\n    \r\n            <ng-container matColumnDef=\"Email\">\r\n                <th mat-header-cell *matHeaderCellDef>Email </th>\r\n                <td mat-cell *matCellDef=\"let i \"> {{i.Email}} </td>\r\n              </ng-container>\r\n    \r\n        <ng-container matColumnDef=\"Phone\">\r\n            <th mat-header-cell *matHeaderCellDef>Phone Number </th>\r\n            <td mat-cell *matCellDef=\"let i\"> {{i.Phone}} </td>\r\n          </ng-container>\r\n    \r\n          <ng-container matColumnDef=\"Physical_Address\">\r\n              <th mat-header-cell *matHeaderCellDef> Address </th>\r\n              <td mat-cell *matCellDef=\"let i\"> {{i.Physical_Address}} </td>\r\n            </ng-container>\r\n    \r\n            <ng-container matColumnDef=\"Physical_Zip\">\r\n                <th mat-header-cell *matHeaderCellDef> ZipCode </th>\r\n                <td mat-cell *matCellDef=\"let i\"> {{i.Physical_Zip}} </td>\r\n            </ng-container>\r\n    \r\n    \r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    \r\n          </table>\r\n          <mat-paginator [pageSizeOptions]=\"[5, 10, 20,50]\" showFirstLastButtons></mat-paginator>\r\n        </div>\r\n    </div>\r\n    \r\n    </mat-card>\r\n\r\n\r\n    <!-- form group for business data -->\r\n <mat-card  *ngIf=\"dataType !='' && dataType == 'business' && search_count=='0' \">\r\n    <form [formGroup]=\"businessForm\">\r\n        <mat-accordion >\r\n                <mat-expansion-panel [expanded]=\"step === 0\" (opened)=\"setStep(0)\" >\r\n                        <mat-expansion-panel-header>\r\n                          <mat-panel-title>\r\n                            Location\r\n                          </mat-panel-title>\r\n                          \r\n                        </mat-expansion-panel-header>\r\n\r\n                        <mat-form-field>\r\n                          <input matInput placeholder=\"Location\" formControlName=\"Location_Sales_Code\">\r\n                        </mat-form-field>\r\n\r\n                        <mat-action-row>\r\n                          <button mat-button color=\"primary\" (click)=\"nextStep()\">Next</button>\r\n                        </mat-action-row>\r\n                      </mat-expansion-panel>\r\n\r\n                      <mat-expansion-panel [expanded]=\"step === 1\" (opened)=\"setStep(1)\" >\r\n                        <mat-expansion-panel-header>\r\n                          <mat-panel-title>\r\n                            Office\r\n                          </mat-panel-title>\r\n                        \r\n                        </mat-expansion-panel-header>\r\n\r\n                        \r\n                        <mat-form-field>\r\n                            <mat-label>Select Years In Business</mat-label>\r\n                            <mat-select formControlName=\"Years_In_Business_Code\">\r\n                            <mat-option *ngFor=\"let business of yearofbusinessList\" [value]=\"business.value\">{{business.name}}</mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n\r\n                       \r\n                        <mat-form-field>\r\n                            <mat-label>Select Square Footage</mat-label>\r\n                            <mat-select formControlName=\"Square_Footage_Code\">\r\n                            <mat-option *ngFor=\"let footage of squareFootageList\" [value]=\"footage.value\">{{footage.name}}</mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n\r\n                        \r\n                        <mat-form-field>\r\n                            <mat-label>Select Number Of PCs</mat-label>\r\n                            <mat-select formControlName=\"Number_Of_PCs_Code\">\r\n                            <mat-option *ngFor=\"let NumberOfPcs of NumberOfPcsList\" [value]=\"NumberOfPcs.value\">{{NumberOfPcs.name}}</mat-option>\r\n                            </mat-select>\r\n                          </mat-form-field>\r\n\r\n                        <mat-action-row>\r\n                          <button mat-button color=\"warn\" (click)=\"prevStep()\">Previous</button>\r\n                          <button mat-button color=\"primary\" (click)=\"nextStep()\">End</button>\r\n                        </mat-action-row>\r\n                      </mat-expansion-panel>\r\n\r\n\r\n\r\n\r\n        </mat-accordion>\r\n        <br>\r\n        <button mat-raised-button color=\"primary\" (click)='businessFormSubmit()'>Search</button>\r\n      </form>\r\n</mat-card>\r\n<!-- search count for business data -->\r\n<mat-card *ngIf=\"dataType == 'business' && search_count !='0'\">\r\n  <h3>Total Result :{{search_count}}</h3>\r\n  <br>\r\n  <button type=\"button\" *ngIf=\"search_count!='' && search_count!='0'\" mat-raised-button color=\"primary\" (click)=\"showbusinessdata()\">Show Sample Data</button>\r\n  \r\n</mat-card>\r\n<br>\r\n<!-- table for business -->\r\n\r\n<mat-card  *ngIf=\"search_count!='0' && dataType ==='business' && businessdata!=null \">\r\n\r\n  <div  *ngIf=\"search_count!='0' && dataType ==='business' && businessdata!=null \"  >\r\n      <button mat-raised-button color=\"primary\" [routerLink]=\"'/billing'\">Purchase Now!</button>\r\n    <mat-form-field>\r\n      <input matInput (keyup)=\"filter($event.target.value)\" placeholder=\"Filter\">\r\n    </mat-form-field>\r\n    <div class=\"mat-elevation-z8\">\r\n    <table mat-table [dataSource]=\"businessdata\" matSort>\r\n  \r\n    \r\n        <ng-container matColumnDef=\"First_Name\" >\r\n          <th mat-header-cell *matHeaderCellDef>First Name </th>\r\n          <td mat-cell *matCellDef=\"let i\" [innerHTML]=\"i.First_Name\" > {{i.First_Name}} </td>\r\n        </ng-container>\r\n      <ng-container matColumnDef=\"Last_Name\">\r\n          <th mat-header-cell *matHeaderCellDef>Last Name </th>\r\n          <td mat-cell *matCellDef=\"let i \" [innerHTML]=\"i.Last_Name\" > {{i.Last_Name}} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"Ind_Gender_Code\">\r\n            <th mat-header-cell *matHeaderCellDef> Gender</th>\r\n            <td mat-cell *matCellDef=\"let i\"> {{i.Ind_Gender_Code}} </td>\r\n          </ng-container>\r\n  \r\n  \r\n        <ng-container matColumnDef=\"Ind_Age\">\r\n            <th mat-header-cell *matHeaderCellDef>Age </th>\r\n            <td mat-cell *matCellDef=\"let i \" > {{i.Ind_Age}} </td>\r\n          </ng-container>\r\n  \r\n          <ng-container matColumnDef=\"Email\">\r\n              <th mat-header-cell *matHeaderCellDef>Email </th>\r\n              <td mat-cell *matCellDef=\"let i \"> {{i.Email}} </td>\r\n            </ng-container>\r\n  \r\n      <ng-container matColumnDef=\"Phone\">\r\n          <th mat-header-cell *matHeaderCellDef>Phone Number </th>\r\n          <td mat-cell *matCellDef=\"let i\"> {{i.Phone}} </td>\r\n        </ng-container>\r\n  \r\n        <ng-container matColumnDef=\"Physical_Address\">\r\n            <th mat-header-cell *matHeaderCellDef> Address </th>\r\n            <td mat-cell *matCellDef=\"let i\"> {{i.Physical_Address}} </td>\r\n          </ng-container>\r\n  \r\n          <ng-container matColumnDef=\"Physical_Zip\">\r\n              <th mat-header-cell *matHeaderCellDef> ZipCode </th>\r\n              <td mat-cell *matCellDef=\"let i\"> {{i.Physical_Zip}} </td>\r\n          </ng-container>\r\n  \r\n  \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  \r\n        </table>\r\n        <mat-paginator [pageSizeOptions]=\"[5, 10, 20,50]\" showFirstLastButtons></mat-paginator>\r\n      </div>\r\n    </div>\r\n  </mat-card>\r\n  \r\n\r\n</app-adminheader>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ApiService } from '../../services/api-service';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-purchasedata',\r\n  templateUrl: './purchasedata.component.html',\r\n  styleUrls: ['./purchasedata.component.css']\r\n})\r\nexport class PurchasedataComponent implements OnInit {\r\n\r\n  @ViewChild(FormGroupDirective, { static: true }) formDirective: FormGroupDirective;\r\n\r\n\r\n  public dataType: any = '';\r\n  public data: any = {}\r\n  public dataSource: any;\r\n  public businessForm: FormGroup;\r\n  public apitoken: any = '';\r\n  public consumarform: FormGroup;\r\n  public search_count: any = '0';\r\n  public consumerdata: any = null;\r\n  public businessdata: any = null;\r\n  public spinnerval: any = 0;\r\n  public stateList: any = {};\r\n  public cityList: any = {};\r\n  public homeList: any = {};\r\n  public sourcedata: any = {};\r\n  public VehicleList: any = {};\r\n  public ChildrenList: any = {};\r\n  public HouseholdList: any = {};\r\n  public BusinessownerList: any = {};\r\n  public consumer_datalist: any = {};\r\n  public NumberOfPcsList: any = {};\r\n  public squareFootageList: any = {};\r\n  public yearofbusinessList: any = {};\r\n  public contactUsAllData: any;\r\n  contactUsAllDataHeaderSkipValue: any = [];\r\n  contactUsAllDataModifyHeaderValue: any = {};\r\n\r\n  ServiceListArray: any;\r\n  statusarray: any = [{ val: 1, name: 'Active' }, { val: 2, name: 'Inactive' }];\r\n  @ViewChild(MatPaginator, { static: false }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\r\n\r\n  displayedColumns: string[] = ['First_Name', 'Last_Name', 'Ind_Gender_Code', 'Ind_Age', 'Email', 'Phone', 'Physical_Address', 'Physical_Zip'];\r\n\r\n  dspColumns: string[] = [];\r\n  constructor(public apiservice: ApiService, public cookieservice: CookieService, public fb: FormBuilder, public activatedRoute: ActivatedRoute) {\r\n    this.spinnerval = 0;\r\n    this.generateapitoken();\r\n    this.getStateList();\r\n    this.getCityList();\r\n    this.getHomeList();\r\n    this.getVehicleList();\r\n    this.getChildrenList();\r\n    this.getHouseholdList();\r\n    this.getBusinessownerList();\r\n    this.getNumberOfPcsList();\r\n    this.getSquarefootageList();\r\n    this.getyearofbusinessList();\r\n    //consumer form group\r\n    this.consumarform = this.fb.group({\r\n      First_Name: [''],\r\n      Middle_Initial: [''],\r\n      Last_Name: [''],\r\n      Physical_State: [''],\r\n      Physical_City: [''],\r\n      Physical_Address: [''],\r\n      Physical_Zip: [''],\r\n      Area_Code: [''],\r\n      Tally_County_Code: [''],\r\n      Income_Code: [''],\r\n      Number_Children: [''],\r\n      DiscretionaryIncomeCode: [''],\r\n      Median_HseHld_Income_Code: [''],\r\n      Household_Size: [''],\r\n      UnsecuredCreditCapacityCode: [''],\r\n      Vehicle_Dominate: [''],\r\n      Business_Owner: [''],\r\n      NetWorth_Code: [''],\r\n      Donor_Capacity_Code: ['']\r\n    });\r\n\r\n    /**Busniss form group */\r\n    this.businessForm = this.fb.group({\r\n      Location_Sales_Code: [null],\r\n      Years_In_Business_Code: [null],\r\n      Square_Footage_Code: [null],\r\n      Number_Of_PCs_Code: [null]\r\n    });\r\n  }\r\n\r\n  /**Genarate apitoken for search api */\r\n  generateapitoken() {\r\n    let data: any = {};\r\n    data = {\r\n      token: this.cookieservice.get('jwttoken')\r\n    }\r\n    this.apiservice.postDatawithoutToken('apitoken', data).subscribe(res => {\r\n      let result: any = {};\r\n      result = res;\r\n      if (result.status == '200') {\r\n        this.apitoken = result.apitoken;\r\n        this.cookieservice.set('apitoken', result.apitoken);\r\n\r\n        this.apitoken = this.cookieservice.get('apitoken');\r\n      }\r\n      else {\r\n        console.log(\"Null\")\r\n      }\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  //business panel\r\n  openConsumerPanel() {\r\n    this.search_count = '0';\r\n    this.businessForm.reset();\r\n\r\n\r\n  }\r\n\r\n  //consumer panel\r\n  openBusinessPanel() {\r\n    // console.log('business')\r\n    this.search_count = '0';\r\n    this.consumarform.reset();\r\n\r\n  }\r\n\r\n  step = 0;\r\n\r\n  setStep(index: number) {\r\n    this.step = index;\r\n  }\r\n\r\n  nextStep() {\r\n    this.step++;\r\n  }\r\n\r\n  prevStep() {\r\n    this.step--;\r\n  }\r\n\r\n  //data filter for consumer and business\r\n  filter(Value: any) {\r\n    console.log('this.dataSource while filtering');\r\n    console.log(Value)\r\n    console.log(this.dataType)\r\n\r\n    if (this.dataType == 'consumer') {\r\n      this.consumerdata.filter = Value.trim().toLowerCase();\r\n\r\n    } else {\r\n      this.businessdata.filter = Value.trim().toLowerCase();\r\n    }\r\n\r\n  }\r\n\r\n  //state list Json\r\n  getStateList() {\r\n    this.apiservice.getJsonObject('assets/json/usa-states.json').subscribe(response => {\r\n      let result: any = {};\r\n      result = response;\r\n      this.stateList = result;\r\n\r\n    })\r\n  }\r\n\r\n  //city list Json\r\n  getCityList() {\r\n    this.apiservice.getJsonObject('assets/json/usa-cities.json').subscribe((res) => {\r\n      let result: any = {};\r\n      result = res;\r\n      this.cityList = result;\r\n    })\r\n  }\r\n\r\n  getHomeList() {\r\n    this.apiservice.getJsonObject('assets/json/median-home-value.json').subscribe((res) => {\r\n      let result: any = {};\r\n      result = res;\r\n      this.homeList = result;\r\n    })\r\n\r\n  }\r\n  getVehicleList() {\r\n    this.apiservice.getJsonObject('assets/json/Vehicle_Dominate.json').subscribe((res) => {\r\n      let result: any = {};\r\n      result = res;\r\n      this.VehicleList = result;\r\n    })\r\n  }\r\n  getChildrenList() {\r\n    this.apiservice.getJsonObject('assets/json/number-of-children.json').subscribe((res) => {\r\n      let result: any = {};\r\n      result = res;\r\n      this.ChildrenList = result;\r\n    })\r\n  }\r\n  getHouseholdList() {\r\n    this.apiservice.getJsonObject('assets/json/household-size.json').subscribe((res) => {\r\n      let result: any = {};\r\n      result = res;\r\n      this.HouseholdList = result;\r\n    })\r\n  }\r\n  getBusinessownerList() {\r\n    this.apiservice.getJsonObject('assets/json/business-owner.json').subscribe((res) => {\r\n      let result: any = {};\r\n      result = res;\r\n      this.BusinessownerList = result;\r\n    })\r\n  }\r\n  getNumberOfPcsList() {\r\n    this.apiservice.getJsonObject('assets/json/number-of-pcs.json').subscribe((res) => {\r\n      let result: any = {};\r\n      result = res;\r\n      this.NumberOfPcsList = result;\r\n    })\r\n  }\r\n  getSquarefootageList() {\r\n    this.apiservice.getJsonObject('assets/json/square-footage.json').subscribe((res) => {\r\n      let result: any = {};\r\n      result = res;\r\n      this.squareFootageList = result;\r\n    })\r\n  }\r\n  getyearofbusinessList() {\r\n    this.apiservice.getJsonObject('assets/json/year-of-business.json').subscribe((res) => {\r\n      let result: any = {};\r\n      result = res;\r\n      this.yearofbusinessList = result;\r\n    })\r\n  }\r\n\r\n\r\n  /**For business Form Submit */\r\n  businessFormSubmit() {\r\n    this.spinnerval = 1;\r\n    this.search_count = '0';\r\n    console.log(this.businessForm.value);\r\n    let data: any = {};\r\n    data = {\r\n      \"apitoken\": this.apitoken,\r\n      \"token\": this.cookieservice.get('jwttoken'),\r\n      \"condition\": this.businessForm.value\r\n    };\r\n    this.apiservice.postDatawithoutToken('searchwithcountforbusiness', data).subscribe((res) => {\r\n      let result: any = {};\r\n      result = res;\r\n      console.log(result.data.Response.responseDetails.SearchCount);\r\n\r\n      this.search_count = result.data.Response.responseDetails.SearchCount;\r\n      this.spinnerval = 0;\r\n\r\n    })\r\n  }\r\n\r\n  toObject(arr) {\r\n    var rv = {};\r\n    for (var i = 0; i < arr.length; ++i)\r\n      rv[i] = arr[i];\r\n    return rv;\r\n  }\r\n\r\n  /**For consumer  Form Submit */\r\n  purchaseDataForConsumar() {\r\n    this.spinnerval = 1;\r\n    this.search_count = '0';\r\n\r\n    let conditiondata: any = [];\r\n\r\n    if (this.consumarform.valid) {\r\n\r\n      for (let cv in this.consumarform.value) {\r\n        console.log(this.consumarform, cv, this.consumarform.value[cv]);\r\n\r\n        if (this.consumarform.value[cv].length >= 2) {\r\n          //let cval:any=[];\r\n          conditiondata[cv] = this.consumarform.value[cv];\r\n          //cval=Object.assign({}, cval);\r\n          //conditiondata.push(cval);\r\n        }\r\n      }\r\n      console.log(conditiondata, 'cdata');\r\n\r\n      conditiondata = Object.assign({}, conditiondata);\r\n      console.log(conditiondata, 'cdata obj');\r\n      let data: any = {};\r\n      data = {\r\n        \"apitoken\": this.apitoken,\r\n        \"token\": this.cookieservice.get('jwttoken'),\r\n        \"condition\": conditiondata\r\n      };\r\n      this.apiservice.postDatawithoutToken('searchwithcount', data).subscribe((res) => {\r\n        let result: any = {};\r\n        result = res;\r\n\r\n        console.log(result.data.Response.responseDetails.SearchCount);\r\n        console.log(typeof (result.data.Response.responseDetails.SearchCount));\r\n        this.search_count = result.data.Response.responseDetails.SearchCount;\r\n        this.spinnerval = 0;\r\n        let s_query = JSON.stringify(conditiondata)\r\n        this.cookieservice.set('search_query', s_query);\r\n        this.cookieservice.set('search_count', this.search_count);\r\n      })\r\n    }\r\n    console.log(this.consumarform.value);\r\n  }\r\n\r\n  // show sample data for consumer \r\n  showconsumerdata() {\r\n    this.spinnerval = 1;\r\n    let data: any = {};\r\n    data = {\r\n      apitoken: this.apitoken,\r\n      token: this.cookieservice.get('jwttoken')\r\n    }\r\n    this.apiservice.postDatawithoutToken('data', data).subscribe((res) => {\r\n      console.log('dta endpoint hit');\r\n      let result: any;\r\n      result = res;\r\n      if (result.status == '200') {\r\n        console.log(result.data.Response.responseDetails.SearchResult.searchResultRecord);\r\n        let cdata: any = result.data.Response.responseDetails.SearchResult.searchResultRecord;\r\n        let sourcedata: any = [];\r\n        for (let b in cdata) {\r\n          let tempdata: any = [];\r\n          console.log(cdata[b], b, 'b');\r\n          for (let n in cdata[b].resultFields) {\r\n\r\n            console.log(cdata[b].resultFields[n], 'ddd');\r\n            //tempdata['First_Name']=cdata[b]['First_Name'];\r\n            //tempdata['Last_Name']=cdata[b]['Last_Name'];\r\n\r\n            if (cdata[b].resultFields[n].fieldID == 'First_Name') tempdata['First_Name'] = cdata[b].resultFields[n].fieldValue;\r\n            if (cdata[b].resultFields[n].fieldID == 'Last_Name') tempdata['Last_Name'] = cdata[b].resultFields[n].fieldValue;\r\n            if (cdata[b].resultFields[n].fieldID == 'Ind_Gender_Code') tempdata['Ind_Gender_Code'] = cdata[b].resultFields[n].fieldValue;\r\n            if (cdata[b].resultFields[n].fieldID == 'Ind_Age') tempdata['Ind_Age'] = cdata[b].resultFields[n].fieldValue;\r\n            if (cdata[b].resultFields[n].fieldID == 'Email') tempdata['Email'] = cdata[b].resultFields[n].fieldValue;\r\n            if (cdata[b].resultFields[n].fieldID == 'Phone') tempdata['Phone'] = cdata[b].resultFields[n].fieldValue;\r\n            if (cdata[b].resultFields[n].fieldID == 'Physical_Address') tempdata['Physical_Address'] = cdata[b].resultFields[n].fieldValue;\r\n            if (cdata[b].resultFields[n].fieldID == 'Physical_Zip') tempdata['Physical_Zip'] = cdata[b].resultFields[n].fieldValue;\r\n\r\n            tempdata = Object.assign({}, tempdata);\r\n            //conditiondata=Object.assign({}, conditiondata);\r\n\r\n          }\r\n          sourcedata.push(tempdata);\r\n\r\n\r\n        }\r\n        console.log(result.data.Response.responseDetails.SearchResult.searchResultRecord.length);\r\n        console.log('sourcedata', sourcedata);\r\n\r\n        this.consumerdata = new MatTableDataSource(sourcedata);\r\n\r\n        setTimeout(() => {\r\n          this.consumerdata.paginator = this.paginator;\r\n          this.consumerdata.sort = this.sort;\r\n        }, 500);\r\n\r\n        this.spinnerval = 0;\r\n\r\n\r\n      }\r\n\r\n    })\r\n  }\r\n\r\n  // show sample data for business \r\n  showbusinessdata() {\r\n    this.spinnerval = 1;\r\n    let data: any = {};\r\n    data = {\r\n      apitoken: this.apitoken,\r\n      token: this.cookieservice.get('jwttoken')\r\n    }\r\n    this.apiservice.postDatawithoutToken('dataforbusiness', data).subscribe((res) => {\r\n      console.log('dta endpoint hit');\r\n      let result: any;\r\n      result = res;\r\n      if (result.status == '200') {\r\n        console.log(result.data.Response.responseDetails.SearchResult.searchResultRecord);\r\n        let cdata: any = result.data.Response.responseDetails.SearchResult.searchResultRecord;\r\n        let sourcedata: any = [];\r\n        for (let b in cdata) {\r\n          let tempdata: any = [];\r\n          console.log(cdata[b], b, 'b');\r\n          for (let n in cdata[b].resultFields) {\r\n\r\n            console.log(cdata[b].resultFields[n], 'ddd');\r\n            //tempdata['First_Name']=cdata[b]['First_Name'];\r\n            //tempdata['Last_Name']=cdata[b]['Last_Name'];\r\n\r\n            if (cdata[b].resultFields[n].fieldID == 'First_Name') tempdata['First_Name'] = cdata[b].resultFields[n].fieldValue;\r\n            if (cdata[b].resultFields[n].fieldID == 'Last_Name') tempdata['Last_Name'] = cdata[b].resultFields[n].fieldValue;\r\n            if (cdata[b].resultFields[n].fieldID == 'Ind_Gender_Code') tempdata['Ind_Gender_Code'] = cdata[b].resultFields[n].fieldValue;\r\n            if (cdata[b].resultFields[n].fieldID == 'Ind_Age') tempdata['Ind_Age'] = cdata[b].resultFields[n].fieldValue;\r\n            if (cdata[b].resultFields[n].fieldID == 'Email') tempdata['Email'] = cdata[b].resultFields[n].fieldValue;\r\n            if (cdata[b].resultFields[n].fieldID == 'Phone') tempdata['Phone'] = cdata[b].resultFields[n].fieldValue;\r\n            if (cdata[b].resultFields[n].fieldID == 'Physical_Address') tempdata['Physical_Address'] = cdata[b].resultFields[n].fieldValue;\r\n            if (cdata[b].resultFields[n].fieldID == 'Physical_Zip') tempdata['Physical_Zip'] = cdata[b].resultFields[n].fieldValue;\r\n\r\n            tempdata = Object.assign({}, tempdata);\r\n            //conditiondata=Object.assign({}, conditiondata);\r\n\r\n          }\r\n          sourcedata.push(tempdata);\r\n\r\n\r\n        }\r\n        console.log(result.data.Response.responseDetails.SearchResult.searchResultRecord.length);\r\n        console.log('sourcedata', sourcedata);\r\n\r\n        this.businessdata = new MatTableDataSource(sourcedata);\r\n\r\n        setTimeout(() => {\r\n          this.businessdata.paginator = this.paginator;\r\n          this.businessdata.sort = this.sort;\r\n        }, 500);\r\n        this.spinnerval = 0;\r\n\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","<!-- <p>resetpassword works!</p>\r\n<form [formGroup]=\"resetpasswordForm\" (ngSubmit)=\"resetsubmit()\" class=\"loginform\">\r\n    <div class=\"formgroup\">\r\n\r\n        <input matInput type=\"password\" placeholder=\"Password\" formControlName=\"password\"\r\n            (blur)=\"f.inputBlur(resetpasswordForm,'password')\" />\r\n        <mat-error\r\n            *ngIf=\"resetpasswordForm.controls['password']?.touched && resetpasswordForm.controls['password'].errors && resetpasswordForm.controls['password'].errors.required\"\r\n            class=\"errormsgblue\">Password is required !</mat-error>\r\n        <mat-error\r\n            *ngIf=\"resetpasswordForm.controls['password']?.touched && resetpasswordForm.controls['password'].errors && resetpasswordForm.controls['password'].errors.minlength\"\r\n            class=\"errormsgblue\">Password is too short !</mat-error>\r\n\r\n    </div>\r\n    <div class=\"formgroup\">\r\n\r\n        <input matInput type=\"password\" placeholder=\"Confirm Password\" formControlName=\"conpassword\"\r\n            (blur)=\"f.inputBlur(resetpasswordForm,'conpassword')\" />\r\n        <mat-error\r\n            *ngIf=\"resetpasswordForm.controls['conpassword']?.touched && resetpasswordForm.controls['conpassword'].errors && resetpasswordForm.controls['conpassword'].errors.required\"\r\n            class=\"errormsgblue\">Confirm password is required !</mat-error>\r\n        <mat-error\r\n            *ngIf=\"resetpasswordForm.controls['conpassword']?.touched && resetpasswordForm.controls['conpassword'].errors && resetpasswordForm.controls['conpassword'].errors.minlength\"\r\n            class=\"errormsgblue\">Confirm password is too short !</mat-error>\r\n        <mat-error *ngIf=\"resetpasswordForm.hasError('mismatchedPasswords')\">Passwords must match</mat-error>\r\n\r\n    </div>\r\n    <div class=\"formgroup loginbuttoncon\">\r\n\r\n        <button mat-button class=\"orangegradientbutton\">Reset</button>\r\n    </div>\r\n</form> -->\r\n\r\n<lib-reset-password \r\n[fromTitleName]=\"fromTitleName\"\r\n [serverUrl]=\"serverUrl\"\r\n  [addEndpoint]=\"addEndpoint\" \r\n  [logo]=\"logo\">\r\n</lib-reset-password>\r\n","// import { Component, OnInit } from '@angular/core';\r\n// import { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n// import { ApiService } from '../../services/api-service';\r\n// import { CookieService } from 'ngx-cookie-service';\r\n// import { Router, ActivatedRoute, Params } from '@angular/router';\r\n// import{CommonService} from '../../services/common.service';\r\n// import { matchingPasswords } from '../../_helpers/must-match.validator';\r\n// @Component({\r\n//   selector: 'app-resetpassword',\r\n//   templateUrl: './resetpassword.component.html',\r\n//   styleUrls: ['./resetpassword.component.css']\r\n// })\r\n// export class ResetpasswordComponent implements OnInit {\r\n// public resetpasswordForm: FormGroup;\r\n//   constructor(public formBuilder: FormBuilder,public api_service: ApiService, public cookieservice: CookieService, public router: Router,public f: CommonService) {this.genarateresetForm(); }\r\n\r\n//   ngOnInit() {\r\n//   }\r\n\r\n//   genarateresetForm(){\r\n//     this.resetpasswordForm = this.formBuilder.group({\r\n//       password: [null, [Validators.required, Validators.minLength(6)]],\r\n//       conpassword:[null,[Validators.required,Validators.minLength(6)]]\r\n//     }, {\r\n//       validator: matchingPasswords('password', 'conpassword')\r\n//     });\r\n//   }\r\n\r\n//   resetsubmit(){\r\n//    if(this.resetpasswordForm.valid){\r\n//     if (this.resetpasswordForm.value.conpassword != null) {\r\n//       delete this.resetpasswordForm.value.conpassword;\r\n//     }\r\n    \r\n//     let d: any = { 'source': 'user', 'data': {'id':this.cookieservice.get('id'),'password':this.resetpasswordForm.value.password},'token':this.cookieservice.get('jwttoken')};\r\n//    //console.log(d);\r\n//     this.api_service.postData('addorupdatedata', d).subscribe(res=> {\r\n//       let result:any;\r\n//       result = res;\r\n//       console.log(result);\r\n//     });\r\n//    }\r\n//    else\r\n//    {\r\n//      for (let x in this.resetpasswordForm.controls) {\r\n//       // console.log(this.resetpasswordForm.controls[x]);\r\n//        this.resetpasswordForm.controls[x].markAsTouched();\r\n//      }\r\n   \r\n//    }\r\n//   }\r\n\r\n// }\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api-service';\r\n@Component({\r\n  selector: 'app-resetpassword',\r\n  templateUrl: './resetpassword.component.html',\r\n  styleUrls: ['./resetpassword.component.css']\r\n})\r\nexport class ResetpasswordComponent implements OnInit {\r\n\r\n  public fromTitleName: any = 'Reset From';\r\n\r\n  public logo: any = '';\r\n  public serverUrl: any = this.apiService.api_url;\r\n  public addEndpoint: any = {\r\n    endpoint:'addorupdatedata',\r\n    source:'user'\r\n  };\r\n  \r\n  constructor(public apiService: ApiService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n  \r\n","<mat-card class=\"as_loginbg as_signupbg\">\r\n<lib-sign-up \r\n[formTitle]=\"formTitle\" \r\n[serverUrl]=\"serverUrl\" \r\n[forgetRouteingUrl]=\"forgetRouteingUrl\"\r\n  [loginRouteingUrl]=\"loginRouteingUrl\"\r\n   [addEndpoint]=\"addEndpoint\"\r\n    [logo]=\"logo\" \r\n    [userType]=\"userType\"\r\n   >\r\n</lib-sign-up>\r\n</mat-card>","import { Component, OnInit, Input } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { ApiService } from 'src/app/services/api-service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  // public token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJleHAiOjE1NzE0NzA5MzAsImlhdCI6MTU3MTM4NDUzMH0.SVs_HZUaZAKpY2CWsrJMzVIMlVwq4fMbtOR4OjaWzBI';\r\n\r\n  public forgetRouteingUrl: any = '/forget';\r\n  public loginRouteingUrl: any = '/login';\r\n  public logo: any = '';\r\n  public modaleLogo: any = '';\r\n  public formTitle: any = 'Sign Up';\r\n  // public serverUrl: any = 'https://y1qujk78ic.execute-api.us-east-1.amazonaws.com/dev/api/';\r\n  public serverUrl: any = this.apiService.api_url;\r\n  public addEndpoint: any = {\r\n    endpoint:'addorupdatedata',\r\n    source:'user'\r\n  };\r\n  public userType: any = 'user';\r\n \r\n  constructor(public cook:CookieService, public apiService: ApiService) { }\r\n\r\n  ngOnInit() {\r\n    // this.cook.set('jwttoken',this.token);\r\n  }\r\n\r\n}\r\n","<span class=\"as_editprofile as_support\">\r\n<app-adminheader>\r\n        \r\n    <div class=\"example-container\">\r\n        <form [formGroup]=\"SupportForm\" (ngSubmit)=\"SupportFormSubmit()\">\r\n            <mat-form-field>\r\n                <input matInput type=\"text\" placeholder=\"Subject\" formControlName=\"subject\"\r\n                    (blur)=\"inputUntouched('subject')\">\r\n                <mat-error\r\n                    *ngIf=\"!SupportForm.controls['subject'].valid && SupportForm.controls['subject'].errors.required && SupportForm.controls['subject'].touched\">\r\n                    Subject field can not be blank</mat-error>\r\n            </mat-form-field>\r\n\r\n\r\n            <mat-label>Description</mat-label>\r\n            <ckeditor formControlName=\"description\"></ckeditor>\r\n                <!-- <textarea matInput type=\"text\" placeholder=\"Description\" formControlName=\"description\"\r\n                    (blur)=\"inputUntouched('description')\"></textarea> -->\r\n                <mat-error\r\n                    *ngIf=\"!SupportForm.controls['description'].valid && SupportForm.controls['description'].errors.required && SupportForm.controls['description'].touched\">\r\n                    Description field can not be blank</mat-error>\r\n           \r\n            <button mat-button color=\"warn\">Send</button>\r\n        </form>\r\n    </div>\r\n</app-adminheader>\r\n</span>","import { Component, OnInit } from '@angular/core';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-support',\r\n  templateUrl: './support.component.html',\r\n  styleUrls: ['./support.component.css']\r\n})\r\nexport class SupportComponent implements OnInit {\r\n  public SupportForm: FormGroup;\r\n  constructor(public cook: CookieService,public fb: FormBuilder) {this.supportFormgenarate(); }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n  supportFormgenarate(){\r\n    let userdetails = this.cook.get('user_details');\r\n    let cookie: any;\r\n    cookie = JSON.parse(userdetails);\r\n     \r\n    this.SupportForm = this.fb.group({\r\n      email:[cookie.email,null],\r\n      subject:[null,[Validators.required]],\r\n      description:[null,[Validators.required]]\r\n    });\r\n  }\r\n\r\n  SupportFormSubmit(){\r\n    for (let x in this.SupportForm.controls) {\r\n      this.SupportForm.controls[x].markAsTouched();\r\n    }\r\n    if(this.SupportForm.valid){\r\n      console.log(this.SupportForm.value);\r\n    }\r\n  }\r\n\r\n\r\n  inputUntouched(val: any) {\r\n    this.SupportForm.controls[val].markAsUntouched();\r\n  }\r\n}\r\n","<span class=\"as_allmainwrapper\">\r\n\r\n\r\n<app-adminheader>\r\n    <mat-card class=\"as_mainwrapper\">\r\n      <mat-list role=\"list\">\r\n        <mat-list-item role=\"listitem\">\r\n          <mat-card-title>Account Details</mat-card-title>\r\n          <mat-card-content class=\"\">\r\n              <span class=\"blockimgwrapper\">\r\n                <a>\r\n                  <img src=\"http://mindandculture.org/wordpress6/wp-content/uploads/2018/07/Fotolia_188161178_XS.jpg\">\r\n                </a>\r\n              </span>\r\n              <mat-card-subtitle>\r\n                <p class=\"name\">{{name}}</p>\r\n                <p class=\"Designation\">{{designation}}</p>\r\n                <p><i class=\"material-icons\">phone</i> {{phone}}</p>\r\n                <p><i class=\"material-icons\">email</i> {{email}}</p>\r\n                <p><i class=\"material-icons\">account_balance</i> {{address}}</p>\r\n                <p><i class=\"material-icons\">location_city</i> {{company}}</p>\r\n                <p><i class=\"material-icons\">language</i> {{website}}</p>\r\n              </mat-card-subtitle>\r\n              <mat-card-actions>\r\n                  <button mat-button class=\"editbtn\" color=\"primary\" type=\"button\" [routerLink]=\"['/editprofile']\">\r\n                    Edit Profile\r\n                  </button>\r\n              </mat-card-actions>\r\n          </mat-card-content>\r\n          <img class=\"accountbg\" src=\"../../../assets/images/accountbg.jpg\">\r\n        </mat-list-item>\r\n\r\n        <mat-list-item class=\"aslist2\">\r\n            <mat-card-title>Purchase Data</mat-card-title>\r\n            <mat-card-content class=\"\">\r\n                <span class=\"blockimg\">\r\n                    <img src=\"../../../assets/images/data-purchaseimg.png\">\r\n                </span>\r\n                <mat-card-subtitle>\r\n                  <h2>Online Payment</h2>\r\n                  <span class=\"colsubtitle\">Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's\r\n                    standard dummy text ever since the 1500s,</span>\r\n                  <button mat-button class=\"paybtn\" color=\"primary\" type=\"button\" [routerLink]=\"['/editprofile']\">\r\n                    Purchase\r\n                  </button>\r\n                </mat-card-subtitle>\r\n                <mat-card-actions>\r\n\r\n                </mat-card-actions>\r\n            </mat-card-content>\r\n          </mat-list-item>\r\n\r\n          <mat-list-item class=\"aslist3\">\r\n              <mat-card-title>My Order</mat-card-title>\r\n              <lib-listing *ngIf=\"pendingmodelapplicationarray!=null && pendingmodelapplicationarray.length>0\" \r\n                [datasource]=\"pendingmodelapplicationarray\"\r\n                [skip]=\"pendingmodelapplicationarray_skip\" \r\n                [modify_header_array]=\"modify_header_array\" \r\n                [apiurl]=\"apiService.api_url\" \r\n                [deleteendpoint]=\"deleteendpoint\" \r\n                [updateendpoint]=\"updateendpoint\" \r\n                [jwttoken]=\"apiService.jwttoken\" \r\n                [editroute]=\"editroute\"\r\n                [sourcedata]=\"tablename\"  \r\n                [statusarr]=\"statusarray\" \r\n                [detail_skip_array]=\"pendingmodelapplicationarray_detail_skip\" \r\n                [searchendpoint]=\"searchendpoint\"></lib-listing>\r\n            </mat-list-item>\r\n\r\n      </mat-list>\r\n    </mat-card>\r\n\r\n\r\n</app-adminheader>\r\n\r\n\r\n</span>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api-service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport {MatPaginator} from '@angular/material/paginator';\r\nimport {MatSort} from '@angular/material/sort';\r\nimport {MatTableDataSource} from '@angular/material/table';\r\n\r\n\r\n/** Constants used to fill up our data base. */\r\nconst COLORS: string[] = [\r\n  'maroon', 'red', 'orange', 'yellow', 'olive', 'green', 'purple', 'fuchsia', 'lime', 'teal',\r\n  'aqua', 'blue', 'navy', 'black', 'gray'\r\n];\r\nconst NAMES: string[] = [\r\n  'Maia', 'Asher', 'Olivia', 'Atticus', 'Amelia', 'Jack', 'Charlotte', 'Theodore', 'Isla', 'Oliver',\r\n  'Isabella', 'Jasper', 'Cora', 'Levi', 'Violet', 'Arthur', 'Mia', 'Thomas', 'Elizabeth'\r\n];\r\n\r\n@Component({\r\n  selector: 'app-user-dashboard',\r\n  templateUrl: './user-dashboard.component.html',\r\n  styleUrls: ['./user-dashboard.component.css']\r\n})\r\n\r\nexport class UserDashboardComponent implements OnInit {\r\n  public name: any; public phone: any; public address: any; public company: any;\r\n  public designation: any; public website: any;public email: any;\r\n\r\n  @ViewChild(MatPaginator, {static: true}) paginator: MatPaginator;\r\n  @ViewChild(MatSort, {static: true}) sort: MatSort;\r\n/**liblisting code */\r\n  public UserAllData: any;\r\n  UserAllDataHeaderSkipValue: any = [];\r\n    UserAllDataModifyHeaderValue: any = {};\r\n    statusarray: any = [{val: 1, name: 'Pending'}, {val: 2, name: 'Cancelled'}, {val: 3, name: 'Delivered'}]; \r\n\r\n    pendingmodelapplicationarray: any = [];\r\n  pendingmodelapplicationarray_skip: any = ['_id','user_id' ,'user_type','user_phone' ,'fullname',  'pincode','area','landmark',\r\n                                            'housenumber','billing_type'];\r\n  pendingmodelapplicationarray_detail_skip: any = ['_id','user_id','user_fullname','user_type',];\r\n\r\n    updateendpoint = 'addorupdatedata';\r\n    deleteendpoint = 'deletesingledata';\r\n    tablename = 'user';\r\n    searchendpoint = 'datalist';\r\n    editroute: any = 'editroute';\r\n    modify_header_array: any = {\r\n        'fullname': \"Name\",\r\n        'phone': \"Phone Number\",\r\n        'search count': \"Data Purchase\",\r\n        'user email':\"Email ID\",\r\n        'created at': \"Created on\",\r\n        'state':\"State\",\r\n        'city':\"City\"\r\n    };\r\n\r\n     // this is use for  All type of search \r\n     search_settings:any={\r\n\r\n      datesearch:[{startdatelabel:\"Start Date\",enddatelabel:\"End Date\",submit:\"Search By Date\",  field:\"created_at\"}],   // this is use for  date search \r\n\r\n      textsearch:[{label:\"Search By email\",field:'email'},{label:\"Search By Full name\",field:'name'}],  // this is use for  text search\r\n\r\n      search:[{label:\"Search By autocomplete\",field:'name'}]     // this is use for  Autocomplete search\r\n  }\r\n  constructor(public apiService: ApiService, public activatedRoute: ActivatedRoute, public CookieService: CookieService) {\r\n  \r\n\r\n    // Assign the data to the data source for the table to render\r\n    \r\n    // this.serverURL = apiService.api_url;\r\n    this.userdetails();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.data.forEach(data=>{\r\n      let result:any;\r\n      result=data;\r\n    console.log(result.results.res);\r\n      this.pendingmodelapplicationarray = result.results.res;\r\n    \r\n    })\r\n  }\r\n\r\n  /**fetch userdetails form cookie */\r\n  userdetails() {\r\n    let userdetails = JSON.parse(this.CookieService.get('user_details'));\r\n    this.name = userdetails.firstname + ' ' + userdetails.lastname;\r\n    this.phone = userdetails.phone;\r\n    this.address = userdetails.city + ' ' + userdetails.state + ' ' + userdetails.zip;\r\n    this.company = userdetails.companyname;\r\n    this.designation = userdetails.designation;\r\n    this.website = userdetails.companywebsite;\r\n    this.email=userdetails.email;\r\n  }\r\n}\r\n\r\n","<app-adminheader>\r\n\r\n    <lib-listing *ngIf=\"pendingmodelapplicationarray!=null && pendingmodelapplicationarray.length>0\" \r\n        [datasource]=\"pendingmodelapplicationarray\"\r\n        [skip]=\"pendingmodelapplicationarray_skip\" \r\n        [modify_header_array]=\"modify_header_array\" \r\n        [apiurl]=\"apiService.api_url\" \r\n        [deleteendpoint]=\"deleteendpoint\" \r\n        [updateendpoint]=\"updateendpoint\" \r\n        [jwttoken]=\"apiService.jwttoken\" \r\n        [editroute]=\"editroute\"\r\n        [sourcedata]=\"tablename\"  \r\n        [statusarr]=\"statusarray\" \r\n        \r\n        [searchendpoint]=\"searchendpoint\"></lib-listing>\r\n    \r\n    \r\n    </app-adminheader>","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from 'src/app/services/api-service';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-userlist',\r\n  templateUrl: './userlist.component.html',\r\n  styleUrls: ['./userlist.component.css']\r\n})\r\nexport class UserlistComponent implements OnInit {\r\n\r\n  public contactUsAllData: any;\r\n  contactUsAllDataHeaderSkipValue: any = [];\r\n    contactUsAllDataModifyHeaderValue: any = {};\r\n  \r\n  \r\n  \r\n  \r\n    statusarray: any = [{val: 1, name: 'Active'}, {val: 2, name: 'Inactive'}]; \r\n    \r\n    pendingmodelapplicationarray: any = [];\r\n    pendingmodelapplicationarray_skip: any = ['_id', 'type', 'password', 'id', 'created_at', 'accesscode'];\r\n    pendingmodelapplicationarray_detail_skip: any = ['_id', 'email', 'name'];\r\n      // updateendpoint is use for data update endpoint\r\n      updateendpoint = 'addorupdatedata';\r\n  \r\n      // deleteendpoint is use for data delete endpoint\r\n      deleteendpoint = 'deletesingledata';\r\n  \r\n      \r\n      // this is a database collection name\r\n      tablename = 'user';\r\n  \r\n      // searchendpoint is use for data search endpoint\r\n      searchendpoint = 'datalist';\r\n    // public serverURL: any = '';\r\n    editroute: any = 'editroute';\r\n      // use for Table Header modification \r\n  \r\n      // Like Table head name is \" firstname\" => \"First Name\"\r\n      modify_header_array: any = {\r\n          'firstname': \"First Name\",\r\n          'email': 'Email Id',\r\n          'lastname': 'Last Name',\r\n          'name': \"Full Name\"\r\n      };\r\n  \r\n       // this is use for  All type of search \r\n       search_settings:any={\r\n  \r\n        datesearch:[{startdatelabel:\"Start Date\",enddatelabel:\"End Date\",submit:\"Search By Date\",  field:\"created_at\"}],   // this is use for  date search \r\n  \r\n  \r\n        textsearch:[{label:\"Search By email\",field:'email'},{label:\"Search By Full name\",field:'name'}],  // this is use for  text search\r\n  \r\n        search:[{label:\"Search By autocomplete\",field:'name'}]     // this is use for  Autocomplete search\r\n    };\r\n  \r\n  constructor(public apiService: ApiService, public activatedRoute: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.activatedRoute.data.forEach(data=>{\r\n      let result:any;\r\n      result=data;\r\n      // console.log(result.results.res);\r\n      this.pendingmodelapplicationarray = result.results.res;\r\n      // this.ServiceListArray=result;\r\n      // console.log(\"ojjjjjjjjhgdfhgdf\",result);   \r\n    })\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\n@NgModule({\r\n    exports: [\r\n        A11yModule,\r\n        CdkStepperModule,\r\n        CdkTableModule,\r\n        CdkTreeModule,\r\n        DragDropModule,\r\n        MatAutocompleteModule,\r\n        MatBadgeModule,\r\n        MatBottomSheetModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatStepperModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatTreeModule,\r\n        PortalModule,\r\n        ScrollingModule,\r\n    ]\r\n})\r\nexport class DemoMaterialModule { }\r\n\r\n\r\n/**  Copyright 2019 Google Inc. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","\r\nimport {Injectable, ViewChild, EventEmitter, ElementRef} from '@angular/core';\r\nimport { Observable, interval, pipe } from 'rxjs';\r\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n// import {UploaderComponent} from \"./uploader/uploader.component\";\r\n\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n\r\n    public loginurl = environment['loginurl'];\r\n    public api_url = environment[\"api_url\"];\r\n    public jwttoken: any;\r\n\r\n\r\n\r\n    constructor(private _http: HttpClient,\r\n                private _authHttp: HttpClient,\r\n                public cookieService: CookieService\r\n                // public jwtHelper: JwtHelperService,\r\n                // private loggedinService: LoggedinService\r\n    ) {\r\n        this.jwttoken=this.cookieService.get('jwttoken');\r\n    }\r\n\r\n\r\n    isTokenExpired() {\r\n\r\n        // const helper = new JwtHelperService();\r\n        // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\r\n        // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\r\n        // console.log('refresh_token',localStorage.getItem('refresh_token'))\r\n        // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\r\n        // console.log('id_token isExpired:',isIdTokenExpired)\r\n        // console.log('refresh_token isExpired:',isRefreshTokenExpired)\r\n\r\n\r\n\r\n    }\r\n\r\n    getclientip() {\r\n\r\n        console.log('endpoint');\r\n\r\n        // this.isTokenExpired()\r\n        var result = this._http.get(\"https://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\r\n\r\n        return result;\r\n    }\r\n\r\n    getDatawithouttoken(endpoint) {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type':  'application/json'\r\n            })\r\n        };\r\n        /* console.log('httpOptions');\r\n         console.log(httpOptions);*/\r\n        // this.isTokenExpired()\r\n        var result = this._http.get(this.api_url + endpoint, httpOptions).pipe(map(res => res));\r\n        return result;\r\n    }\r\n    getJsonObject(path:any){\r\n        var result = this._http.get(path).pipe(map(res => res));\r\n        return result;\r\n    }\r\n\r\n    \r\n    getEndpoint(endpoint: any) {\r\n\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type':  'application/json',\r\n                'access-token':this.jwttoken\r\n            })\r\n        };\r\n        let condition:any=endpoint.condition;\r\n        console.log('condition');\r\n        console.log(condition);\r\n        console.log('endpoint');\r\n        console.log(endpoint);\r\n        console.log('httpOptions');\r\n        console.log(httpOptions);\r\n        console.log(this.cookieService.get('jwttoken'));\r\n\r\n        // this.isTokenExpired()\r\n        var result = this._http.post(this.api_url + endpoint.source, condition, httpOptions).pipe(map(res => res));\r\n        console.log(result);\r\n        return result;\r\n    }\r\n\r\n\r\n    getData(endpoint: any) {\r\n\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type':  'application/json',\r\n                'Authorization': this.cookieService.get('jwttoken')\r\n            })\r\n        };\r\n        console.log(this.cookieService.get('id'));\r\n        console.log(this.cookieService.get('id'));\r\n        console.log('endpoint');\r\n        console.log(endpoint);\r\n        console.log('httpOptions');\r\n        console.log(httpOptions);\r\n        console.log(this.cookieService.get('jwttoken'));\r\n        console.log('httpOptions');\r\n        console.log(httpOptions);\r\n\r\n        // this.isTokenExpired()\r\n        var result = this._http.post(this.api_url + 'datalist', endpoint, httpOptions).pipe(map(res => res));\r\n\r\n        return result;\r\n    }\r\n    // getData end\r\n\r\n\r\n    postData(endpoint:any, data) {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type':  'application/json',\r\n                // 'access-token': this.cookieService.get('jwttoken'),\r\n                'Authorization': this.jwttoken\r\n            })\r\n        \r\n        };\r\n        console.log(this.cookieService.get('jwttoken'));\r\n        console.log('endpoint');\r\n        console.log(endpoint);\r\n        console.log('httpOptions');\r\n        console.log(httpOptions);\r\n        var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\r\n        return result;\r\n    }\r\n    postDatawithoutToken(endpoint:any, data) {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type':  'application/json'\r\n            })\r\n        };\r\n        // console.log(this.cookieService.get('jwttoken'));\r\n        // console.log('endpoint');\r\n        // console.log(endpoint);\r\n        var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\r\n        return result;\r\n    }\r\n\r\n    postlogin(endpoint:any, data) {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type':  'application/json'\r\n            })\r\n        };\r\n        console.log(this.cookieService.get('jwttoken'));\r\n        console.log('endpoint');\r\n        console.log(endpoint);\r\n        var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\r\n        return result;\r\n    } // postData end\r\n\r\n    getState() {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type':  'application/json',\r\n            })\r\n        };\r\n        var result = this._http.get('assets/data/state.json').pipe(map(res => res));\r\n        return result;\r\n    }\r\n\r\n    private getEndpointUrl(endpoint: string) {\r\n        return this.api_url + endpoint;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { ApiService } from '../services/api-service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private router: Router,\r\n                public http: HttpClient,\r\n                private _apiService: ApiService,\r\n                private cookieService: CookieService\r\n    ) {}\r\n\r\n\r\n    canActivate() {\r\n\r\n        //console.log('in auth guard');\r\n        //console.log(this.cookieService.get('jwttoken'));\r\n        if (this.cookieService.get('jwttoken') == null || this.cookieService.get('jwttoken').length < 10) {\r\n            // alert(78);\r\n            this.router.navigate(['/']);\r\n        } else return true;\r\n        return false;\r\n    }\r\n}\r\n","/*\r\n export class Resolve {\r\n }\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { Router, Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { ApiService } from '../services/api-service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\nexport interface EndpointComponent {\r\n    endpoint: string;\r\n}\r\n\r\n@Injectable()\r\nexport class Resolveservice implements Resolve<EndpointComponent> {\r\n\r\n    constructor(public _apiService: ApiService, public router: Router, public cookieService: CookieService) { }\r\n    resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<any> | Promise<any> | any {\r\n\r\n        //console.log('resolve data');\r\n        let endpoint: any = route.data;\r\n        let condition: any = {};\r\n        console.log(endpoint.condition);\r\n        if (endpoint.condition != '_id' && endpoint.condition != null) {\r\n            for (let i in endpoint.condition) {\r\n                if (i == '_id') {\r\n                    endpoint.condition[i] = route.params.id;\r\n                    console.log('route.params.id');\r\n                    console.log(route.params.id);\r\n                }\r\n            }\r\n        }\r\n\r\n        // return new Promise((resolve) => {\r\n\r\n        //         console.log('route.data --  in resolve ');\r\n        //         console.log(route.data);\r\n        //         console.log(route.params);\r\n        //         if(route.data.condition!=null && route.data.condition.myid !=null && route.data.condition.myid=='id')\r\n        //             route.data.condition._id=this.cookieService.get('user_id');\r\n        //         this._apiService.getEndpoint(route.data).subscribe(api_object => {\r\n        //             console.log('api_object  !!!!');\r\n        //             console.log(api_object);\r\n        //             if (api_object) {\r\n        //                 return resolve(api_object);\r\n        //             } else { // id not found\r\n        //                 this.router.navigateByUrl('login');\r\n        //                 return true;\r\n        //             }\r\n        //         });\r\n\r\n        // });\r\n\r\n\r\n        return new Promise((resolve) => {\r\n            let userdetails = this.cookieService.get('user_details');\r\n            let cookie: any;\r\n            cookie = JSON.parse(userdetails);\r\n            console.log(\"Resoleve Data ID    \" + cookie._id);\r\n\r\n\r\n            console.log('route.data --  in resolve ');\r\n            let data: any = {};\r\n            data = route.data;\r\n            console.log(data.condition);\r\n            console.log(data.condition);\r\n            console.log(route.params);\r\n            if (route.data.condition != null && route.data.condition.myid != null && route.data.condition.myid == 'id') {\r\n                console.log('route.data');\r\n                // route.data.condition={_id:cookie._id};\r\n                data.condition = ( { _id: cookie._id });\r\n                \r\n            }\r\n            if (route.data.condition != null && route.data.condition.user_id_object != null && route.data.condition.user_id_object == 'user_id_object') {\r\n                // console.log('route.data ++++++++++++++');\r\n                route.data.condition.user_id_object=cookie._id;\r\n                // route.data.condition = Object.assign({}, { user_id_object: cookie._id });\r\n                // console.log(route.data);\r\n            }\r\n\r\n            // return;\r\n            this._apiService.getData(route.data).subscribe(api_object => {\r\n                console.log('api_object  !!!!');\r\n                console.log(api_object);\r\n                if (api_object) {\r\n                    return resolve(api_object);\r\n                } else { // id not found\r\n                    this.router.navigateByUrl('login');\r\n                    return true;\r\n                }\r\n            });\r\n\r\n        });\r\n    }\r\n}\r\n","export const environment = {\r\n  production: true,\r\n  api_url:\"https://y1qujk78ic.execute-api.us-east-1.amazonaws.com/dev/api/\"\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\n\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nexport { AppServerModule } from './app/app.server.module';\r\n","module.exports = require(\"@angular/animations\");","module.exports = require(\"@angular/animations/browser\");","module.exports = require(\"@angular/cdk/a11y\");","module.exports = require(\"@angular/cdk/accordion\");","module.exports = require(\"@angular/cdk/bidi\");","module.exports = require(\"@angular/cdk/collections\");","module.exports = require(\"@angular/cdk/drag-drop\");","module.exports = require(\"@angular/cdk/keycodes\");","module.exports = require(\"@angular/cdk/layout\");","module.exports = require(\"@angular/cdk/observers\");","module.exports = require(\"@angular/cdk/overlay\");","module.exports = require(\"@angular/cdk/platform\");","module.exports = require(\"@angular/cdk/portal\");","module.exports = require(\"@angular/cdk/scrolling\");","module.exports = require(\"@angular/cdk/stepper\");","module.exports = require(\"@angular/cdk/table\");","module.exports = require(\"@angular/cdk/text-field\");","module.exports = require(\"@angular/cdk/tree\");","module.exports = require(\"@angular/common\");","module.exports = require(\"@angular/common/http\");","module.exports = require(\"@angular/core\");","module.exports = require(\"@angular/forms\");","module.exports = require(\"@angular/material\");","module.exports = require(\"@angular/material/autocomplete\");","module.exports = require(\"@angular/material/badge\");","module.exports = require(\"@angular/material/bottom-sheet\");","module.exports = require(\"@angular/material/button\");","module.exports = require(\"@angular/material/button-toggle\");","module.exports = require(\"@angular/material/card\");","module.exports = require(\"@angular/material/checkbox\");","module.exports = require(\"@angular/material/chips\");","module.exports = require(\"@angular/material/core\");","module.exports = require(\"@angular/material/datepicker\");","module.exports = require(\"@angular/material/dialog\");","module.exports = require(\"@angular/material/divider\");","module.exports = require(\"@angular/material/expansion\");","module.exports = require(\"@angular/material/form-field\");","module.exports = require(\"@angular/material/grid-list\");","module.exports = require(\"@angular/material/icon\");","module.exports = require(\"@angular/material/input\");","module.exports = require(\"@angular/material/list\");","module.exports = require(\"@angular/material/menu\");","module.exports = require(\"@angular/material/paginator\");","module.exports = require(\"@angular/material/progress-bar\");","module.exports = require(\"@angular/material/progress-spinner\");","module.exports = require(\"@angular/material/radio\");","module.exports = require(\"@angular/material/select\");","module.exports = require(\"@angular/material/sidenav\");","module.exports = require(\"@angular/material/slide-toggle\");","module.exports = require(\"@angular/material/slider\");","module.exports = require(\"@angular/material/snack-bar\");","module.exports = require(\"@angular/material/sort\");","module.exports = require(\"@angular/material/stepper\");","module.exports = require(\"@angular/material/table\");","module.exports = require(\"@angular/material/tabs\");","module.exports = require(\"@angular/material/toolbar\");","module.exports = require(\"@angular/material/tooltip\");","module.exports = require(\"@angular/material/tree\");","module.exports = require(\"@angular/platform-browser\");","module.exports = require(\"@angular/platform-browser/animations\");","module.exports = require(\"@angular/platform-server\");","module.exports = require(\"@angular/router\");","module.exports = require(\"@ng-toolkit/universal\");","module.exports = require(\"@nguniversal/common\");","module.exports = require(\"@nguniversal/module-map-ngfactory-loader\");","module.exports = require(\"ckeditor4-angular\");","module.exports = require(\"listing-angular7\");","module.exports = require(\"login\");","module.exports = require(\"ngx-cookie-service\");","module.exports = require(\"ngx-moment\");","module.exports = require(\"ngx-uploader\");","module.exports = require(\"rxjs/operators\");"],"sourceRoot":""}