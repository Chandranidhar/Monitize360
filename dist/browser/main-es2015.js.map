{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/components/forget/forget/forget.component.html","./src/app/components/login/login/login.component.html","./src/app/components/resetpassword/resetpassword.component.html","./src/app/components/signup/signup.component.html","./src/app/_helpers/must-match.validator.ts","./src/app/app-routing.module.ts","./src/app/app.browser.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/components/forget/forget/forget.component.css","./src/app/components/forget/forget/forget.component.ts","./src/app/components/login/login/login.component.css","./src/app/components/login/login/login.component.ts","./src/app/components/resetpassword/resetpassword.component.css","./src/app/components/resetpassword/resetpassword.component.ts","./src/app/components/signup/signup.component.css","./src/app/components/signup/signup.component.ts","./src/app/modules/material-module.ts","./src/app/services/api-service.ts","./src/app/services/auth.guard.ts","./src/app/services/common.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","module.exports = \"\\n<form [formGroup]=\\\"forgotForm\\\" (ngSubmit)=\\\"forgotsubmit()\\\" class=\\\"loginform\\\">\\n    <div class=\\\"formgroup\\\">\\n\\n        <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" (blur)=\\\"f.inputBlur(forgotForm,'email')\\\"/>\\n        <mat-error *ngIf=\\\"forgotForm.controls['email']?.touched && forgotForm.controls['email'].errors && forgotForm.controls['email'].errors.required\\\" class=\\\"errormsgblue\\\">Email is required !</mat-error>\\n        <mat-error *ngIf=\\\"forgotForm.controls['email']?.touched && forgotForm.controls['email'].errors && forgotForm.controls['email'].errors.pattern\\\" class=\\\"errormsgblue\\\">Please Check Your Email !</mat-error>\\n\\n    </div>\\n    <button mat-button class=\\\"orangegradientbutton\\\">Submit</button>\\n</form>\\n\"","module.exports = \"<h3>Login</h3>\\n<form [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"loginsubmit()\\\" class=\\\"loginform\\\">\\n    <div class=\\\"formgroup\\\">\\n\\n        <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\" (blur)=\\\"f.inputBlur(loginForm,'email')\\\"/>\\n        <mat-error *ngIf=\\\"loginForm.controls['email']?.touched && loginForm.controls['email'].errors && loginForm.controls['email'].errors.required\\\" class=\\\"errormsgblue\\\">Email is required !</mat-error>\\n        <mat-error *ngIf=\\\"loginForm.controls['email']?.touched && loginForm.controls['email'].errors && loginForm.controls['email'].errors.pattern\\\" class=\\\"errormsgblue\\\">Please Check Your Email !</mat-error>\\n\\n    </div>\\n    <div class=\\\"formgroup\\\">\\n\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" (blur)=\\\"f.inputBlur(loginForm,'password')\\\"/>\\n        <mat-error *ngIf=\\\"loginForm.controls['password']?.touched && loginForm.controls['password'].errors && loginForm.controls['password'].errors.required\\\" class=\\\"errormsgblue\\\">Password is required !</mat-error>\\n        <mat-error *ngIf=\\\"loginForm.controls['password']?.touched && loginForm.controls['password'].errors && loginForm.controls['password'].errors.minlength\\\" class=\\\"errormsgblue\\\">Password is too short !</mat-error>\\n\\n    </div>\\n    <div class=\\\"formgroup loginbuttoncon\\\">\\n        <a class=\\\"errormsgred\\\" routerLink=\\\"/signup\\\">Sign Up </a>\\n        <a class=\\\"errormsgred\\\" routerLink=\\\"/forget\\\">Forgot Password? </a>\\n        <button mat-button class=\\\"orangegradientbutton\\\">Login</button>\\n    </div>\\n</form>\\n\\n\"","module.exports = \"<p>resetpassword works!</p>\\n<form [formGroup]=\\\"resetpasswordForm\\\" (ngSubmit)=\\\"resetsubmit()\\\" class=\\\"loginform\\\">\\n    <div class=\\\"formgroup\\\">\\n\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\"\\n            (blur)=\\\"f.inputBlur(resetpasswordForm,'password')\\\" />\\n        <mat-error\\n            *ngIf=\\\"resetpasswordForm.controls['password']?.touched && resetpasswordForm.controls['password'].errors && resetpasswordForm.controls['password'].errors.required\\\"\\n            class=\\\"errormsgblue\\\">Password is required !</mat-error>\\n        <mat-error\\n            *ngIf=\\\"resetpasswordForm.controls['password']?.touched && resetpasswordForm.controls['password'].errors && resetpasswordForm.controls['password'].errors.minlength\\\"\\n            class=\\\"errormsgblue\\\">Password is too short !</mat-error>\\n\\n    </div>\\n    <div class=\\\"formgroup\\\">\\n\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Confirm Password\\\" formControlName=\\\"conpassword\\\"\\n            (blur)=\\\"f.inputBlur(resetpasswordForm,'conpassword')\\\" />\\n        <mat-error\\n            *ngIf=\\\"resetpasswordForm.controls['conpassword']?.touched && resetpasswordForm.controls['conpassword'].errors && resetpasswordForm.controls['conpassword'].errors.required\\\"\\n            class=\\\"errormsgblue\\\">Confirm password is required !</mat-error>\\n        <mat-error\\n            *ngIf=\\\"resetpasswordForm.controls['conpassword']?.touched && resetpasswordForm.controls['conpassword'].errors && resetpasswordForm.controls['conpassword'].errors.minlength\\\"\\n            class=\\\"errormsgblue\\\">Confirm password is too short !</mat-error>\\n        <mat-error *ngIf=\\\"resetpasswordForm.hasError('mismatchedPasswords')\\\">Passwords must match</mat-error>\\n\\n    </div>\\n    <div class=\\\"formgroup loginbuttoncon\\\">\\n\\n        <button mat-button class=\\\"orangegradientbutton\\\">Reset</button>\\n    </div>\\n</form>\"","module.exports = \"<h2>signup works!</h2>\\n\\n<form [formGroup]=\\\"signForm\\\" (ngSubmit)=\\\"signupsubmit()\\\" class=\\\"signForm\\\">\\n    <div class=\\\"formgroup\\\">\\n\\n        <input matInput type=\\\"text\\\" placeholder=\\\"FirstName\\\" formControlName=\\\"firstname\\\"\\n            (blur)=\\\"f.inputBlur(signForm,'firstname')\\\" />\\n        <mat-error\\n            *ngIf=\\\"signForm.controls['firstname']?.touched && signForm.controls['firstname'].errors && signForm.controls['firstname'].errors.required\\\"\\n            class=\\\"errormsgblue\\\">firstname is required !</mat-error>\\n\\n    </div>\\n    <div class=\\\"formgroup\\\">\\n\\n        <input matInput type=\\\"text\\\" placeholder=\\\"LastName\\\" formControlName=\\\"lastname\\\"\\n            (blur)=\\\"f.inputBlur(signForm,'lastname')\\\" />\\n        <mat-error\\n            *ngIf=\\\"signForm.controls['lastname']?.touched && signForm.controls['lastname'].errors && signForm.controls['lastname'].errors.required\\\"\\n            class=\\\"errormsgblue\\\">lastname is required !</mat-error>\\n\\n    </div>\\n    <div class=\\\"formgroup\\\">\\n\\n        <input matInput type=\\\"email\\\" placeholder=\\\"Email\\\" formControlName=\\\"email\\\"\\n            (blur)=\\\"f.inputBlur(signForm,'email')\\\" />\\n        <mat-error\\n            *ngIf=\\\"signForm.controls['email']?.touched && signForm.controls['email'].errors && signForm.controls['email'].errors.required\\\"\\n            class=\\\"errormsgblue\\\">Email is required !</mat-error>\\n        <mat-error\\n            *ngIf=\\\"signForm.controls['email']?.touched && signForm.controls['email'].errors && signForm.controls['email'].errors.pattern\\\"\\n            class=\\\"errormsgblue\\\">Please Check Your Email !</mat-error>\\n\\n    </div>\\n    <div class=\\\"formgroup\\\">\\n\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Phone\\\" formControlName=\\\"phone\\\"\\n            (blur)=\\\"f.inputBlur(signForm,'phone')\\\" />\\n        <mat-error\\n            *ngIf=\\\"signForm.controls['phone']?.touched && signForm.controls['phone'].errors && signForm.controls['phone'].errors.required\\\"\\n            class=\\\"errormsgblue\\\">phone is required !</mat-error>\\n\\n    </div>\\n    <div class=\\\"formgroup\\\">\\n\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\"\\n            (blur)=\\\"f.inputBlur(signForm,'password')\\\" />\\n        <mat-error\\n            *ngIf=\\\"signForm.controls['password']?.touched && signForm.controls['password'].errors && signForm.controls['password'].errors.required\\\"\\n            class=\\\"errormsgblue\\\">Password is required !</mat-error>\\n        <mat-error\\n            *ngIf=\\\"signForm.controls['password']?.touched && signForm.controls['password'].errors && signForm.controls['password'].errors.minlength\\\"\\n            class=\\\"errormsgblue\\\">Password is too short !</mat-error>\\n\\n    </div>\\n    <div class=\\\"formgroup\\\">\\n\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Confirm Password\\\" formControlName=\\\"conpassword\\\"\\n            (blur)=\\\"f.inputBlur(signForm,'password')\\\" />\\n        <mat-error\\n            *ngIf=\\\"signForm.controls['conpassword']?.touched && signForm.controls['conpassword'].errors && signForm.controls['conpassword'].errors.required\\\"\\n            class=\\\"errormsgblue\\\">Confirm password is required !</mat-error>\\n        <mat-error\\n            *ngIf=\\\"signForm.controls['conpassword']?.touched && signForm.controls['conpassword'].errors && signForm.controls['conpassword'].errors.minlength\\\"\\n            class=\\\"errormsgblue\\\">Confirm password is too short !</mat-error>\\n        <mat-error *ngIf=\\\"signForm.hasError('mismatchedPasswords')\\\">Passwords must match</mat-error>\\n\\n    </div>\\n    <div class=\\\"formgroup\\\">\\n\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Zip\\\" formControlName=\\\"zip\\\" (blur)=\\\"f.inputBlur(signForm,'zip')\\\" />\\n        <mat-error\\n            *ngIf=\\\"signForm.controls['zip']?.touched && signForm.controls['zip'].errors && signForm.controls['zip'].errors.required\\\"\\n            class=\\\"errormsgblue\\\">Zip is required !</mat-error>\\n\\n    </div>\\n    <div class=\\\"formgroup\\\">\\n\\n        <input matInput type=\\\"text\\\" placeholder=\\\"City\\\" formControlName=\\\"city\\\" (blur)=\\\"f.inputBlur(signForm,'city')\\\" />\\n        <mat-error\\n            *ngIf=\\\"signForm.controls['city']?.touched && signForm.controls['city'].errors && signForm.controls['city'].errors.required\\\"\\n            class=\\\"errormsgblue\\\">City is required !</mat-error>\\n\\n    </div>\\n    <div class=\\\"formgroup\\\">\\n\\n        <input matInput type=\\\"text\\\" placeholder=\\\"State\\\" formControlName=\\\"state\\\"\\n            (blur)=\\\"f.inputBlur(signForm,'state')\\\" />\\n        <mat-error\\n            *ngIf=\\\"signForm.controls['state']?.touched && signForm.controls['state'].errors && signForm.controls['state'].errors.required\\\"\\n            class=\\\"errormsgblue\\\">State is required !</mat-error>\\n\\n    </div>\\n    <div class=\\\"formgroup\\\">\\n\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Company Name\\\" formControlName=\\\"companyname\\\" />\\n\\n    </div>\\n    <div class=\\\"formgroup\\\">\\n\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Designation in company\\\" formControlName=\\\"designation\\\" />\\n\\n    </div>\\n    <div class=\\\"formgroup\\\">\\n\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Company Website\\\" formControlName=\\\"companysite\\\" />\\n\\n    </div>\\n\\n    <div class=\\\"formgroup loginbuttoncon\\\">\\n\\n        <button mat-button class=\\\"orangegradientbutton\\\">Sign Up @</button>\\n    </div>\\n</form>\"","\r\nexport function matchingPasswords(passwordKey: string, confirmPasswordKey: string) {\r\n    return (group: any): {\r\n        [key: string]: any\r\n    } => {\r\n        let password = group.controls[passwordKey];\r\n        let confirmPassword = group.controls[confirmPasswordKey];\r\n\r\n        if (password.value !== confirmPassword.value) {\r\n            return {\r\n                mismatchedPasswords: true\r\n            };\r\n        }\r\n    }\r\n}","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './components/login/login/login.component';\r\nimport{ForgetComponent} from './components/forget/forget/forget.component';\r\nimport { SignupComponent } from './components/signup/signup.component';\r\nimport { ResetpasswordComponent } from './components/resetpassword/resetpassword.component';\r\n\r\nconst routes: Routes = [\r\n  {path: '', component: LoginComponent},\r\n  {path:'forget', component:ForgetComponent},\r\n  {path:'signup', component:SignupComponent},\r\n  {path:'resetpassword', component:ResetpasswordComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { BrowserModule, BrowserTransferStateModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { AppModule } from './app.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n@NgModule({\r\n  imports: [\r\n    \r\n    AppRoutingModule,\r\n    \r\n    AppModule,\r\n    \r\n    BrowserTransferStateModule,\r\n    \r\n    BrowserAnimationsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppBrowserModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Monitize360';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { DemoMaterialModule } from './modules/material-module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TransferHttpCacheModule } from '@nguniversal/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { NgtUniversalModule } from '@ng-toolkit/universal';\r\nimport { LoginComponent } from './components/login/login/login.component';\r\nimport { ForgetComponent } from './components/forget/forget/forget.component';\r\nimport { ApiService } from './services/api-service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n// authguard import statements here\r\nimport { AuthGuard } from './services/auth.guard';\nimport { SignupComponent } from './components/signup/signup.component';\nimport { ResetpasswordComponent } from './components/resetpassword/resetpassword.component';\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    ForgetComponent,\r\n    SignupComponent,\r\n    ResetpasswordComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule.withServerTransition({ appId: 'serverApp' }),\r\n    AppRoutingModule,\r\n    CommonModule,\r\n    TransferHttpCacheModule,\r\n    HttpClientModule,\r\n    NgtUniversalModule,\r\n    DemoMaterialModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: [AuthGuard,CookieService,ApiService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvZm9yZ2V0L2ZvcmdldC9mb3JnZXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from '../../../services/api-service';\nimport{CommonService} from '../../../services/common.service';\n@Component({\n  selector: 'app-forget',\n  templateUrl: './forget.component.html',\n  styleUrls: ['./forget.component.css']\n})\nexport class ForgetComponent implements OnInit {\n  public forgotForm: FormGroup;\n  constructor(public formBuilder: FormBuilder,public f: CommonService,public api_service: ApiService) \n  { this.genarateforgotForm(); }\n\n  ngOnInit() {\n  }\n  genarateforgotForm() {\n    this.forgotForm = this.formBuilder.group({\n\n      email: [null, [Validators.required, Validators.pattern('[a-z0-9._%+-]{1,40}[@]{1}[a-z]{1,10}[.]{1}[a-z]{3}')]],\n    });\n  }\n\n  forgotsubmit() {\n    if (this.forgotForm.valid) {\n      console.log(\"gorgot hit\");\n    } else {\n      for (let x in this.forgotForm.controls) {\n        //console.log(this.forgotForm.controls[x]);\n        this.forgotForm.controls[x].markAsTouched();\n      }\n      console.log(\"eror\");\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbG9naW4vbG9naW4vbG9naW4uY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from '../../../services/api-service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport{CommonService} from '../../../services/common.service';\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  public loginForm: FormGroup;\n\n  constructor(public formBuilder: FormBuilder,public api_service: ApiService, public cookieservice: CookieService, public router: Router,public f: CommonService){this.genarateloginForm(); }\n\n  ngOnInit() {\n    \n  }\n  genarateloginForm() {\n    this.loginForm = this.formBuilder.group({\n\n      email: [null, [Validators.required, Validators.pattern('[a-z0-9._%+-]{1,40}[@]{1}[a-z]{1,10}[.]{1}[a-z]{3}')]],\n      password: [null, [Validators.required, Validators.minLength(6)]],\n    });\n  }\n\n        loginsubmit() {\n        \n          if(this.loginForm.valid){\n            this.api_service.postDatawithoutToken('login', this.loginForm.value).subscribe(res => {\n              let result: any;\n              result = res;\n             // console.log(result);\n              if (result.status == \"success\") {\n                this.cookieservice.set('userdetails', JSON.stringify(result.item));\n                this.cookieservice.set('firstname', result.item[0].firstname);\n                this.cookieservice.set('lastname', result.item[0].lastname);\n                this.cookieservice.set('id', result.item[0]._id);\n                this.cookieservice.set('jwttoken', result.token);\n                // just to give it a render on homepage , later things will change\n                this.router.navigate(['/resetpassword']);\n              }\n              });\n            \n            }\n              else\n              {\n                this.loginForm.controls['email'].markAsTouched();\n                this.loginForm.controls['password'].markAsTouched();\n                for (let x in this.loginForm.controls) {\n                 // console.log(this.loginForm.controls[x]);\n                  this.loginForm.controls[x].markAsTouched();\n                }\n              \n              }\n        }\n\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcmVzZXRwYXNzd29yZC9yZXNldHBhc3N3b3JkLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from '../../services/api-service';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport{CommonService} from '../../services/common.service';\nimport { matchingPasswords } from '../../_helpers/must-match.validator';\n@Component({\n  selector: 'app-resetpassword',\n  templateUrl: './resetpassword.component.html',\n  styleUrls: ['./resetpassword.component.css']\n})\nexport class ResetpasswordComponent implements OnInit {\npublic resetpasswordForm: FormGroup;\n  constructor(public formBuilder: FormBuilder,public api_service: ApiService, public cookieservice: CookieService, public router: Router,public f: CommonService) {this.genarateresetForm(); }\n\n  ngOnInit() {\n  }\n\n  genarateresetForm(){\n    this.resetpasswordForm = this.formBuilder.group({\n      password: [null, [Validators.required, Validators.minLength(6)]],\n      conpassword:[null,[Validators.required,Validators.minLength(6)]]\n    }, {\n      validator: matchingPasswords('password', 'conpassword')\n    });\n  }\n\n  resetsubmit(){\n   if(this.resetpasswordForm.valid){\n    if (this.resetpasswordForm.value.conpassword != null) {\n      delete this.resetpasswordForm.value.conpassword;\n    }\n    \n    let d: any = { 'source': 'user', 'data': {'id':this.cookieservice.get('id'),'password':this.resetpasswordForm.value.password},'token':this.cookieservice.get('jwttoken')};\n   //console.log(d);\n    this.api_service.postData('addorupdatedata', d).subscribe(res=> {\n      let result:any;\n      result = res;\n      console.log(result);\n    });\n   }\n   else\n   {\n     for (let x in this.resetpasswordForm.controls) {\n      // console.log(this.resetpasswordForm.controls[x]);\n       this.resetpasswordForm.controls[x].markAsTouched();\n     }\n   \n   }\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvc2lnbnVwL3NpZ251cC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService } from '../../services/api-service';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { CommonService } from '../../services/common.service';\nimport { matchingPasswords } from '../../_helpers/must-match.validator';\nimport { CookieService } from 'ngx-cookie-service';\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  public signForm: FormGroup;\n  public token='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJleHAiOjE1NzA3OTA0MjAsImlhdCI6MTU3MDcwNDAyMH0.djwWEc_j6MILbEzjfoT427nmRfll97p57IDp6BtfPSs';\n  constructor(public formBuilder: FormBuilder, public api_service: ApiService, public router: Router, public f: CommonService,public cook:CookieService) { this.genaratesignForm(); }\n\n  ngOnInit() {\n    this.cook.set('jwttoken',this.token);\n  }\n\n  genaratesignForm() {\n    this.signForm = this.formBuilder.group({\n      firstname: [null, [Validators.required]],\n      lastname: [null, [Validators.required]],\n      email: [null, [Validators.required, Validators.pattern('[a-z0-9._%+-]{1,40}[@]{1}[a-z]{1,10}[.]{1}[a-z]{3}')]],\n      phone: [null, [Validators.required]],\n      password: [null, [Validators.required, Validators.minLength(6)]],\n      conpassword: [null, [Validators.required, Validators.minLength(6)]],\n      zip: [null, [Validators.required]],\n      city: [null, [Validators.required]],\n      state: [null, [Validators.required]],\n      companyname: [null],\n      designation: [null],\n      companysite: [null],\n    }, {\n      validator: matchingPasswords('password', 'conpassword')\n    });\n  }\n\n  signupsubmit() {\n    if (this.signForm.valid) {\n      if (this.signForm.value.conpassword != null) {\n        delete this.signForm.value.conpassword;\n      }\n      \n      let d: any = { 'source': 'user', 'data': this.signForm.value};\n     \n      this.api_service.postData('addorupdatedata', d).subscribe(res=> {\n        let result:any;\n        result = res;\n        console.log(result);\n      });\n    } else {\n      for (let x in this.signForm.controls) {\n        // console.log(this.signForm.controls[x]);\n        this.signForm.controls[x].markAsTouched();\n      }\n    }\n  }\n \n}","import { NgModule } from '@angular/core';\r\nimport { A11yModule } from '@angular/cdk/a11y';\r\nimport { DragDropModule } from '@angular/cdk/drag-drop';\r\nimport { PortalModule } from '@angular/cdk/portal';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CdkStepperModule } from '@angular/cdk/stepper';\r\nimport { CdkTableModule } from '@angular/cdk/table';\r\nimport { CdkTreeModule } from '@angular/cdk/tree';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatBadgeModule } from '@angular/material/badge';\r\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatStepperModule } from '@angular/material/stepper';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSliderModule } from '@angular/material/slider';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { MatTreeModule } from '@angular/material/tree';\r\n\r\n@NgModule({\r\n    exports: [\r\n        A11yModule,\r\n        CdkStepperModule,\r\n        CdkTableModule,\r\n        CdkTreeModule,\r\n        DragDropModule,\r\n        MatAutocompleteModule,\r\n        MatBadgeModule,\r\n        MatBottomSheetModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatCardModule,\r\n        MatCheckboxModule,\r\n        MatChipsModule,\r\n        MatStepperModule,\r\n        MatDatepickerModule,\r\n        MatDialogModule,\r\n        MatDividerModule,\r\n        MatExpansionModule,\r\n        MatGridListModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatListModule,\r\n        MatMenuModule,\r\n        MatNativeDateModule,\r\n        MatPaginatorModule,\r\n        MatProgressBarModule,\r\n        MatProgressSpinnerModule,\r\n        MatRadioModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatSliderModule,\r\n        MatSlideToggleModule,\r\n        MatSnackBarModule,\r\n        MatSortModule,\r\n        MatTableModule,\r\n        MatTabsModule,\r\n        MatToolbarModule,\r\n        MatTooltipModule,\r\n        MatTreeModule,\r\n        PortalModule,\r\n        ScrollingModule,\r\n    ]\r\n})\r\nexport class DemoMaterialModule { }\r\n\r\n\r\n/**  Copyright 2019 Google Inc. All Rights Reserved.\r\n    Use of this source code is governed by an MIT-style license that\r\n    can be found in the LICENSE file at http://angular.io/license */","\r\nimport {Injectable, ViewChild, EventEmitter, ElementRef} from '@angular/core';\r\nimport { Observable, interval, pipe } from 'rxjs';\r\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\r\nimport { environment } from '../../environments/environment';\r\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n// import {UploaderComponent} from \"./uploader/uploader.component\";\r\n\r\n\r\n@Injectable()\r\nexport class ApiService {\r\n\r\n    public loginurl = environment['loginurl'];\r\n    public api_url = environment[\"api_url\"];\r\n    public jwttoken: any;\r\n\r\n\r\n\r\n    constructor(private _http: HttpClient,\r\n                private _authHttp: HttpClient,\r\n                public cookieService: CookieService\r\n                // public jwtHelper: JwtHelperService,\r\n                // private loggedinService: LoggedinService\r\n    ) {\r\n        this.jwttoken=this.cookieService.get('jwttoken');\r\n    }\r\n\r\n\r\n    isTokenExpired() {\r\n\r\n        // const helper = new JwtHelperService();\r\n        // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\r\n        // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\r\n        // console.log('refresh_token',localStorage.getItem('refresh_token'))\r\n        // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\r\n        // console.log('id_token isExpired:',isIdTokenExpired)\r\n        // console.log('refresh_token isExpired:',isRefreshTokenExpired)\r\n\r\n\r\n\r\n    }\r\n\r\n    getclientip() {\r\n\r\n        console.log('endpoint');\r\n\r\n        // this.isTokenExpired()\r\n        var result = this._http.get(\"https://ipinfo.io/?format=json&token=9797c42b93078a\").pipe(map(res => res));\r\n\r\n        return result;\r\n    }\r\n\r\n    getDatawithouttoken(endpoint) {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type':  'application/json'\r\n            })\r\n        };\r\n        /* console.log('httpOptions');\r\n         console.log(httpOptions);*/\r\n        // this.isTokenExpired()\r\n        var result = this._http.get(this.api_url + endpoint, httpOptions).pipe(map(res => res));\r\n        return result;\r\n    }\r\n    getJsonObject(path:any){\r\n        var result = this._http.get(path).pipe(map(res => res));\r\n        return result;\r\n    }\r\n\r\n    \r\n    getEndpoint(endpoint: any) {\r\n\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type':  'application/json',\r\n                'access-token': this.cookieService.get('jwttoken')\r\n            })\r\n        };\r\n        let condition:any=endpoint.condition;\r\n        console.log('condition');\r\n        console.log(condition);\r\n        console.log('endpoint');\r\n        console.log(endpoint);\r\n        console.log('httpOptions');\r\n        console.log(httpOptions);\r\n        console.log(this.cookieService.get('jwttoken'));\r\n\r\n        // this.isTokenExpired()\r\n        var result = this._http.post(this.api_url + endpoint.source, condition, httpOptions).pipe(map(res => res));\r\n        console.log(result);\r\n        return result;\r\n    }\r\n\r\n\r\n    getData(endpoint: any) {\r\n\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type':  'application/json',\r\n                'Authorization': this.cookieService.get('jwttoken')\r\n            })\r\n        };\r\n        console.log(this.cookieService.get('id'));\r\n        console.log(this.cookieService.get('id'));\r\n        console.log('endpoint');\r\n        console.log(endpoint);\r\n        console.log('httpOptions');\r\n        console.log(httpOptions);\r\n        console.log(this.cookieService.get('jwttoken'));\r\n        console.log('httpOptions');\r\n        console.log(httpOptions);\r\n\r\n        // this.isTokenExpired()\r\n        var result = this._http.post(this.api_url + 'datalist', endpoint, httpOptions).pipe(map(res => res));\r\n\r\n        return result;\r\n    }\r\n    // getData end\r\n\r\n\r\n    postData(endpoint:any, data) {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type':  'application/json',\r\n                // 'access-token': this.cookieService.get('jwttoken'),\r\n                'Authorization': this.cookieService.get('jwttoken')\r\n            })\r\n        \r\n        };\r\n        console.log(this.cookieService.get('jwttoken'));\r\n        console.log('endpoint');\r\n        console.log(endpoint);\r\n        console.log('httpOptions');\r\n        console.log(httpOptions);\r\n        var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\r\n        return result;\r\n    }\r\n    postDatawithoutToken(endpoint:any, data) {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type':  'application/json'\r\n            })\r\n        };\r\n        console.log(this.cookieService.get('jwttoken'));\r\n        console.log('endpoint');\r\n        console.log(endpoint);\r\n        var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\r\n        return result;\r\n    }\r\n\r\n    postlogin(endpoint:any, data) {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type':  'application/json'\r\n            })\r\n        };\r\n        console.log(this.cookieService.get('jwttoken'));\r\n        console.log('endpoint');\r\n        console.log(endpoint);\r\n        var result = this._http.post(this.getEndpointUrl(endpoint), JSON.stringify(data), httpOptions).pipe(map(res => res));\r\n        return result;\r\n    } // postData end\r\n\r\n    getState() {\r\n        const httpOptions = {\r\n            headers: new HttpHeaders({\r\n                'Content-Type':  'application/json',\r\n            })\r\n        };\r\n        var result = this._http.get('assets/data/state.json').pipe(map(res => res));\r\n        return result;\r\n    }\r\n\r\n    private getEndpointUrl(endpoint: string) {\r\n        return this.api_url + endpoint;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { environment } from '../../environments/environment';\r\nimport { ApiService } from '../services/api-service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    constructor(private router: Router,\r\n                public http: HttpClient,\r\n                private _apiService: ApiService,\r\n                private cookieService: CookieService\r\n    ) {}\r\n\r\n\r\n    canActivate() {\r\n\r\n        console.log('in auth guard');\r\n        console.log(this.cookieService.get('jwttoken'));\r\n        if (this.cookieService.get('jwttoken') == null || this.cookieService.get('jwttoken').length < 10) {\r\n            // alert(78);\r\n            this.router.navigate(['/']);\r\n        } else return true;\r\n        return false;\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  constructor() { }\n\n  inputBlur(frm:any,val: any) {\n    frm.controls[val].markAsUntouched();\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\nimport { AppBrowserModule } from './app/app.browser.module';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n  platformBrowserDynamic().bootstrapModule(AppBrowserModule)\r\n  .catch(err => console.error(err));\r\n});\r\n"],"sourceRoot":""}