!function(e,r){"object"==typeof exports&&"undefined"!=typeof module?r(exports,require("rxjs/operators"),require("rxjs"),require("@angular/cdk/a11y"),require("@angular/cdk/drag-drop"),require("@angular/cdk/portal"),require("@angular/cdk/scrolling"),require("@angular/cdk/stepper"),require("@angular/cdk/table"),require("@angular/cdk/tree"),require("@angular/material/autocomplete"),require("@angular/material/badge"),require("@angular/material/bottom-sheet"),require("@angular/material/button"),require("@angular/material/button-toggle"),require("@angular/material/card"),require("@angular/material/checkbox"),require("@angular/material/chips"),require("@angular/material/stepper"),require("@angular/material/datepicker"),require("@angular/material/dialog"),require("@angular/material/divider"),require("@angular/material/expansion"),require("@angular/material/grid-list"),require("@angular/material/icon"),require("@angular/material/input"),require("@angular/material/list"),require("@angular/material/menu"),require("@angular/material/core"),require("@angular/material/paginator"),require("@angular/material/progress-bar"),require("@angular/material/progress-spinner"),require("@angular/material/radio"),require("@angular/material/select"),require("@angular/material/sidenav"),require("@angular/material/slider"),require("@angular/material/slide-toggle"),require("@angular/material/snack-bar"),require("@angular/material/sort"),require("@angular/material/table"),require("@angular/material/tabs"),require("@angular/material/toolbar"),require("@angular/material/tooltip"),require("@angular/material/tree"),require("@angular/platform-browser/animations"),require("@angular/common"),require("@angular/material"),require("@angular/core"),require("@angular/forms"),require("@angular/common/http"),require("@angular/router"),require("ngx-cookie-service")):"function"==typeof define&&define.amd?define("login",["exports","rxjs/operators","rxjs","@angular/cdk/a11y","@angular/cdk/drag-drop","@angular/cdk/portal","@angular/cdk/scrolling","@angular/cdk/stepper","@angular/cdk/table","@angular/cdk/tree","@angular/material/autocomplete","@angular/material/badge","@angular/material/bottom-sheet","@angular/material/button","@angular/material/button-toggle","@angular/material/card","@angular/material/checkbox","@angular/material/chips","@angular/material/stepper","@angular/material/datepicker","@angular/material/dialog","@angular/material/divider","@angular/material/expansion","@angular/material/grid-list","@angular/material/icon","@angular/material/input","@angular/material/list","@angular/material/menu","@angular/material/core","@angular/material/paginator","@angular/material/progress-bar","@angular/material/progress-spinner","@angular/material/radio","@angular/material/select","@angular/material/sidenav","@angular/material/slider","@angular/material/slide-toggle","@angular/material/snack-bar","@angular/material/sort","@angular/material/table","@angular/material/tabs","@angular/material/toolbar","@angular/material/tooltip","@angular/material/tree","@angular/platform-browser/animations","@angular/common","@angular/material","@angular/core","@angular/forms","@angular/common/http","@angular/router","ngx-cookie-service"],r):r(e.login={},e.rxjs.operators,e.rxjs,e.ng.cdk.a11y,e.ng.cdk["drag-drop"],e.ng.cdk.portal,e.ng.cdk.scrolling,e.ng.cdk.stepper,e.ng.cdk.table,e.ng.cdk.tree,e.ng.material.autocomplete,e.ng.material.badge,e.ng.material["bottom-sheet"],e.ng.material.button,e.ng.material["button-toggle"],e.ng.material.card,e.ng.material.checkbox,e.ng.material.chips,e.ng.material.stepper,e.ng.material.datepicker,e.ng.material.dialog,e.ng.material.divider,e.ng.material.expansion,e.ng.material["grid-list"],e.ng.material.icon,e.ng.material.input,e.ng.material.list,e.ng.material.menu,e.ng.material.core,e.ng.material.paginator,e.ng.material["progress-bar"],e.ng.material["progress-spinner"],e.ng.material.radio,e.ng.material.select,e.ng.material.sidenav,e.ng.material.slider,e.ng.material["slide-toggle"],e.ng.material["snack-bar"],e.ng.material.sort,e.ng.material.table,e.ng.material.tabs,e.ng.material.toolbar,e.ng.material.tooltip,e.ng.material.tree,e.ng.platformBrowser.animations,e.ng.common,e.ng.material,e.ng.core,e.ng.forms,e.ng.common.http,e.ng.router,e.i2)}(this,function(e,n,o,r,t,a,i,s,l,u,p,d,m,c,g,f,h,b,v,y,U,w,F,S,V,k,M,x,P,I,E,j,C,q,T,N,O,_,R,D,H,A,L,B,G,J,z,W,K,Y,Z,$){"use strict";var X=(Q.decorators=[{type:W.Injectable,args:[{providedIn:"root"}]}],Q.ctorParameters=function(){return[]},Q.ngInjectableDef=W.defineInjectable({factory:function(){return new Q},token:Q,providedIn:"root"}),Q);function Q(){}var ee=(re.prototype.setServerUrl=function(e){this.subjectForServerUrl.next(e)},re.prototype.clearServerUrl=function(){this.subjectForServerUrl.next(null)},re.prototype.getServerUrl=function(){return this.subjectForServerUrl.asObservable()},re.prototype.setaddEndpoint=function(e){this.subjectForaddEndpointUrl.next(e)},re.prototype.clearaddEndpoint=function(){this.subjectForaddEndpointUrl.next(null)},re.prototype.getaddEndpoint=function(){return this.subjectForaddEndpointUrl.asObservable()},re.prototype.setuploadEndpont=function(e){this.subjectForuploadEndpointUrl.next(e)},re.prototype.clearuploadEndpoint=function(){this.subjectForuploadEndpointUrl.next(null)},re.prototype.getuploadEndpoint=function(){return this.subjectForuploadEndpointUrl.asObservable()},re.prototype.setupdateEndpoint=function(e){this.subjectForupdateEndpointUrl.next(e)},re.prototype.clearupdateEndpoint=function(){this.subjectForupdateEndpointUrl.next(null)},re.prototype.getupdateEndpoint=function(){return this.subjectForupdateEndpointUrl.asObservable()},re.prototype.setdeletesingleEndpoint=function(e){this.subjectFordeletesingleEndpointUrl.next(e)},re.prototype.cleardeletesingleEndpoint=function(){this.subjectFordeletesingleEndpointUrl.next(null)},re.prototype.getdeletesingleEndpoint=function(){return this.subjectFordeletesingleEndpointUrl.asObservable()},re.prototype.setupdatestatus_singleEndpoint=function(e){this.subjectForupdatestatusSingleEndpointUrl.next(e)},re.prototype.clearupdatestatus_singleEndpoint=function(){this.subjectForupdatestatusSingleEndpointUrl.next(null)},re.prototype.getupdatestatus_singleEndpoint=function(){return this.subjectForupdatestatusSingleEndpointUrl.asObservable()},re.prototype.setgetdataEndpoint=function(e){this.subjectForGetdataEndpointUrl.next(e)},re.prototype.cleargetdataEndpoint=function(){this.subjectForGetdataEndpointUrl.next(null)},re.prototype.getdataEndpoint=function(){return this.subjectForGetdataEndpointUrl.asObservable()},re.prototype.isTokenExpired=function(){},re.prototype.addData=function(e){console.log("in adddata apiservice");var r={headers:new Y.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return console.log("httpoptions",r,this.serverUrl,e),this._http.post(this.serverUrl+this.addendpointUrl,JSON.stringify(e),r).pipe(n.map(function(e){return e}))},re.prototype.uploadFile=function(e){var r={headers:new Y.HttpHeaders({"Content-Type":"application/json","access-token":this.accesstoken})};return this._http.post(this.serverUrl+this.uploadEndpointUrl,JSON.stringify(e),r).pipe(n.map(function(e){return e}))},re.prototype.UpdateData=function(e){var r={headers:new Y.HttpHeaders({"Content-Type":"application/json","access-token":this.accesstoken})};return this._http.post(this.serverUrl+this.updateendpointUrl,JSON.stringify(e),r).pipe(n.map(function(e){return e}))},re.prototype.getData=function(e){var r={headers:new Y.HttpHeaders({"Content-Type":"application/json",Authorization:this.accesstoken})};return this._http.post(this.serverUrl+this.getdata_endpointUrl,JSON.stringify(e),r).pipe(n.map(function(e){return e}))},re.prototype.addLogin=function(e){console.log("in addLogin apiservice");var r={headers:new Y.HttpHeaders({"Content-Type":"application/json"})};return console.log(this.serverUrl,e),this._http.post(this.serverUrl+this.addendpointUrl,JSON.stringify(e),r).pipe(n.map(function(e){return e}))},re.prototype.forgetPassword=function(e){console.log("in forgetPassword apiservice");var r={headers:new Y.HttpHeaders({"Content-Type":"application/json"})};return console.log(this.serverUrl,e),this._http.post(this.serverUrl+this.addendpointUrl,JSON.stringify(e),r).pipe(n.map(function(e){return e}))},re.prototype.deleteSingleData=function(e){var r={headers:new Y.HttpHeaders({"Content-Type":"application/json","access-token":this.accesstoken})};return this._http.post(this.serverUrl+this.deletesingle_endpointUrl,JSON.stringify(e),r).pipe(n.map(function(e){return e}))},re.prototype.deleteMultipleData=function(e){var r={headers:new Y.HttpHeaders({"Content-Type":"application/json","access-token":this.accesstoken})};return this._http.post(this.serverUrl+this.deletesingle_endpointUrl+"many",JSON.stringify(e),r).pipe(n.map(function(e){return e}))},re.prototype.UpdateStatusForSingleData=function(e){var r={headers:new Y.HttpHeaders({"Content-Type":"application/json","access-token":this.accesstoken})};return this._http.post(this.serverUrl+this.updatestatus_single_endpointUrl,JSON.stringify(e),r).pipe(n.map(function(e){return e}))},re.prototype.UpdateStatusForMultipleData=function(e){var r={headers:new Y.HttpHeaders({"Content-Type":"application/json","access-token":this.accesstoken})};return this._http.post(this.serverUrl+this.updatestatus_single_endpointUrl+"many",JSON.stringify(e),r).pipe(n.map(function(e){return e}))},re.prototype.CustomRequest=function(e,r){var t={headers:new Y.HttpHeaders({"Content-Type":"application/json","access-token":this.accesstoken})};return this._http.post(this.serverUrl+r,JSON.stringify(e),t).pipe(n.map(function(e){return e}))},re.decorators=[{type:W.Injectable,args:[{providedIn:"root"}]}],re.ctorParameters=function(){return[{type:Y.HttpClient},{type:Y.HttpClient},{type:$.CookieService}]},re.ngInjectableDef=W.defineInjectable({factory:function(){return new re(W.inject(Y.HttpClient),W.inject(Y.HttpClient),W.inject($.CookieService))},token:re,providedIn:"root"}),re);function re(e,r,t){var n=this;this._http=e,this._authHttp=r,this.cookieService=t,this.progress=[],this.uploaderror="",this.accesstoken=this.cookieService.get("jwttoken"),this.fileservername=[],this.subjectForServerUrl=new o.Subject,this.subjectForaddEndpointUrl=new o.Subject,this.subjectForuploadEndpointUrl=new o.Subject,this.subjectForupdateEndpointUrl=new o.Subject,this.subjectFordeletesingleEndpointUrl=new o.Subject,this.subjectForupdatestatusSingleEndpointUrl=new o.Subject,this.subjectForGetdataEndpointUrl=new o.Subject,this.subscriptionServer=this.getServerUrl().subscribe(function(e){var r;r=e,n.serverUrl=null!=r?r:null}),this.subscriptionaddEndpoint=this.getaddEndpoint().subscribe(function(e){var r;r=e,n.addendpointUrl=null!=r?r:null}),this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(function(e){var r;r=e,n.uploadEndpointUrl=null!=r?r:null}),this.subscriptionupdateEndpoint=this.getupdateEndpoint().subscribe(function(e){var r;r=e,n.updateendpointUrl=null!=r?r:null}),this.subscriptiondeletesingleEndpoint=this.getdeletesingleEndpoint().subscribe(function(e){var r;r=e,n.deletesingle_endpointUrl=null!=r?r:null}),this.subscriptionupdatestatusSingleEndpoint=this.getupdatestatus_singleEndpoint().subscribe(function(e){var r;r=e,n.updatestatus_single_endpointUrl=null!=r?r:null}),this.subscriptionGetdataEndpoint=this.getdataEndpoint().subscribe(function(e){var r;r=e,n.getdata_endpointUrl=null!=r?r:null})}var te=(Object.defineProperty(ne.prototype,"fromTitle",{set:function(e){this.fromTitleValue=e||"<no name set>",this.fromTitleValue=e},enumerable:!0,configurable:!0}),Object.defineProperty(ne.prototype,"logo",{set:function(e){this.logoValue=e},enumerable:!0,configurable:!0}),Object.defineProperty(ne.prototype,"fullUrl",{set:function(e){this.serverURL=e||"<no name set>",this.serverURL=e},enumerable:!0,configurable:!0}),Object.defineProperty(ne.prototype,"endpoint",{set:function(e){this.endpointValue=e},enumerable:!0,configurable:!0}),Object.defineProperty(ne.prototype,"signUpRouteingUrl",{set:function(e){this.signUpRouteingUrlValue=e||"<no name set>",this.signUpRouteingUrlValue=e},enumerable:!0,configurable:!0}),Object.defineProperty(ne.prototype,"forgetRouteingUrl",{set:function(e){this.forgetRouteingUrlValue=e||"<no name set>",this.forgetRouteingUrlValue=e},enumerable:!0,configurable:!0}),Object.defineProperty(ne.prototype,"routerStatus",{set:function(e){this.routerStatusValue=e||"<no name set>",this.routerStatusValue=e,console.log(this.routerStatusValue),console.log(this.routerStatusValue.data.length)},enumerable:!0,configurable:!0}),ne.prototype.ngOnInit=function(){var e=this;this.apiService.clearServerUrl(),setTimeout(function(){e.apiService.setServerUrl(e.serverURL)},50),this.apiService.clearaddEndpoint(),setTimeout(function(){e.apiService.setaddEndpoint(e.endpointValue)},50)},ne.prototype.loginFormSubmit=function(){var e,n=this;for(e in this.loginForm.controls)this.loginForm.controls[e].markAsTouched();if(this.loginForm.valid){var r=this.loginForm.value;this.apiService.addLogin(r).subscribe(function(e){var r;if("success"==(r=e).status){for(var t in n.cookieService.set("user_id",r.item[0]._id),n.cookieService.set("userdetails",JSON.stringify(r.item)),n.cookieService.set("jwtToken",r.token),n.router.navigateByUrl("/clientdashboard"),n.routerStatusValue.data)r.type===n.routerStatusValue.data[t].type&&n.router.navigateByUrl("/"+n.routerStatusValue.data[t].routerNav);n.formDirective.resetForm()}else n.message=r.msg})}},ne.prototype.inputUntouched=function(e){this.loginForm.controls[e].markAsUntouched()},ne.prototype.forgetpassword=function(){this.router.navigateByUrl("/"+this.forgetRouteingUrlValue)},ne.prototype.signup=function(){this.router.navigateByUrl("/"+this.signUpRouteingUrlValue)},ne.decorators=[{type:W.Component,args:[{selector:"lib-login",template:'<div class="main-div">\r\n\r\n    <mat-card class="from">\r\n            <span class="logowrapper" *ngIf="logoValue != \'\'" >\r\n                    <img  [src]="logoValue">\r\n                </span>\r\n\r\n        <h2 *ngIf="fromTitleValue != \'\'"> {{fromTitleValue}}</h2>\r\n\r\n        <form class="example-container" [formGroup]="loginForm" (ngSubmit)="loginFormSubmit()" novalidate>\r\n<mat-error class="error" *ngIf="message !=\'\'">{{message}}</mat-error>\r\n\r\n            <mat-form-field>\r\n                <input matInput type="text" placeholder="Username" formControlName="email" (blur)="inputUntouched(\'email\')">\r\n                <mat-error\r\n                    *ngIf="!loginForm.controls[\'email\'].valid && loginForm.controls[\'email\'].errors.required && loginForm.controls[\'email\'].touched">\r\n                    email field can not be blank</mat-error>\r\n            </mat-form-field>\r\n\r\n\r\n            <mat-form-field>\r\n                <input matInput placeholder="Password" type="password" formControlName="password" (blur)="inputUntouched(\'password\')">\r\n                <mat-error\r\n                    *ngIf="!loginForm.controls[\'password\'].valid && loginForm.controls[\'password\'].errors.required && loginForm.controls[\'password\'].touched">\r\n                    Password field can not be blank</mat-error>\r\n            </mat-form-field>\r\n\r\n\r\n            <button mat-raised-button color="primary">Login</button>\r\n            <span class="signupfooter">\r\n                <a (click)="forgetpassword()">Forgot password</a>\r\n                <a (click)="signup()">Sign Up</a>\r\n            </span>\r\n        </form>\r\n\r\n    </mat-card>\r\n\r\n</div>',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.from{width:30%;margin:0 auto}.from h2{text-align:center;background-color:#00f;color:#fff;padding:15px}.from a{padding-right:30px}.main-div{height:100vh;display:flex;justify-content:center;align-items:center}.signupfooter{margin-top:12px;display:flex;justify-content:space-between;align-items:center}.signupfooter a{cursor:pointer}.error{text-align:center}.logowrapper{margin:0 auto;display:block;text-align:center}"]}]}],ne.ctorParameters=function(){return[{type:K.FormBuilder},{type:Y.HttpClient},{type:Z.Router},{type:ee},{type:$.CookieService}]},ne.propDecorators={formDirective:[{type:W.ViewChild,args:[K.FormGroupDirective]}],fromTitle:[{type:W.Input}],logo:[{type:W.Input}],fullUrl:[{type:W.Input}],endpoint:[{type:W.Input}],signUpRouteingUrl:[{type:W.Input}],forgetRouteingUrl:[{type:W.Input}],routerStatus:[{type:W.Input}]},ne);function ne(e,r,t,n,o){this.fb=e,this.http=r,this.router=t,this.apiService=n,this.cookieService=o,this.message="",this.fromTitleValue="",this.serverURL="",this.signUpRouteingUrlValue="",this.forgetRouteingUrlValue="",this.routerStatusValue="",this.logoValue="",this.project_name="",this.loginForm=this.fb.group({email:["",K.Validators.compose([K.Validators.required,K.Validators.pattern(/^\s*[\w\-\+_]+(\.[\w\-\+_]+)*\@[\w\-\+_]+\.[\w\-\+_]+(\.[\w\-\+_]+)*\s*$/)])],password:["",K.Validators.required]})}var oe=(ae.decorators=[{type:W.NgModule,args:[{exports:[r.A11yModule,s.CdkStepperModule,l.CdkTableModule,u.CdkTreeModule,t.DragDropModule,p.MatAutocompleteModule,d.MatBadgeModule,m.MatBottomSheetModule,c.MatButtonModule,g.MatButtonToggleModule,f.MatCardModule,h.MatCheckboxModule,b.MatChipsModule,v.MatStepperModule,y.MatDatepickerModule,U.MatDialogModule,w.MatDividerModule,F.MatExpansionModule,S.MatGridListModule,V.MatIconModule,k.MatInputModule,M.MatListModule,x.MatMenuModule,P.MatNativeDateModule,I.MatPaginatorModule,E.MatProgressBarModule,j.MatProgressSpinnerModule,C.MatRadioModule,P.MatRippleModule,q.MatSelectModule,T.MatSidenavModule,N.MatSliderModule,O.MatSlideToggleModule,_.MatSnackBarModule,R.MatSortModule,D.MatTableModule,H.MatTabsModule,A.MatToolbarModule,L.MatTooltipModule,B.MatTreeModule,a.PortalModule,i.ScrollingModule]}]}],ae);function ae(){}var ie=(Object.defineProperty(se.prototype,"formTitle",{set:function(e){this.formTitleValue=e||"<no name set>",this.formTitleValue=e},enumerable:!0,configurable:!0}),Object.defineProperty(se.prototype,"serverUrl",{set:function(e){this.serverUrlValue=e||"<no name set>",this.serverUrlValue=e},enumerable:!0,configurable:!0}),Object.defineProperty(se.prototype,"logo",{set:function(e){this.logoValue=e},enumerable:!0,configurable:!0}),Object.defineProperty(se.prototype,"addEndpoint",{set:function(e){this.addEndpointValue=e,console.log(this.addEndpointValue)},enumerable:!0,configurable:!0}),Object.defineProperty(se.prototype,"forgetRouteingUrl",{set:function(e){this.forgetRouteingUrlValue=e||"<no name set>",this.forgetRouteingUrlValue=e},enumerable:!0,configurable:!0}),Object.defineProperty(se.prototype,"loginRouteingUrl",{set:function(e){this.loginRouteingUrlValue=e||"<no name set>",this.loginRouteingUrlValue=e},enumerable:!0,configurable:!0}),se.prototype.ngOnInit=function(){var e=this;this.apiService.clearServerUrl(),setTimeout(function(){e.apiService.setServerUrl(e.serverUrlValue)},50),this.apiService.clearaddEndpoint(),setTimeout(function(){e.apiService.setaddEndpoint(e.addEndpointValue.endpoint)},50)},se.prototype.signUpFormSubmit=function(){var t=this;for(var e in this.signUpForm.controls)this.signUpForm.controls[e].markAsTouched();if(this.signUpForm.valid){null!=this.signUpForm.value.confirmpassword&&delete this.signUpForm.value.confirmpassword;var r={data:this.signUpForm.value,source:this.addEndpointValue.source};console.log(r),this.apiService.addData(r).subscribe(function(e){var r;r=e,console.log(r),"success"==r.status?(t.openDialog(),setTimeout(function(){t.dialog.closeAll()},3e3),t.router.navigateByUrl("/login"),t.formDirective.resetForm()):t.message=r.msg})}},se.prototype.openDialog=function(){var r=this;this.dialog.open(le,{width:"250px",data:{name:"this.name",animal:this.animal}}).afterClosed().subscribe(function(e){r.animal=e})},se.prototype.forgetpassword=function(){this.router.navigateByUrl("/"+this.forgetRouteingUrlValue)},se.prototype.login=function(){this.router.navigateByUrl("/"+this.loginRouteingUrlValue)},se.prototype.inputUntouched=function(e){this.signUpForm.controls[e].markAsUntouched()},se.decorators=[{type:W.Component,args:[{selector:"lib-sign-up",template:'<div class="as_formdiv">\r\n<div class="main-div">\r\n\r\n  <mat-card class="from">\r\n      <span class="logowrapper" *ngIf="logoValue != \'\'" >\r\n          <img  [src]="logoValue">\r\n      </span>\r\n\r\n    <h2 *ngIf="formTitleValue != \'\'"> {{formTitleValue}}</h2>\r\n\r\n\r\n    <form class="example-container" [formGroup]="signUpForm"  (ngSubmit)="signUpFormSubmit()" novalidate>\r\n\r\n\r\n      <mat-error class="error" *ngIf="message != \'\'">{{message}}</mat-error>\r\n      <mat-form-field>\r\n        <input matInput type="text" placeholder="First Name" formControlName="firstname" (blur)="inputUntouched(\'firstname\')">\r\n        <mat-error\r\n          *ngIf="!signUpForm.controls[\'firstname\'].valid && signUpForm.controls[\'firstname\'].errors.required && signUpForm.controls[\'firstname\'].touched">\r\n          First Name field can not be blank</mat-error>\r\n      </mat-form-field>\r\n\r\n\r\n      <mat-form-field>\r\n        <input matInput type="text" placeholder="Last Name" formControlName="lastname" (blur)="inputUntouched(\'lastname\')">\r\n        <mat-error\r\n          *ngIf="!signUpForm.controls[\'lastname\'].valid && signUpForm.controls[\'lastname\'].errors.required && signUpForm.controls[\'lastname\'].touched">\r\n          Last Name field can not be blank</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput type="text" placeholder="Email" formControlName="email" (blur)="inputUntouched(\'email\')">\r\n        <mat-error\r\n          *ngIf="!signUpForm.controls[\'email\'].valid && signUpForm.controls[\'email\'].errors.required && signUpForm.controls[\'email\'].touched">\r\n          Email field can not be blank</mat-error>\r\n        <mat-error *ngIf="!signUpForm.controls[\'email\'].valid && !signUpForm.controls[\'email\'].errors.required">Email is\r\n          not valid</mat-error>\r\n      </mat-form-field>\r\n\r\n\r\n      \x3c!-- added by sourav --\x3e\r\n      <mat-form-field>\r\n        <input matInput type="text" placeholder="Phone Number" formControlName="phone" (blur)="inputUntouched(\'phone\')">\r\n        <mat-error\r\n          *ngIf="!signUpForm.controls[\'phone\'].valid && signUpForm.controls[\'phone\'].errors.required && signUpForm.controls[\'phone\'].touched">\r\n          Phone Number field can not be blank</mat-error>\r\n      </mat-form-field>\r\n\r\n\r\n   \x3c!-- added by sourav --\x3e\r\n\r\n      <mat-form-field>\r\n        <input matInput placeholder="Password" type="password" formControlName="password" (blur)="inputUntouched(\'password\')">\r\n        <mat-error\r\n          *ngIf="!signUpForm.controls[\'password\'].valid && signUpForm.controls[\'password\'].errors.required && signUpForm.controls[\'password\'].touched">\r\n          Password field can not be blank</mat-error>\r\n      </mat-form-field>\r\n      \x3c!-- added by sourav --\x3e\r\n      <mat-form-field>\r\n        <input matInput placeholder="Confirm Password" type="password" formControlName="confirmpassword" (blur)="inputUntouched(\'confirmpassword\')">\r\n        <mat-error\r\n          *ngIf="!signUpForm.controls[\'confirmpassword\'].valid && signUpForm.controls[\'confirmpassword\'].errors.required && signUpForm.controls[\'confirmpassword\'].touched">\r\n          Confirm Password field can not be blank</mat-error>\r\n          <mat-error *ngIf="signUpForm.hasError(\'mismatchedPasswords\')">Passwords must match</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput placeholder="Zip Code" type="text" formControlName="zip" (blur)="inputUntouched(\'zip\')">\r\n        <mat-error\r\n          *ngIf="!signUpForm.controls[\'zip\'].valid && signUpForm.controls[\'zip\'].errors.required && signUpForm.controls[\'zip\'].touched">\r\n          Zip field can not be blank</mat-error>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput placeholder="City" type="text" formControlName="city" (blur)="inputUntouched(\'city\')">\r\n        <mat-error\r\n          *ngIf="!signUpForm.controls[\'city\'].valid && signUpForm.controls[\'city\'].errors.required && signUpForm.controls[\'city\'].touched">\r\n          City field can not be blank</mat-error>\r\n      </mat-form-field>\r\n\r\n \r\n      <mat-form-field>\r\n      <mat-label>State</mat-label>\r\n      <mat-select formControlName="state">\r\n        <mat-option *ngFor="let state of state_usss" [value]="state.abbreviation">\r\n          {{state.name}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput placeholder="Company name" type="text" formControlName="companyname">\r\n      \r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput placeholder="Designation in company" type="text" formControlName="designation">\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput placeholder="Company website" type="text" formControlName="companywebsite">\r\n      </mat-form-field>\r\n\r\n\r\n      \x3c!-- added by sourav --\x3e\r\n\r\n      <button mat-raised-button color="primary">Sign Up</button>\r\n      <span class="signupfooter">\r\n        <a (click)="forgetpassword()">Forget Password</a>\r\n        <a (click)="login()">Login</a>\r\n      </span>\r\n    </form>\r\n  </mat-card>\r\n</div></div>',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.from{width:30%;margin:0 auto}.from h2{text-align:center;background-color:#00f;color:#fff;padding:15px}.from a{padding-right:30px}.main-div{min-height:100vh;display:flex;justify-content:center;align-items:center}.signupfooter{margin-top:12px;display:flex;justify-content:space-between;align-items:center}.signupfooter a{cursor:pointer}.error{text-align:center}.logowrapper{margin:0 auto;display:block;text-align:center}"]}]}],se.ctorParameters=function(){return[{type:K.FormBuilder},{type:Y.HttpClient},{type:Z.Router},{type:z.MatDialog},{type:ee}]},se.propDecorators={formDirective:[{type:W.ViewChild,args:[K.FormGroupDirective]}],formTitle:[{type:W.Input}],serverUrl:[{type:W.Input}],logo:[{type:W.Input}],addEndpoint:[{type:W.Input}],forgetRouteingUrl:[{type:W.Input}],loginRouteingUrl:[{type:W.Input}]},se);function se(e,r,t,n,o){this.fb=e,this.http=r,this.router=t,this.dialog=n,this.apiService=o,this.message="",this.state_usss=[{name:"Alabama",abbreviation:"AL"},{name:"Alaska",abbreviation:"AK"},{name:"American Samoa",abbreviation:"AS"},{name:"Arizona",abbreviation:"AZ"},{name:"Arkansas",abbreviation:"AR"},{name:"California",abbreviation:"CA"},{name:"Colorado",abbreviation:"CO"},{name:"Connecticut",abbreviation:"CT"},{name:"Delaware",abbreviation:"DE"},{name:"District Of Columbia",abbreviation:"DC"},{name:"Federated States Of Micronesia",abbreviation:"FM"},{name:"Florida",abbreviation:"FL"},{name:"Georgia",abbreviation:"GA"},{name:"Guam",abbreviation:"GU"},{name:"Hawaii",abbreviation:"HI"},{name:"Idaho",abbreviation:"ID"},{name:"Illinois",abbreviation:"IL"},{name:"Indiana",abbreviation:"IN"},{name:"Iowa",abbreviation:"IA"},{name:"Kansas",abbreviation:"KS"},{name:"Kentucky",abbreviation:"KY"},{name:"Louisiana",abbreviation:"LA"},{name:"Maine",abbreviation:"ME"},{name:"Marshall Islands",abbreviation:"MH"},{name:"Maryland",abbreviation:"MD"},{name:"Massachusetts",abbreviation:"MA"},{name:"Michigan",abbreviation:"MI"},{name:"Minnesota",abbreviation:"MN"},{name:"Mississippi",abbreviation:"MS"},{name:"Missouri",abbreviation:"MO"},{name:"Montana",abbreviation:"MT"},{name:"Nebraska",abbreviation:"NE"},{name:"Nevada",abbreviation:"NV"},{name:"New Hampshire",abbreviation:"NH"},{name:"New Jersey",abbreviation:"NJ"},{name:"New Mexico",abbreviation:"NM"},{name:"New York",abbreviation:"NY"},{name:"North Carolina",abbreviation:"NC"},{name:"North Dakota",abbreviation:"ND"},{name:"Northern Mariana Islands",abbreviation:"MP"},{name:"Ohio",abbreviation:"OH"},{name:"Oklahoma",abbreviation:"OK"},{name:"Oregon",abbreviation:"OR"},{name:"Palau",abbreviation:"PW"},{name:"Pennsylvania",abbreviation:"PA"},{name:"Puerto Rico",abbreviation:"PR"},{name:"Rhode Island",abbreviation:"RI"},{name:"South Carolina",abbreviation:"SC"},{name:"South Dakota",abbreviation:"SD"},{name:"Tennessee",abbreviation:"TN"},{name:"Texas",abbreviation:"TX"},{name:"Utah",abbreviation:"UT"},{name:"Vermont",abbreviation:"VT"},{name:"Virgin Islands",abbreviation:"VI"},{name:"Virginia",abbreviation:"VA"},{name:"Washington",abbreviation:"WA"},{name:"West Virginia",abbreviation:"WV"},{name:"Wisconsin",abbreviation:"WI"},{name:"Wyoming",abbreviation:"WY"}],this.formTitleValue="",this.serverUrlValue="",this.forgetRouteingUrlValue="",this.loginRouteingUrlValue="",this.addEndpointValue="",this.logoValue="",this.signUpForm=this.fb.group({email:["",K.Validators.compose([K.Validators.required,K.Validators.pattern(/^\s*[\w\-\+_]+(\.[\w\-\+_]+)*\@[\w\-\+_]+\.[\w\-\+_]+(\.[\w\-\+_]+)*\s*$/)])],firstname:["",K.Validators.required],lastname:["",K.Validators.required],phone:["",K.Validators.required],password:["",K.Validators.required],confirmpassword:[null,K.Validators.required],zip:[null,K.Validators.required],city:[null,K.Validators.required],state:[null,K.Validators.required],companyname:[null],designation:[null],companywebsite:[null]},{validator:function a(n,o){return function(e){var r=e.controls[n],t=e.controls[o];if(r.value!==t.value)return{mismatchedPasswords:!0}}}("password","confirmpassword")})}var le=(ue.prototype.onNoClick=function(){this.dialogRef.close()},ue.decorators=[{type:W.Component,args:[{selector:"commonModal",template:'<h1 mat-dialog-title>Thanks!</h1>\r\n<div mat-dialog-actions>\r\n  <p>Your account has been successfully created</p>\r\n  \x3c!-- <button mat-button (click)="onNoClick()">No Thanks</button>\r\n  <button mat-button  cdkFocusInitial>Ok</button> --\x3e\r\n</div>'}]}],ue.ctorParameters=function(){return[{type:z.MatDialogRef},{type:undefined,decorators:[{type:W.Inject,args:[z.MAT_DIALOG_DATA]}]}]},ue);function ue(e,r){this.dialogRef=e,this.data=r}var pe=(Object.defineProperty(de.prototype,"domanUrl",{set:function(e){this.domanUrlValue=e||"<no name set>",this.domanUrlValue=e,console.log(this.domanUrlValue)},enumerable:!0,configurable:!0}),Object.defineProperty(de.prototype,"formTitle",{set:function(e){this.formTitleValue=e||"<no name set>",this.formTitleValue=e},enumerable:!0,configurable:!0}),Object.defineProperty(de.prototype,"serverUrl",{set:function(e){this.serverUrlValue=e||"<no name set>",this.serverUrlValue=e},enumerable:!0,configurable:!0}),Object.defineProperty(de.prototype,"logo",{set:function(e){this.logoValue=e},enumerable:!0,configurable:!0}),Object.defineProperty(de.prototype,"addEndpoint",{set:function(e){this.addEndpointValue=e},enumerable:!0,configurable:!0}),Object.defineProperty(de.prototype,"signUpRouteingUrl",{set:function(e){this.signUpRouteingUrlValue=e||"<no name set>",this.signUpRouteingUrlValue=e},enumerable:!0,configurable:!0}),de.prototype.ngOnInit=function(){var e=this;this.apiService.clearServerUrl(),setTimeout(function(){e.apiService.setServerUrl(e.serverUrlValue)},50),this.apiService.clearaddEndpoint(),setTimeout(function(){e.apiService.setaddEndpoint(e.addEndpointValue.endpoint)},50)},de.prototype.forgetPasswordSubmit=function(){var e,t=this;for(e in this.forgetPasswordForm.controls)this.forgetPasswordForm.controls[e].markAsTouched();if(this.forgetPasswordForm.valid){this.serverUrlValue;var r=this.forgetPasswordForm.value;r.domanUrl=this.domanUrlValue,this.apiService.forgetPassword(r).subscribe(function(e){var r;console.log(e),"success"==(r=e).status?t.formDirective.resetForm():t.message=r.msg})}},de.prototype.signup=function(){this.router.navigateByUrl("/"+this.signUpRouteingUrlValue)},de.prototype.inputUntouched=function(e){this.forgetPasswordForm.controls[e].markAsUntouched()},de.decorators=[{type:W.Component,args:[{selector:"lib-forget-password",template:'<div class="main-div">\r\n\r\n  <mat-card class="from">\r\n      <span class="logowrapper" *ngIf="logoValue != \'\'" >\r\n          <img  [src]="logoValue">\r\n      </span>\r\n\r\n    <h2 *ngIf="formTitleValue != \'\'"> {{formTitleValue}}</h2>\r\n\r\n\r\n    <form class="example-container" [formGroup]="forgetPasswordForm" (ngSubmit)="forgetPasswordSubmit()" novalidate>\r\n<mat-error class="error" *ngIf="message !=\'\'">{{message}}</mat-error>\r\n\r\n      <mat-form-field>\r\n        <input matInput type="text" placeholder="Email"  formControlName="email" (blur)="inputUntouched(\'email\')">\r\n        <mat-error\r\n          *ngIf="!forgetPasswordForm.controls[\'email\'].valid && forgetPasswordForm.controls[\'email\'].errors.required && forgetPasswordForm.controls[\'email\'].touched">\r\n          Email field can not be blank</mat-error>\r\n        <mat-error\r\n          *ngIf="!forgetPasswordForm.controls[\'email\'].valid && !forgetPasswordForm.controls[\'email\'].errors.required">\r\n          Email is not valid</mat-error>\r\n      </mat-form-field>\r\n\r\n      <button mat-raised-button color="primary">Forget Password</button>\r\n      <span class="signupfooter">\r\n        <a (click)="signup()">Sign Up</a>\r\n      </span>\r\n    </form>\r\n  </mat-card>\r\n</div>',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.from{width:30%;margin:0 auto}.from h2{text-align:center;background-color:#00f;color:#fff;padding:15px}.from a{padding-right:30px}.main-div{height:100vh;display:flex;justify-content:center;align-items:center}.signupfooter{margin-top:12px;display:flex;justify-content:space-between;align-items:center}.signupfooter a{cursor:pointer}.error{text-align:center}.logowrapper{margin:0 auto;display:block;text-align:center}"]}]}],de.ctorParameters=function(){return[{type:K.FormBuilder},{type:Y.HttpClient},{type:Z.Router},{type:ee}]},de.propDecorators={formDirective:[{type:W.ViewChild,args:[K.FormGroupDirective]}],domanUrl:[{type:W.Input}],formTitle:[{type:W.Input}],serverUrl:[{type:W.Input}],logo:[{type:W.Input}],addEndpoint:[{type:W.Input}],signUpRouteingUrl:[{type:W.Input}]},de);function de(e,r,t,n){this.fb=e,this.http=r,this.router=t,this.apiService=n,this.message="",this.formTitleValue="",this.serverUrlValue="",this.signUpRouteingUrlValue="",this.domanUrlValue="",this.addEndpointValue="",this.logoValue="",this.forgetPasswordForm=this.fb.group({email:["",K.Validators.compose([K.Validators.required,K.Validators.pattern(/^\s*[\w\-\+_]+(\.[\w\-\+_]+)*\@[\w\-\+_]+\.[\w\-\+_]+(\.[\w\-\+_]+)*\s*$/)])]})}var me=(Object.defineProperty(ce.prototype,"fromTitleName",{set:function(e){this.fromTitleNameValue=e||"<no name set>",this.fromTitleNameValue=e,console.log(this.fromTitleNameValue)},enumerable:!0,configurable:!0}),Object.defineProperty(ce.prototype,"serverUrl",{set:function(e){this.serverUrlValue=e||"<no name set>",this.serverUrlValue=e,console.log(this.serverUrlValue)},enumerable:!0,configurable:!0}),Object.defineProperty(ce.prototype,"addEndpoint",{set:function(e){this.addEndpointValue=e},enumerable:!0,configurable:!0}),Object.defineProperty(ce.prototype,"logo",{set:function(e){this.logoValue=e},enumerable:!0,configurable:!0}),ce.prototype.ngOnInit=function(){var e=this;this.apiService.clearServerUrl(),setTimeout(function(){e.apiService.setServerUrl(e.serverUrlValue)},50),this.apiService.clearaddEndpoint(),setTimeout(function(){e.apiService.setaddEndpoint(e.addEndpointValue.endpoint)},50)},ce.prototype.machpassword=function(n,o){return function(e){var r=e.controls[n],t=e.controls[o];return r.value!==t.value?t.setErrors({notEquivalent:!0}):t.setErrors(null)}},ce.prototype.resetPasswordSubmit=function(){var e,t=this;for(e in this.resetPasswordForm.controls)this.resetPasswordForm.controls[e].markAsTouched();if(this.resetPasswordForm.valid){var r={data:{password:this.resetPasswordForm.value.password,id:this.cookieService.get("user_id")},source:this.addEndpointValue.source};this.apiService.addData(r).subscribe(function(e){var r;r=e,console.log(r),"success"==r.status?t.formDirective.resetForm():t.message=r.msg})}},ce.prototype.inputUntouched=function(e){this.resetPasswordForm.controls[e].markAsUntouched()},ce.decorators=[{type:W.Component,args:[{selector:"lib-reset-password",template:'<div class="main-div">\r\n\r\n  <mat-card class="from">\r\n      <span class="logowrapper" *ngIf="logoValue != \'\'" >\r\n          <img  [src]="logoValue">\r\n      </span>\r\n\r\n    <h2 *ngIf="fromTitleNameValue != \'\'"> {{fromTitleNameValue}}</h2>\r\n\r\n\r\n    <form class="example-container" [formGroup]="resetPasswordForm" (ngSubmit)="resetPasswordSubmit()" novalidate>\r\n<mat-error class="error" *ngIf="message !=\'\'">{{message}}</mat-error>\r\n\r\n      <mat-form-field>\r\n        <input matInput placeholder="Password" type="password" formControlName="password" (blur)="inputUntouched(\'password\')">\r\n        <mat-error\r\n          *ngIf="!resetPasswordForm.controls[\'password\'].valid && resetPasswordForm.controls[\'password\'].errors.required && resetPasswordForm.controls[\'password\'].touched">\r\n          Password field can not be blank</mat-error>\r\n          \x3c!-- <mat-error  *ngIf="!resetPasswordForm.controls[\'password\'].errors.required  && resetPasswordForm.controls[\'password\'].touched">Minimum length for password is 4!</mat-error> --\x3e\r\n      </mat-form-field>\r\n\r\n      <mat-form-field>\r\n        <input matInput placeholder="Confirm Password" type="password"  formControlName="confirmPassword" (blur)="inputUntouched(\'confirmPassword\')">\r\n        <mat-error\r\n          *ngIf="!resetPasswordForm.controls[\'confirmPassword\'].valid && resetPasswordForm.controls[\'confirmPassword\'].errors.required && resetPasswordForm.controls[\'confirmPassword\'].touched">\r\n          Confirm Password field can not be blank</mat-error>\r\n        \x3c!-- <mat-error *ngIf="f.confirmPassword.errors.mustMatch">Confirm Password is not valid</mat-error> --\x3e\r\n        <mat-error *ngIf="!resetPasswordForm.controls[\'confirmPassword\'].valid && resetPasswordForm.controls[\'confirmPassword\'].touched">Password does not match </mat-error>\r\n      </mat-form-field>\r\n\r\n      <button mat-raised-button color="primary">Reset Password</button>\r\n\r\n    </form>\r\n  </mat-card>\r\n</div>\r\n\r\n\x3c!-- <button (click)="openSnackBar(\'succes\', \'ok\')"> ok</button> --\x3e',styles:[".example-container{display:flex;flex-direction:column}.example-container>*{width:100%}.from{width:30%;margin:0 auto}.from h2{text-align:center;background-color:#00f;color:#fff;padding:15px}.from a{padding-right:30px}.main-div{height:100vh;display:flex;justify-content:center;align-items:center}.signupfooter{margin-top:12px;display:flex;justify-content:space-between;align-items:center}.signupfooter a{cursor:pointer}.error{text-align:center}.logowrapper{margin:0 auto;display:block;text-align:center}"]}]}],ce.ctorParameters=function(){return[{type:K.FormBuilder},{type:Y.HttpClient},{type:Z.Router},{type:Z.ActivatedRoute},{type:ee},{type:$.CookieService}]},ce.propDecorators={formDirective:[{type:W.ViewChild,args:[K.FormGroupDirective]}],fromTitleName:[{type:W.Input}],serverUrl:[{type:W.Input}],addEndpoint:[{type:W.Input}],logo:[{type:W.Input}]},ce);function ce(e,r,t,n,o,a){var i=this;this.fb=e,this.http=r,this.router=t,this.route=n,this.apiService=o,this.cookieService=a,this.fromTitleNameValue="",this.serverUrlValue="",this.message="",this.addEndpointValue="",this.logoValue="",this.route.params.subscribe(function(e){i.accesscode=e.token,console.log(i.accesscode)}),this.resetPasswordForm=this.fb.group({password:["",K.Validators.required],confirmPassword:["",K.Validators.required]},{validator:this.machpassword("password","confirmPassword")})}var ge=(fe.decorators=[{type:W.NgModule,args:[{declarations:[te,ie,pe,me,le],imports:[oe,K.FormsModule,K.ReactiveFormsModule,G.BrowserAnimationsModule,J.CommonModule,Y.HttpClientModule],exports:[te,ie,pe,me],providers:[ee],bootstrap:[],schemas:[W.CUSTOM_ELEMENTS_SCHEMA],entryComponents:[le]}]}],fe);function fe(){}e.LoginService=X,e.LoginComponent=te,e.LoginModule=ge,e.ɵa=ee,e.ɵd=pe,e.ɵf=oe,e.ɵe=me,e.ɵb=ie,e.ɵc=le,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=login.umd.min.js.map