{"version":3,"sources":["ng://login/lib/login.service.ts","ng://login/lib/api.service.ts","ng://login/lib/login.component.ts","ng://login/lib/material-module.ts","ng://login/lib/sign-up/sign-up.component.ts","ng://login/lib/_helpers/must-match.validator.ts","ng://login/lib/forget-password/forget-password.component.ts","ng://login/lib/reset-password/reset-password.component.ts","ng://login/lib/login.module.ts"],"names":["LoginService","Injectable","args","providedIn","ApiService","prototype","setServerUrl","value","this","subjectForServerUrl","next","clearServerUrl","getServerUrl","asObservable","setaddEndpoint","subjectForaddEndpointUrl","clearaddEndpoint","getaddEndpoint","setuploadEndpont","subjectForuploadEndpointUrl","clearuploadEndpoint","getuploadEndpoint","setupdateEndpoint","subjectForupdateEndpointUrl","clearupdateEndpoint","getupdateEndpoint","setdeletesingleEndpoint","subjectFordeletesingleEndpointUrl","cleardeletesingleEndpoint","getdeletesingleEndpoint","setupdatestatus_singleEndpoint","subjectForupdatestatusSingleEndpointUrl","clearupdatestatus_singleEndpoint","getupdatestatus_singleEndpoint","setgetdataEndpoint","subjectForGetdataEndpointUrl","cleargetdataEndpoint","getdataEndpoint","isTokenExpired","addData","requestdata","console","log","httpOptions","headers","HttpHeaders","Content-Type","Authorization","accesstoken","serverUrl","_http","post","addendpointUrl","JSON","stringify","pipe","map","res","uploadFile","access-token","uploadEndpointUrl","UpdateData","updateendpointUrl","getData","getdata_endpointUrl","addLogin","forgetPassword","deleteSingleData","deletesingle_endpointUrl","deleteMultipleData","UpdateStatusForSingleData","updatestatus_single_endpointUrl","UpdateStatusForMultipleData","CustomRequest","endpoint","HttpClient","CookieService","_authHttp","cookieService","_this","progress","uploaderror","get","fileservername","Subject","subscriptionServer","subscribe","message","result","subscriptionaddEndpoint","subscriptionuploadEndpoint","subscriptionupdateEndpoint","subscriptiondeletesingleEndpoint","subscriptionupdatestatusSingleEndpoint","subscriptionGetdataEndpoint","LoginComponent","Object","defineProperty","fromTitleVal","fromTitleValue","logoVal","logoValue","buttonNameVal","buttonNameValue","fullUrlVal","serverURL","endpointVal","endpointValue","v","cookieSetValue","routeingUrlval","signUpRouteingUrlValue","forgetRouteingUrlValue","routerStatusval","routerStatusValue","ngOnInit","apiService","setTimeout","loginFormSubmit","x","loginForm","controls","markAsTouched","valid","data","response","status","key","set","item","token","type","router","navigateByUrl","routerNav","formDirective","resetForm","msg","inputUntouched","val","markAsUntouched","forgetpassword","path","signup","customFunction","link","Component","selector","template","FormBuilder","Router","ViewChild","FormGroupDirective","Input","fb","http","project_name","group","email","Validators","compose","required","pattern","password","DemoMaterialModule","NgModule","exports","A11yModule","CdkStepperModule","CdkTableModule","CdkTreeModule","DragDropModule","MatAutocompleteModule","MatBadgeModule","MatBottomSheetModule","MatButtonModule","MatButtonToggleModule","MatCardModule","MatCheckboxModule","MatChipsModule","MatStepperModule","MatDatepickerModule","MatDialogModule","MatDividerModule","MatExpansionModule","MatGridListModule","MatIconModule","MatInputModule","MatListModule","MatMenuModule","MatNativeDateModule","MatPaginatorModule","MatProgressBarModule","MatProgressSpinnerModule","MatRadioModule","MatRippleModule","MatSelectModule","MatSidenavModule","MatSliderModule","MatSlideToggleModule","MatSnackBarModule","MatSortModule","MatTableModule","MatTabsModule","MatToolbarModule","MatTooltipModule","MatTreeModule","PortalModule","ScrollingModule","SignUpComponent","typeval","typevalue","formTitleVal","formTitleValue","serverUrlVal","serverUrlValue","addEndpointVal","addEndpointValue","loginRouteingUrlValue","signUpFormSubmit","signUpForm","confirmpassword","allData","source","openDialog","dialog","closeAll","open","commonModalComponent","width","name","animal","afterClosed","login","MatDialog","state_usss","abbreviation","firstname","lastname","phone","zip","city","state","companyname","designation","companywebsite","validator","matchingPasswords","passwordKey","confirmPasswordKey","confirmPassword","mismatchedPasswords","onNoClick","dialogRef","close","MatDialogRef","Inject","MAT_DIALOG_DATA","ForgetPasswordComponent","domanUrlVal","domanUrlValue","addEndpointval","forgetPasswordSubmit","forgetPasswordForm","domanUrl","ResetPasswordComponent","fromTitleNameVal","fromTitleNameValue","machpassword","passwordkye","confirmpasswordkye","passwordInput","confirmpasswordInput","setErrors","notEquivalent","resetPasswordSubmit","resetPasswordForm","id","ActivatedRoute","route","params","accesscode","LoginModule","declarations","imports","FormsModule","ReactiveFormsModule","BrowserAnimationsModule","CommonModule","HttpClientModule","providers","bootstrap","schemas","CUSTOM_ELEMENTS_SCHEMA","entryComponents"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginService {\r\n\r\n  constructor() { }\r\n}\r\n","import { ElementRef, EventEmitter, Injectable, Input, ViewChild } from '@angular/core';\r\nimport { switchMap, map, takeWhile } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\n// for setting observables to get serverurl and endpointurl from app\r\nimport { Observable, Subject, Subscription } from 'rxjs';\r\nimport{CookieService} from 'ngx-cookie-service';\r\n\r\n\r\n@Injectable({   \r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  public lengthis;\r\n  public percentageis;\r\n  public inprogress;\r\n  public progress: any = [];\r\n  public uploadtype;\r\n  public uploaderror: any = '';\r\n  public accesstoken:any=this.cookieService.get('jwttoken');\r\n  // public accesstoken:any='eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmb28iOiJiYXIiLCJleHAiOjE1NjgzNTgyMTAsImlhdCI6MTU2ODI3MTgxMH0.2ltvxVKwfX1uwMOwQ2Zzgp1K2jiaCDj051Wyho0Iw-Q';\r\n  fileservername: any = [];\r\n  serverUrl: any;\r\n  addendpointUrl: any;\r\n  uploadEndpointUrl:any; //souresh\r\n  updateendpointUrl: any;\r\n  deletesingle_endpointUrl: any;\r\n  updatestatus_single_endpointUrl: any;\r\n  deletemultiple_endpointUrl: any;\r\n  updatestatus_multiple_endpointUrl: any;\r\n  getdata_endpointUrl: any;\r\n  private subjectForServerUrl = new Subject<any>();\r\n  private subjectForaddEndpointUrl = new Subject<any>();\r\n  private subjectForuploadEndpointUrl = new Subject<any>();  //added by souresh\r\n  private subjectForupdateEndpointUrl = new Subject<any>();\r\n  private subjectFordeletesingleEndpointUrl = new Subject<any>();\r\n  private subjectForupdatestatusSingleEndpointUrl = new Subject<any>();\r\n  private subjectForGetdataEndpointUrl = new Subject<any>();\r\n  public subscriptionServer: Subscription;\r\n  public subscriptionaddEndpoint: Subscription;\r\n  public subscriptionuploadEndpoint: Subscription;   //added by souresh\r\n  public subscriptionupdateEndpoint: Subscription;\r\n  public subscriptiondeletesingleEndpoint: Subscription;\r\n  public subscriptionupdatestatusSingleEndpoint: Subscription;\r\n  public subscriptionGetdataEndpoint: Subscription;\r\n\r\n  constructor(private _http: HttpClient,\r\n    private _authHttp: HttpClient,private cookieService :CookieService) {\r\n    this.subscriptionServer = this.getServerUrl().subscribe(message => {\r\n     let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.serverUrl = result;\r\n      } else {\r\n        this.serverUrl = null;\r\n      }\r\n    });\r\n    this.subscriptionaddEndpoint = this.getaddEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.addendpointUrl = result;\r\n      } else {\r\n        this.addendpointUrl = null;\r\n      }\r\n    });\r\n    /*********added by souresh***********/\r\n    this.subscriptionuploadEndpoint=this.getuploadEndpoint().subscribe(message=>{\r\n      let result:any;\r\n      result=message;\r\n        if(result!=null){\r\n          this.uploadEndpointUrl = result;\r\n        } else{\r\n          this.uploadEndpointUrl = null;\r\n        }\r\n    })\r\n    /************souresh end here**************/\r\n    this.subscriptionupdateEndpoint = this.getupdateEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.updateendpointUrl = result;\r\n      } else {\r\n        this.updateendpointUrl = null;\r\n      }\r\n    });\r\n    this.subscriptiondeletesingleEndpoint = this.getdeletesingleEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.deletesingle_endpointUrl = result;\r\n      } else {\r\n        this.deletesingle_endpointUrl = null;\r\n      }\r\n    });\r\n    this.subscriptionupdatestatusSingleEndpoint = this.getupdatestatus_singleEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.updatestatus_single_endpointUrl = result;\r\n      } else {\r\n        this.updatestatus_single_endpointUrl = null;\r\n      }\r\n    });\r\n    this.subscriptionGetdataEndpoint = this.getdataEndpoint().subscribe(message => {\r\n      let result: any;\r\n      result = message;\r\n      if (result != null) {\r\n        this.getdata_endpointUrl = result;\r\n      } else {\r\n        this.getdata_endpointUrl = null;\r\n      }\r\n    });\r\n\r\n    \r\n  }\r\n\r\n  setServerUrl(value: any) {\r\n    this.subjectForServerUrl.next(value);\r\n  }\r\n  public clearServerUrl() {\r\n    this.subjectForServerUrl.next(null);\r\n  }\r\n  public getServerUrl(): Observable<any> {\r\n    return this.subjectForServerUrl.asObservable();\r\n  }\r\n\r\n  setaddEndpoint(value: any) {\r\n    this.subjectForaddEndpointUrl.next(value);\r\n  }\r\n  public clearaddEndpoint() {\r\n    this.subjectForaddEndpointUrl.next(null);\r\n  }\r\n  public getaddEndpoint(): Observable<any> {\r\n    return this.subjectForaddEndpointUrl.asObservable();\r\n  }\r\n/*****added by souresh******/\r\n  setuploadEndpont(value:any){\r\n    this.subjectForuploadEndpointUrl.next(value);\r\n  }\r\n  public clearuploadEndpoint(){\r\n    this.subjectForuploadEndpointUrl.next(null);\r\n  }\r\n  public getuploadEndpoint(): Observable <any> {\r\n    return this.subjectForuploadEndpointUrl.asObservable();\r\n  }\r\n   /********souresh end here********/\r\n\r\n\r\n  setupdateEndpoint(value: any) {\r\n    this.subjectForupdateEndpointUrl.next(value);\r\n  }\r\n  public clearupdateEndpoint() {\r\n    this.subjectForupdateEndpointUrl.next(null);\r\n  }\r\n  public getupdateEndpoint(): Observable<any> {\r\n    return this.subjectForupdateEndpointUrl.asObservable();\r\n  }\r\n\r\n  setdeletesingleEndpoint(value: any) {\r\n    this.subjectFordeletesingleEndpointUrl.next(value);\r\n  }\r\n  public cleardeletesingleEndpoint() {\r\n    this.subjectFordeletesingleEndpointUrl.next(null);\r\n  }\r\n  public getdeletesingleEndpoint(): Observable<any> {\r\n    return this.subjectFordeletesingleEndpointUrl.asObservable();\r\n  }\r\n\r\n  setupdatestatus_singleEndpoint(value: any) {\r\n    this.subjectForupdatestatusSingleEndpointUrl.next(value);\r\n  }\r\n  public clearupdatestatus_singleEndpoint() {\r\n    this.subjectForupdatestatusSingleEndpointUrl.next(null);\r\n  }\r\n  public getupdatestatus_singleEndpoint(): Observable<any> {\r\n    return this.subjectForupdatestatusSingleEndpointUrl.asObservable();\r\n  }\r\n\r\n  setgetdataEndpoint(value: any) {\r\n    this.subjectForGetdataEndpointUrl.next(value);\r\n  }\r\n  public cleargetdataEndpoint() {\r\n    this.subjectForGetdataEndpointUrl.next(null);\r\n  }\r\n  public getdataEndpoint(): Observable<any> {\r\n    return this.subjectForGetdataEndpointUrl.asObservable();\r\n  }\r\n\r\n\r\n\r\n  isTokenExpired() {\r\n\r\n    // const helper = new JwtHelperService();\r\n    // const decodedToken = helper.decodeToken(localStorage.getItem('id_token'));\r\n    // var isIdTokenExpired = helper.isTokenExpired(localStorage.getItem('id_token'));\r\n    // console.log('refresh_token',localStorage.getItem('refresh_token'))\r\n    // const isRefreshTokenExpired = helper.isTokenExpired(localStorage.getItem('refresh_token'));\r\n    // console.log('id_token isExpired:',isIdTokenExpired)\r\n    // console.log('refresh_token isExpired:',isRefreshTokenExpired)\r\n  }\r\n\r\n  addData(requestdata: any) {\r\n    console.log('in adddata apiservice');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken          //hard code written access-token(temp)\r\n      })\r\n    };\r\n\r\n    console.log('httpoptions',httpOptions,this.serverUrl,requestdata);\r\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n  /*******added by souresh************/\r\n  \r\n  uploadFile(requestdata:any){\r\n    const httpOptions={\r\n        headers: new HttpHeaders({\r\n          'Content-Type':'application/json',\r\n          'access-token':this.accesstoken          //hard code written access-token(temp)\r\n        })\r\n    };\r\n    var result=this._http.post(this.serverUrl + this.uploadEndpointUrl,JSON.stringify(requestdata),httpOptions).pipe(map(res=>res));\r\n    return result;\r\n  }\r\n  /*******souresh end here********/\r\n  UpdateData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'access-token': this.accesstoken          //hard code written access-token(temp)\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.updateendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  getData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'Authorization': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.getdata_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n/*************** Added by himadri start here ***************/ \r\n  addLogin(requestdata: any) {\r\n    console.log('in addLogin apiservice');\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        //'Authorization': this.accesstoken          //hard code written access-token(temp)\r\n      })\r\n    };\r\n\r\n    console.log(this.serverUrl,requestdata);\r\n    var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n  /*************** Added by himadri end here ***************/ \r\n\r\n/*************** Added by himadri start here ***************/ \r\nforgetPassword(requestdata: any) {\r\n  console.log('in forgetPassword apiservice');\r\n  const httpOptions = {\r\n    headers: new HttpHeaders({\r\n      'Content-Type': 'application/json'\r\n      // 'Authorization': this.accesstoken          //hard code written access-token(temp)\r\n    })\r\n  };\r\n\r\n  console.log(this.serverUrl,requestdata);\r\n  var result = this._http.post(this.serverUrl + this.addendpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n  return result;\r\n}\r\n/*************** Added by himadri end here ***************/ \r\n\r\n\r\n  deleteSingleData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'access-token': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  deleteMultipleData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'access-token': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.deletesingle_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  UpdateStatusForSingleData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'access-token': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n  UpdateStatusForMultipleData(requestdata: any) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'access-token': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl + this.updatestatus_single_endpointUrl+'many', JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n  CustomRequest(requestdata: any, endpoint:any ) {\r\n    const httpOptions = {\r\n      headers: new HttpHeaders({\r\n        'Content-Type': 'application/json',\r\n        'access-token': this.accesstoken\r\n      })\r\n    };\r\n    var result = this._http.post(this.serverUrl +endpoint, JSON.stringify(requestdata), httpOptions).pipe(map(res => res));\r\n    return result;\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators, MinLengthValidator, FormGroupDirective } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { ApiService } from './api.service';\r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'lib-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n  public message: any = '';\r\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\r\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\r\n\r\n  public fromTitleValue: any = '';\r\n  public serverURL: any = '';\r\n  public signUpRouteingUrlValue: any = '';\r\n  public forgetRouteingUrlValue: any = '';\r\n  public routerStatusValue: any = '';\r\n  public endpointValue: any;\r\n  public logoValue: any = '';\r\n  public cookieSetValue: any = '';\r\n  public buttonNameValue: any = '';\r\n\r\n  @Input()         // Set the project name\r\n  set fromTitle(fromTitleVal: any) {\r\n    this.fromTitleValue = (fromTitleVal) || '<no name set>';\r\n    this.fromTitleValue = fromTitleVal;\r\n\r\n  }\r\n  @Input()      // set the from logo\r\n\r\nset logo(logoVal : any) {\r\n  this.logoValue = logoVal;\r\n}\r\n@Input()\r\nset buttonName (buttonNameVal :any){\r\n  this.buttonNameValue = (buttonNameVal) || '<no name set>';\r\n  this.buttonNameValue = buttonNameVal\r\n}\r\n\r\n  @Input()        // setting the server url from project\r\n  set fullUrl(fullUrlVal: any) {\r\n    this.serverURL = (fullUrlVal) || '<no name set>';\r\n    this.serverURL = fullUrlVal;\r\n\r\n  }\r\n  @Input()\r\n\r\n  set endpoint(endpointVal: any) {\r\n    this.endpointValue = endpointVal;\r\n  }\r\n\r\n@Input()\r\n\r\npublic set cookieSet(v : any) {\r\n  this.cookieSetValue = v;\r\n  // console.log(this.cookieSetValue.cookie);\r\n  // for (const key in this.cookieSetValue.cookie) {\r\n            \r\n  //   console.log(this.cookieSetValue.cookie[key]);\r\n  // }\r\n\r\n}\r\n\r\n\r\n\r\n  @Input()          // setting the navigate By Sign Up Url from project\r\n  set signUpRouteingUrl(routeingUrlval: any) {\r\n    this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\r\n    this.signUpRouteingUrlValue = routeingUrlval;\r\n    console.log(this.signUpRouteingUrlValue)\r\n  }\r\n\r\n\r\n  @Input()          // setting the navigate By Forget Password Url from project\r\n  set forgetRouteingUrl(routeingUrlval: any) {\r\n    this.forgetRouteingUrlValue = (routeingUrlval) || '<no name set>';\r\n    this.forgetRouteingUrlValue = routeingUrlval;\r\n    console.log(this.forgetRouteingUrlValue)\r\n  }\r\n\r\n  @Input()          // setting the navigate By Forget Password Url from project\r\n  set routerStatus(routerStatusval: any) {\r\n    this.routerStatusValue = (routerStatusval) || '<no name set>';\r\n    this.routerStatusValue = routerStatusval;\r\n    // console.log(this.routerStatusValue);\r\n    // console.log(this.routerStatusValue.data.length);\r\n  }\r\n\r\n\r\n\r\n\r\n  public loginForm: FormGroup;\r\n  public project_name: any = '';\r\n\r\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public apiService: ApiService, public cookieService: CookieService) {\r\n    this.loginForm = this.fb.group({\r\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\r\n      password: ['', Validators.required]\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiService.clearServerUrl();       // Clear the server url\r\n    setTimeout(() => {\r\n      this.apiService.setServerUrl(this.serverURL);       // set the server url \r\n    }, 50);\r\n    // console.log(this.serverURL);\r\n\r\n\r\n    this.apiService.clearaddEndpoint();       // clear the endpoint \r\n    setTimeout(() => {\r\n      this.apiService.setaddEndpoint(this.endpointValue);       // set the endpoint\r\n    }, 50);\r\n    // console.log(this.addEndpointData.endpoint);\r\n\r\n  }\r\n\r\n/********* Login Form Submit start here*********/ \r\n  loginFormSubmit() {\r\n    let x: any;\r\n\r\n\r\n\r\n    // use for validation checking\r\n\r\n    for (x in this.loginForm.controls) {\r\n      this.loginForm.controls[x].markAsTouched();\r\n    }\r\n\r\n    if (this.loginForm.valid) {\r\n      let data: any = this.loginForm.value;\r\n      this.apiService.addLogin(data).subscribe((response) => {\r\n        // console.log(response);\r\n        let result: any = {};\r\n        result = response;\r\n      \r\n\r\n        if (result.status == \"success\") {\r\n        \r\n          this.cookieService.set('user_details', JSON.stringify(result.item[0]));\r\n          this.cookieService.set('jwttoken', result.token);\r\n\r\n          setTimeout(() => {\r\n            // console.log(this.cookieService.getAll());\r\n          }, 1000);\r\n\r\n          // console.log('result')\r\n          // console.log(result.item[0].type)\r\n          for (const key in this.routerStatusValue.data) {\r\n            // console.log(this.routerStatusValue.data[key].type);\r\n\r\n            if (result.item[0].type === this.routerStatusValue.data[key].type) {\r\n              this.router.navigateByUrl('/' + this.routerStatusValue.data[key].routerNav)     // navigate to dashboard url \r\n            }\r\n          }\r\n\r\n\r\n          // this is use for reset the from\r\n          this.formDirective.resetForm();\r\n          this.message = '';\r\n        } else {\r\n          // display error message on html\r\n          this.message = result.msg;\r\n        }\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n\r\n  inputUntouched(val: any) {\r\n    this.loginForm.controls[val].markAsUntouched();\r\n  }\r\n\r\n  // This is use for navigate this component to forget component \r\n  forgetpassword() {\r\n    this.router.navigateByUrl('/' + this.forgetRouteingUrlValue.path);\r\n  }\r\n\r\n  // This is use for navigate this component to sign-Up component \r\n  signup() {\r\n    this.router.navigateByUrl('/' + this.signUpRouteingUrlValue.path);\r\n  }\r\n\r\n  customFunction(link: any) {\r\n    this.router.navigateByUrl('/'+ link);\r\n  }\r\n\r\n}","import {NgModule} from '@angular/core';\r\nimport {A11yModule} from '@angular/cdk/a11y';\r\nimport {DragDropModule} from '@angular/cdk/drag-drop';\r\nimport {PortalModule} from '@angular/cdk/portal';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport {CdkStepperModule} from '@angular/cdk/stepper';\r\nimport {CdkTableModule} from '@angular/cdk/table';\r\nimport {CdkTreeModule} from '@angular/cdk/tree';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\nimport {MatBadgeModule} from '@angular/material/badge';\r\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatCheckboxModule} from '@angular/material/checkbox';\r\nimport {MatChipsModule} from '@angular/material/chips';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatDatepickerModule} from '@angular/material/datepicker';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatGridListModule} from '@angular/material/grid-list';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport {MatMenuModule} from '@angular/material/menu';\r\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\r\nimport {MatPaginatorModule} from '@angular/material/paginator';\r\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\r\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\r\nimport {MatRadioModule} from '@angular/material/radio';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSliderModule} from '@angular/material/slider';\r\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTreeModule} from '@angular/material/tree';\r\n\r\n@NgModule({\r\n  exports: [\r\n    A11yModule,\r\n    CdkStepperModule,\r\n    CdkTableModule,\r\n    CdkTreeModule,\r\n    DragDropModule,\r\n    MatAutocompleteModule,\r\n    MatBadgeModule,\r\n    MatBottomSheetModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatStepperModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule,\r\n    MatTreeModule,\r\n    PortalModule,\r\n    ScrollingModule,\r\n  ]\r\n})\r\nexport class DemoMaterialModule {}\r\n\r\n\r\n/**  Copyright 2019 Google Inc. All Rights Reserved.\r\n Use of this source code is governed by an MIT-style license that\r\n can be found in the LICENSE file at http://angular.io/license */\r\n","import { Component, OnInit, Input, Inject, ViewChild, Optional } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog } from '@angular/material';\r\nimport { ApiService } from '../api.service';\r\nimport { matchingPasswords } from '../_helpers/must-match.validator';\r\n\r\nexport interface DialogData {\r\n  animal: string;\r\n  name: string;\r\n}\r\n@Component({\r\n  selector: 'lib-sign-up',\r\n  templateUrl: './sign-up.component.html',\r\n  styleUrls: ['./sign-up.component.css']\r\n})\r\nexport class SignUpComponent implements OnInit {\r\n  public message: any = '';\r\n  animal: string;\r\n  name: string;\r\n  public typevalue: any;\r\n  public state_usss:any=[\r\n    {\r\n        \"name\": \"Alabama\",\r\n        \"abbreviation\": \"AL\"\r\n    },\r\n    {\r\n        \"name\": \"Alaska\",\r\n        \"abbreviation\": \"AK\"\r\n    },\r\n    {\r\n        \"name\": \"American Samoa\",\r\n        \"abbreviation\": \"AS\"\r\n    },\r\n    {\r\n        \"name\": \"Arizona\",\r\n        \"abbreviation\": \"AZ\"\r\n    },\r\n    {\r\n        \"name\": \"Arkansas\",\r\n        \"abbreviation\": \"AR\"\r\n    },\r\n    {\r\n        \"name\": \"California\",\r\n        \"abbreviation\": \"CA\"\r\n    },\r\n    {\r\n        \"name\": \"Colorado\",\r\n        \"abbreviation\": \"CO\"\r\n    },\r\n    {\r\n        \"name\": \"Connecticut\",\r\n        \"abbreviation\": \"CT\"\r\n    },\r\n    {\r\n        \"name\": \"Delaware\",\r\n        \"abbreviation\": \"DE\"\r\n    },\r\n    {\r\n        \"name\": \"District Of Columbia\",\r\n        \"abbreviation\": \"DC\"\r\n    },\r\n    {\r\n        \"name\": \"Federated States Of Micronesia\",\r\n        \"abbreviation\": \"FM\"\r\n    },\r\n    {\r\n        \"name\": \"Florida\",\r\n        \"abbreviation\": \"FL\"\r\n    },\r\n    {\r\n        \"name\": \"Georgia\",\r\n        \"abbreviation\": \"GA\"\r\n    },\r\n    {\r\n        \"name\": \"Guam\",\r\n        \"abbreviation\": \"GU\"\r\n    },\r\n    {\r\n        \"name\": \"Hawaii\",\r\n        \"abbreviation\": \"HI\"\r\n    },\r\n    {\r\n        \"name\": \"Idaho\",\r\n        \"abbreviation\": \"ID\"\r\n    },\r\n    {\r\n        \"name\": \"Illinois\",\r\n        \"abbreviation\": \"IL\"\r\n    },\r\n    {\r\n        \"name\": \"Indiana\",\r\n        \"abbreviation\": \"IN\"\r\n    },\r\n    {\r\n        \"name\": \"Iowa\",\r\n        \"abbreviation\": \"IA\"\r\n    },\r\n    {\r\n        \"name\": \"Kansas\",\r\n        \"abbreviation\": \"KS\"\r\n    },\r\n    {\r\n        \"name\": \"Kentucky\",\r\n        \"abbreviation\": \"KY\"\r\n    },\r\n    {\r\n        \"name\": \"Louisiana\",\r\n        \"abbreviation\": \"LA\"\r\n    },\r\n    {\r\n        \"name\": \"Maine\",\r\n        \"abbreviation\": \"ME\"\r\n    },\r\n    {\r\n        \"name\": \"Marshall Islands\",\r\n        \"abbreviation\": \"MH\"\r\n    },\r\n    {\r\n        \"name\": \"Maryland\",\r\n        \"abbreviation\": \"MD\"\r\n    },\r\n    {\r\n        \"name\": \"Massachusetts\",\r\n        \"abbreviation\": \"MA\"\r\n    },\r\n    {\r\n        \"name\": \"Michigan\",\r\n        \"abbreviation\": \"MI\"\r\n    },\r\n    {\r\n        \"name\": \"Minnesota\",\r\n        \"abbreviation\": \"MN\"\r\n    },\r\n    {\r\n        \"name\": \"Mississippi\",\r\n        \"abbreviation\": \"MS\"\r\n    },\r\n    {\r\n        \"name\": \"Missouri\",\r\n        \"abbreviation\": \"MO\"\r\n    },\r\n    {\r\n        \"name\": \"Montana\",\r\n        \"abbreviation\": \"MT\"\r\n    },\r\n    {\r\n        \"name\": \"Nebraska\",\r\n        \"abbreviation\": \"NE\"\r\n    },\r\n    {\r\n        \"name\": \"Nevada\",\r\n        \"abbreviation\": \"NV\"\r\n    },\r\n    {\r\n        \"name\": \"New Hampshire\",\r\n        \"abbreviation\": \"NH\"\r\n    },\r\n    {\r\n        \"name\": \"New Jersey\",\r\n        \"abbreviation\": \"NJ\"\r\n    },\r\n    {\r\n        \"name\": \"New Mexico\",\r\n        \"abbreviation\": \"NM\"\r\n    },\r\n    {\r\n        \"name\": \"New York\",\r\n        \"abbreviation\": \"NY\"\r\n    },\r\n    {\r\n        \"name\": \"North Carolina\",\r\n        \"abbreviation\": \"NC\"\r\n    },\r\n    {\r\n        \"name\": \"North Dakota\",\r\n        \"abbreviation\": \"ND\"\r\n    },\r\n    {\r\n        \"name\": \"Northern Mariana Islands\",\r\n        \"abbreviation\": \"MP\"\r\n    },\r\n    {\r\n        \"name\": \"Ohio\",\r\n        \"abbreviation\": \"OH\"\r\n    },\r\n    {\r\n        \"name\": \"Oklahoma\",\r\n        \"abbreviation\": \"OK\"\r\n    },\r\n    {\r\n        \"name\": \"Oregon\",\r\n        \"abbreviation\": \"OR\"\r\n    },\r\n    {\r\n        \"name\": \"Palau\",\r\n        \"abbreviation\": \"PW\"\r\n    },\r\n    {\r\n        \"name\": \"Pennsylvania\",\r\n        \"abbreviation\": \"PA\"\r\n    },\r\n    {\r\n        \"name\": \"Puerto Rico\",\r\n        \"abbreviation\": \"PR\"\r\n    },\r\n    {\r\n        \"name\": \"Rhode Island\",\r\n        \"abbreviation\": \"RI\"\r\n    },\r\n    {\r\n        \"name\": \"South Carolina\",\r\n        \"abbreviation\": \"SC\"\r\n    },\r\n    {\r\n        \"name\": \"South Dakota\",\r\n        \"abbreviation\": \"SD\"\r\n    },\r\n    {\r\n        \"name\": \"Tennessee\",\r\n        \"abbreviation\": \"TN\"\r\n    },\r\n    {\r\n        \"name\": \"Texas\",\r\n        \"abbreviation\": \"TX\"\r\n    },\r\n    {\r\n        \"name\": \"Utah\",\r\n        \"abbreviation\": \"UT\"\r\n    },\r\n    {\r\n        \"name\": \"Vermont\",\r\n        \"abbreviation\": \"VT\"\r\n    },\r\n    {\r\n        \"name\": \"Virgin Islands\",\r\n        \"abbreviation\": \"VI\"\r\n    },\r\n    {\r\n        \"name\": \"Virginia\",\r\n        \"abbreviation\": \"VA\"\r\n    },\r\n    {\r\n        \"name\": \"Washington\",\r\n        \"abbreviation\": \"WA\"\r\n    },\r\n    {\r\n        \"name\": \"West Virginia\",\r\n        \"abbreviation\": \"WV\"\r\n    },\r\n    {\r\n        \"name\": \"Wisconsin\",\r\n        \"abbreviation\": \"WI\"\r\n    },\r\n    {\r\n        \"name\": \"Wyoming\",\r\n        \"abbreviation\": \"WY\"\r\n    }\r\n];\r\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\r\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\r\n\r\n  public formTitleValue: any = '';\r\n  public serverUrlValue: any = '';\r\n  public forgetRouteingUrlValue: any = '';\r\n  public loginRouteingUrlValue: any = '';\r\n  public addEndpointValue: any = '';\r\n  public logoValue: any = '';\r\n\r\n\r\n  @Input()\r\n  set userType(typeval: any) {\r\n    this.typevalue = typeval;\r\n  }\r\n\r\n  @Input()         // Set the Form name\r\n  set formTitle(formTitleVal: any) {\r\n    this.formTitleValue = (formTitleVal) || '<no name set>';\r\n    this.formTitleValue = formTitleVal;\r\n    // console.log(this.formTitleValue);\r\n\r\n  }\r\n\r\n  @Input()        // setting the server url from project\r\n  set serverUrl(serverUrlVal: any) {\r\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\r\n    this.serverUrlValue = serverUrlVal;\r\n    // console.log(this.serverUrlValue);\r\n\r\n  }\r\n@Input()      // set the from logo\r\n\r\nset logo(logoVal : any) {\r\n  this.logoValue = logoVal;\r\n}\r\n\r\n\r\n  @Input()        // set the endpoint And source\r\n  public set addEndpoint(addEndpointVal: any) {\r\n    this.addEndpointValue = addEndpointVal;\r\n    console.log(this.addEndpointValue)\r\n  }\r\n\r\n\r\n  @Input()          // setting the navigate By Forget Password Url from project\r\n  set forgetRouteingUrl(routeingUrlval: any) {\r\n    this.forgetRouteingUrlValue = (routeingUrlval) || '<no name set>';\r\n    this.forgetRouteingUrlValue = routeingUrlval;\r\n    // console.log(this.forgetRouteingUrlValue);\r\n  }\r\n\r\n  @Input()          // setting the navigate By login Url from project\r\n  set loginRouteingUrl(routeingUrlval: any) {\r\n    this.loginRouteingUrlValue = (routeingUrlval) || '<no name set>';\r\n    this.loginRouteingUrlValue = routeingUrlval;\r\n    // console.log(this.loginRouteingUrlValue);\r\n  }\r\n\r\n\r\n\r\n  public signUpForm: FormGroup;\r\n\r\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public dialog: MatDialog, public apiService: ApiService) {\r\n    this.signUpForm = this.fb.group({\r\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\r\n      firstname: ['', Validators.required],\r\n      lastname: ['', Validators.required],\r\n      phone: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      confirmpassword:[null,Validators.required],\r\n      zip:[null,Validators.required],\r\n      city:[null,Validators.required],\r\n      state:[null,Validators.required],\r\n      companyname:[null],\r\n      designation:[null],\r\n      companywebsite:[null]\r\n    }, {\r\n        validator: matchingPasswords('password', 'confirmpassword')\r\n\r\n    });\r\n   // this.openDialog();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiService.clearServerUrl();       //  Clear the server url\r\n    setTimeout(() => {\r\n      this.apiService.setServerUrl(this.serverUrlValue);        //  set the server url\r\n    }, 50);\r\n    // console.log(this.serverURL);\r\n\r\n\r\n    this.apiService.clearaddEndpoint();       //  Clear the endpoint\r\n    setTimeout(() => {\r\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);   //  set the endpoint\r\n    }, 50);\r\n  }\r\n\r\n\r\n/********* Sign Up Form Submit start here*********/ \r\n  signUpFormSubmit() {\r\n   \r\n  \r\n    // use for validation checking\r\n    for (let x in this.signUpForm.controls) {\r\n      this.signUpForm.controls[x].markAsTouched();\r\n    }\r\n    if (this.signUpForm.valid) {\r\n      if (this.signUpForm.value.confirmpassword != null) {\r\n                delete this.signUpForm.value.confirmpassword;\r\n              }\r\n\r\n              let allData: any = this.signUpForm.value;\r\n              allData.type = this.typevalue;\r\n              console.log(allData);\r\n      \r\n      // let link: any = this.fullUrlValue;\r\n      let data: any = {\r\n        'data': allData,\r\n        \"source\": this.addEndpointValue.source\r\n      };\r\n      console.log(data);\r\n      this.apiService.addData(data).subscribe((response) => {\r\n        let result: any = {};\r\n        result = response;\r\n        console.log(result);\r\n\r\n        if (result.status == \"success\") {\r\n          \r\n          this.openDialog();\r\n          setTimeout(()=>{\r\n            this.dialog.closeAll();\r\n          },3000);\r\n           this.router.navigateByUrl('/login' )     // navigate to dashboard url y\r\n          // this is use for reset the from\r\n          this.formDirective.resetForm();\r\n        } else {\r\n          // display error message on html\r\n          this.message = result.msg;\r\n        }\r\n      })\r\n\r\n    }\r\n  }\r\n\r\n  openDialog() {\r\n   \r\n    const dialogRef = this.dialog.open(commonModalComponent, {\r\n      width: '250px',\r\n      data: {name: 'this.name', animal: this.animal}\r\n    });\r\n  \r\n    dialogRef.afterClosed().subscribe(result => {\r\n      \r\n      this.animal = result;\r\n    });\r\n  }\r\n\r\n\r\n\r\n\r\n/********* Sign Up Form Submit end here*********/ \r\n\r\n  // This is use for navigate this component to forget component \r\n  forgetpassword() {\r\n    this.router.navigateByUrl('/' + this.forgetRouteingUrlValue);\r\n  }\r\n\r\n\r\n  // This is use for navigate this component to forget component \r\n  login() {\r\n    this.router.navigateByUrl('/' + this.loginRouteingUrlValue);\r\n  }\r\n\r\n  inputUntouched(val: any) {\r\n    this.signUpForm.controls[val].markAsUntouched();\r\n  }\r\n \r\n}\r\n\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'commonModal',\r\n  templateUrl: '../commonModal/commonModal.html',\r\n\r\n})\r\nexport class commonModalComponent {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<commonModalComponent>,\r\n  @Inject(MAT_DIALOG_DATA) public data: DialogData) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\r\nexport function matchingPasswords(passwordKey: string, confirmPasswordKey: string) {\r\n    return (group: any): {\r\n        [key: string]: any\r\n    } => {\r\n        let password = group.controls[passwordKey];\r\n        let confirmPassword = group.controls[confirmPasswordKey];\r\n\r\n        if (password.value !== confirmPassword.value) {\r\n            return {\r\n                mismatchedPasswords: true\r\n            };\r\n        }\r\n    }\r\n}","import { Component, OnInit, Input, ViewChild } from '@angular/core';\r\nimport { FormGroup, FormBuilder, Validators, FormGroupDirective } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from '../api.service';\r\n\r\n@Component({\r\n  selector: 'lib-forget-password',\r\n  templateUrl: './forget-password.component.html',\r\n  styleUrls: ['./forget-password.component.css']\r\n})\r\nexport class ForgetPasswordComponent implements OnInit {\r\n  public message: any = '';\r\n\r\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\r\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\r\n\r\n  public forgetPasswordForm: FormGroup;\r\n  public formTitleValue: any = '';\r\n  public serverUrlValue: any = '';\r\n  public signUpRouteingUrlValue: any = '';\r\n  private domanUrlValue: any = '';\r\n  public addEndpointValue: any = '';\r\n  public logoValue: any = '';\r\n\r\n\r\n  @Input()         // Set the project email Doman URL\r\n  set domanUrl(domanUrlVal: any) {\r\n    this.domanUrlValue = (domanUrlVal) || '<no name set>';\r\n    this.domanUrlValue = domanUrlVal;\r\n    console.log(this.domanUrlValue);\r\n  }\r\n  @Input()         // Set the project name\r\n  set formTitle(formTitleVal: any) {\r\n    this.formTitleValue = (formTitleVal) || '<no name set>';\r\n    this.formTitleValue = formTitleVal;\r\n\r\n  }\r\n\r\n  @Input()        // setting the server url from project\r\n  set serverUrl(serverUrlVal: any) {\r\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\r\n    this.serverUrlValue = serverUrlVal;\r\n\r\n  }\r\n\r\n  @Input()      // set the from logo\r\n\r\nset logo(logoVal : any) {\r\n  this.logoValue = logoVal;\r\n}\r\n\r\n  @Input()          // set the endpoint and source\r\n  \r\n  set addEndpoint(addEndpointval : any) {\r\n    this.addEndpointValue = addEndpointval;\r\n  }\r\n  \r\n\r\n  @Input()          // setting the navigate By Sign Up Url from project\r\n  set signUpRouteingUrl(routeingUrlval: any) {\r\n    this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\r\n    this.signUpRouteingUrlValue = routeingUrlval;\r\n  }\r\n\r\n  constructor(public fb: FormBuilder, private http: HttpClient, public router: Router, public apiService:ApiService) {\r\n\r\n  \r\n\r\n    this.forgetPasswordForm = this.fb.group({\r\n      email: ['', Validators.compose([Validators.required, Validators.pattern(/^\\s*[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\@[\\w\\-\\+_]+\\.[\\w\\-\\+_]+(\\.[\\w\\-\\+_]+)*\\s*$/)])],\r\n\r\n    });\r\n  \r\n\r\n\r\n  \r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiService.clearServerUrl();       //  Clear the server url\r\n    setTimeout(() => {\r\n      this.apiService.setServerUrl(this.serverUrlValue);        //  set the server url\r\n    }, 50);\r\n    // console.log(this.serverURL);\r\n\r\n\r\n    this.apiService.clearaddEndpoint();       //  Clear the endpoint\r\n    setTimeout(() => {\r\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);   //  set the endpoint\r\n    }, 50);\r\n  }\r\n\r\n/********* Forget password  Form Submit start here*********/ \r\n  forgetPasswordSubmit() {\r\n    let x: any;\r\n    for (x in this.forgetPasswordForm.controls) {\r\n      this.forgetPasswordForm.controls[x].markAsTouched();\r\n    }\r\n    if (this.forgetPasswordForm.valid) {\r\n      let link: any = this.serverUrlValue;\r\n      let data: any = this.forgetPasswordForm.value;\r\n\r\n      data.domanUrl = this.domanUrlValue;\r\n\r\n      this.apiService.forgetPassword(data).subscribe((response) =>{\r\n        console.log(response);\r\n        let result: any = {};\r\n        result = response;\r\n\r\n        \r\n        if (result.status == \"success\") {\r\n          // this is use for reset the from\r\n          this.formDirective.resetForm();\r\n        } else{\r\n\r\n           // display error message on html\r\n          this.message = result.msg;\r\n\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n/********* Forget password  Form Submit end here*********/ \r\n\r\n  // This is use for navigate this component to sign-Up component \r\n  signup() {\r\n    this.router.navigateByUrl('/' + this.signUpRouteingUrlValue);\r\n  }\r\n\r\n\r\n  inputUntouched(val: any) {\r\n    this.forgetPasswordForm.controls[val].markAsUntouched();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, Input, ViewChild, Inject } from '@angular/core';\r\nimport { FormBuilder, Validators, FormGroup, FormGroupDirective } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ApiService } from '../api.service';\r\nimport{CookieService} from 'ngx-cookie-service';\r\n@Component({\r\n  selector: 'lib-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\n\r\n\r\n\r\nexport class ResetPasswordComponent implements OnInit {\r\n  //   FormGroupDirective: It is a directive that binds an existing FormGroup to a DOM element.\r\n  @ViewChild(FormGroupDirective) formDirective: FormGroupDirective;\r\n  public resetPasswordForm: FormGroup;\r\n  public fromTitleNameValue: any = '';\r\n  public serverUrlValue: any = '';\r\n  public message: any = '';\r\n  public addEndpointValue: any = '';\r\n\r\n  public logoValue: any = '';\r\n  // public signUpRouteingUrlValue: any = '';\r\n\r\n\r\n  @Input()         // Set the Form name\r\n  set fromTitleName(fromTitleNameVal: any) {\r\n    this.fromTitleNameValue = (fromTitleNameVal) || '<no name set>';\r\n    this.fromTitleNameValue = fromTitleNameVal;\r\n    console.log(this.fromTitleNameValue);\r\n\r\n  }\r\n\r\n\r\n  @Input()        // setting the server url from project\r\n  set serverUrl(serverUrlVal: any) {\r\n    this.serverUrlValue = (serverUrlVal) || '<no name set>';\r\n    this.serverUrlValue = serverUrlVal;\r\n    console.log(this.serverUrlValue);\r\n\r\n  }\r\n\r\n  @Input()        // set the endpoint and source\r\n\r\n  public set addEndpoint(addEndpointVal: any) {\r\n    this.addEndpointValue = addEndpointVal;\r\n  }\r\n\r\n  @Input()      // set the from logo\r\n\r\nset logo(logoVal : any) {\r\n  this.logoValue = logoVal;\r\n}\r\n\r\n\r\n  // @Input()          // setting the navigate By Sign Up Url from project\r\n  // set signUpRouteingUrl(routeingUrlval: any) {\r\n  //   this.signUpRouteingUrlValue = (routeingUrlval) || '<no name set>';\r\n  //   this.signUpRouteingUrlValue = routeingUrlval;\r\n  //   console.log(this.signUpRouteingUrlValue);\r\n  // }\r\n  public accesscode: string;\r\n\r\n  constructor(public fb: FormBuilder, public http: HttpClient, public router: Router, public route: ActivatedRoute, public apiService: ApiService,public cookieService :CookieService) {\r\n\r\n    this.route.params.subscribe(params => {\r\n\r\n      this.accesscode = params['token'];\r\n      console.log(this.accesscode);\r\n    })\r\n\r\n    this.resetPasswordForm = this.fb.group({\r\n      // password: ['',  Validators.compose([Validators.required, Validators.minLength(4)])],\r\n      password: ['', Validators.required],\r\n      confirmPassword: ['', Validators.required],\r\n    }, {\r\n      validator: this.machpassword('password', 'confirmPassword')\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.apiService.clearServerUrl();       // Clear the server url\r\n    setTimeout(() => {\r\n      this.apiService.setServerUrl(this.serverUrlValue);       // set the server url \r\n    }, 50);\r\n    // console.log(this.serverURL);\r\n\r\n\r\n    this.apiService.clearaddEndpoint();       // clear the endpoint \r\n    setTimeout(() => {\r\n      this.apiService.setaddEndpoint(this.addEndpointValue.endpoint);       // set the endpoint\r\n    }, 50);\r\n    // console.log(this.addEndpointData.endpoint);\r\n\r\n  }\r\n  //  this function is use for mach password and confirm Password \r\n\r\n  machpassword(passwordkye: string, confirmpasswordkye: string) {\r\n    return (group: FormGroup) => {\r\n      let passwordInput = group.controls[passwordkye],\r\n        confirmpasswordInput = group.controls[confirmpasswordkye];\r\n      if (passwordInput.value !== confirmpasswordInput.value) {\r\n        return confirmpasswordInput.setErrors({ notEquivalent: true });\r\n      }\r\n      else {\r\n        return confirmpasswordInput.setErrors(null);\r\n      }\r\n    };\r\n  }\r\n\r\n\r\n\r\n/********* Reset Password Form Submit start here*********/ \r\n  resetPasswordSubmit() {\r\n    //console.log(this.resetPasswordForm.value);\r\n    let x: any;\r\n    for (x in this.resetPasswordForm.controls) {\r\n      this.resetPasswordForm.controls[x].markAsTouched();\r\n    }\r\n    if (this.resetPasswordForm.valid) {\r\n      let data1: any = { \"password\": this.resetPasswordForm.value.password, \"id\": this.cookieService.get('user_id') }\r\n      let data: any = {\r\n        'data': data1,\r\n        \"source\": this.addEndpointValue.source\r\n      }\r\n\r\n\r\n      // data.accesscode = this.accesscode;\r\n\r\n      this.apiService.addData(data).subscribe((response) => {\r\n        let result: any = {};\r\n        result = response;\r\n        console.log(result);\r\n        if (result.status == \"success\") {\r\n          this.formDirective.resetForm();       // Use for reset the form\r\n        } else {\r\n          this.message = result.msg;\r\n        }\r\n\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n/********* Reset Password Form Submit end here*********/ \r\n\r\n\r\n  inputUntouched(val: any) {\r\n    this.resetPasswordForm.controls[val].markAsUntouched();\r\n  }\r\n\r\n\r\n\r\n\r\n}\r\n","import { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\r\nimport { LoginComponent } from './login.component';\r\nimport { DemoMaterialModule } from './material-module';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { SignUpComponent, commonModalComponent } from './sign-up/sign-up.component';\r\nimport { ForgetPasswordComponent } from './forget-password/forget-password.component';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { ApiService } from './api.service';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, SignUpComponent, ForgetPasswordComponent, ResetPasswordComponent, commonModalComponent],\r\n  imports: [\r\n    DemoMaterialModule,\r\n    FormsModule,\r\n     ReactiveFormsModule,\r\n     BrowserAnimationsModule,\r\n     CommonModule,\r\n     HttpClientModule\r\n  ],\r\n  exports: [LoginComponent, SignUpComponent, ForgetPasswordComponent, ResetPasswordComponent],\r\n  providers: [ApiService],\r\n  bootstrap: [],\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  entryComponents: [commonModalComponent]\r\n})\r\nexport class LoginModule { }\r\n"]}